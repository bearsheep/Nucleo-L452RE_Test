/** @file spica_registers.h
 ******************************************************************************
 *
 * @brief
 *    This module contains the register definitions for the device.
 *    Built on:   Mon Apr 12 13:25:48 2021 
 *    Build type: Public
 *
 ******************************************************************************
 * @author
 *    This file contains information that is proprietary and confidential to
 *    Inphi Corporation.
 *
 *    This file can be used under the terms of the Inphi Software License
 *    Agreement. You should have received a copy of the license with this file,
 *    if not please contact your Inphi support staff.
 *
 *    Copyright (C) 2006-2021 Inphi Corporation, Inc. All rights reserved.
 *
 *    API Version Number: 1.2.0.929
 *****************************************************************************/
#ifndef __SPICA_REGISTERS_H__
#define __SPICA_REGISTERS_H__
#include "inphi_types.h"

#ifdef __cplusplus
extern "C" {
#endif

// Forward declare register access methods
uint32_t spica_reg_read(uint32_t die, uint32_t addr);
void     spica_reg_write(uint32_t die, uint32_t addr, uint32_t data);
uint32_t spica_reg_rmw(uint32_t die, uint32_t addr, uint32_t data, uint32_t mask);

// Indirect Software Registers
uint32_t spica_ireg_read(uint32_t die, uint32_t addr);
void     spica_ireg_write(uint32_t die, uint32_t addr, uint32_t data);
uint32_t spica_ireg_rmw(uint32_t die, uint32_t addr, uint32_t data, uint32_t mask);

uint32_t spica_reg_channel_addr(uint32_t die, uint32_t channel, uint32_t addr); 
uint32_t spica_reg_channel_read(uint32_t die, uint32_t channel, uint32_t addr);
void     spica_reg_channel_write(uint32_t die, uint32_t channel, uint32_t addr, uint32_t data);
uint32_t spica_reg_channel_rmw(uint32_t die, uint32_t channel, uint32_t addr, uint32_t data, uint32_t mask);



#define SPICA_MMD08_PMA_CONTROL__ADDRESS                      0x80000
#define SPICA_MMD08_PMA_CONTROL__DEFAULT                      0x0
#define SPICA_MMD08_PMA_CONTROL__READ(die)                  spica_reg_read(die, SPICA_MMD08_PMA_CONTROL__ADDRESS)
#define SPICA_MMD08_PMA_CONTROL__WRITE(die, data)             spica_reg_write(die, SPICA_MMD08_PMA_CONTROL__ADDRESS, (data))
#define SPICA_MMD08_PMA_CONTROL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD08_PMA_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_MMD08_PMA_CONTROL__RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MMD08_PMA_CONTROL__RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MMD08_PMA_CONTROL__RESET__READ(die)                SPICA_MMD08_PMA_CONTROL__RESET__GET(SPICA_MMD08_PMA_CONTROL__READ(die))
#  define SPICA_MMD08_PMA_CONTROL__RESET__WRITE(die, fdata)           SPICA_MMD08_PMA_CONTROL__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MMD08_PMA_CONTROL__RESET__RMW(die, fdata)           SPICA_MMD08_PMA_CONTROL__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MMD08_PMA_CONTROL__RESET__MASK                       0x1
#  define SPICA_MMD08_PMA_CONTROL__RESET__OFFSET                     15
#  define SPICA_MMD08_PMA_CONTROL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8000) | (((uint32_t)(fdata) << 0) & 0x7fff))
#  define SPICA_MMD08_PMA_CONTROL__RSRVD1__GET(rdata)                (((rdata) >> 0) & 0x7fff)
#  define SPICA_MMD08_PMA_CONTROL__RSRVD1__READ(die)                SPICA_MMD08_PMA_CONTROL__RSRVD1__GET(SPICA_MMD08_PMA_CONTROL__READ(die))
#  define SPICA_MMD08_PMA_CONTROL__RSRVD1__WRITE(die, fdata)           SPICA_MMD08_PMA_CONTROL__RMW(die, (fdata)<<0, 0x7fff)
#  define SPICA_MMD08_PMA_CONTROL__RSRVD1__RMW(die, fdata)           SPICA_MMD08_PMA_CONTROL__RMW(die, (fdata)<<0, 0x7fff)
#  define SPICA_MMD08_PMA_CONTROL__RSRVD1__MASK                       0x7fff
#  define SPICA_MMD08_PMA_CONTROL__RSRVD1__OFFSET                     0

#define SPICA_MMD30_DEVICE_ID_LOW__ADDRESS                      0x1e0002
#define SPICA_MMD30_DEVICE_ID_LOW__DEFAULT                      0x210
#define SPICA_MMD30_DEVICE_ID_LOW__READ(die)                  spica_reg_read(die, SPICA_MMD30_DEVICE_ID_LOW__ADDRESS)
#define SPICA_MMD30_DEVICE_ID_LOW__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_DEVICE_ID_LOW__ADDRESS, (data))
#define SPICA_MMD30_DEVICE_ID_LOW__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_DEVICE_ID_LOW__ADDRESS, (data), (mask))
#  define SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__READ(die)                SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__GET(SPICA_MMD30_DEVICE_ID_LOW__READ(die))
#  define SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__WRITE(die, fdata)           SPICA_MMD30_DEVICE_ID_LOW__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__RMW(die, fdata)           SPICA_MMD30_DEVICE_ID_LOW__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__MASK                       0xffff
#  define SPICA_MMD30_DEVICE_ID_LOW__OUI_3_18__OFFSET                     0

#define SPICA_MMD30_DEVICE_ID_HIGH__ADDRESS                      0x1e0003
#define SPICA_MMD30_DEVICE_ID_HIGH__DEFAULT                      0x76f0
#define SPICA_MMD30_DEVICE_ID_HIGH__READ(die)                  spica_reg_read(die, SPICA_MMD30_DEVICE_ID_HIGH__ADDRESS)
#define SPICA_MMD30_DEVICE_ID_HIGH__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_DEVICE_ID_HIGH__ADDRESS, (data))
#define SPICA_MMD30_DEVICE_ID_HIGH__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_DEVICE_ID_HIGH__ADDRESS, (data), (mask))
#  define SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__READ(die)                SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__GET(SPICA_MMD30_DEVICE_ID_HIGH__READ(die))
#  define SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__WRITE(die, fdata)           SPICA_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<10, 0xfc00)
#  define SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__RMW(die, fdata)           SPICA_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<10, 0xfc00)
#  define SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__MASK                       0x3f
#  define SPICA_MMD30_DEVICE_ID_HIGH__OUI_19_24__OFFSET                     10
#  define SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__SET(rdata, fdata)         (((rdata) & 0xfc0f) | (((uint32_t)(fdata) << 4) & 0x3f0))
#  define SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__GET(rdata)                (((rdata) >> 4) & 0x3f)
#  define SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__READ(die)                SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__GET(SPICA_MMD30_DEVICE_ID_HIGH__READ(die))
#  define SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__WRITE(die, fdata)           SPICA_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<4, 0x3f0)
#  define SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__RMW(die, fdata)           SPICA_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<4, 0x3f0)
#  define SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__MASK                       0x3f
#  define SPICA_MMD30_DEVICE_ID_HIGH__MODEL_NUMBER__OFFSET                     4
#  define SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__READ(die)                SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__GET(SPICA_MMD30_DEVICE_ID_HIGH__READ(die))
#  define SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__WRITE(die, fdata)           SPICA_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__RMW(die, fdata)           SPICA_MMD30_DEVICE_ID_HIGH__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__MASK                       0xf
#  define SPICA_MMD30_DEVICE_ID_HIGH__REVISION_CODE__OFFSET                     0

#define SPICA_MMD30_CHIP_ID__ADDRESS                      0x1e0004
#define SPICA_MMD30_CHIP_ID__DEFAULT                      0x0
#define SPICA_MMD30_CHIP_ID__READ(die)                  spica_reg_read(die, SPICA_MMD30_CHIP_ID__ADDRESS)
#define SPICA_MMD30_CHIP_ID__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_CHIP_ID__ADDRESS, (data))
#define SPICA_MMD30_CHIP_ID__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_CHIP_ID__ADDRESS, (data), (mask))
#  define SPICA_MMD30_CHIP_ID__ID__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MMD30_CHIP_ID__ID__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MMD30_CHIP_ID__ID__READ(die)                SPICA_MMD30_CHIP_ID__ID__GET(SPICA_MMD30_CHIP_ID__READ(die))
#  define SPICA_MMD30_CHIP_ID__ID__WRITE(die, fdata)           SPICA_MMD30_CHIP_ID__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_CHIP_ID__ID__RMW(die, fdata)           SPICA_MMD30_CHIP_ID__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_CHIP_ID__ID__MASK                       0xffff
#  define SPICA_MMD30_CHIP_ID__ID__OFFSET                     0

#define SPICA_MMD30_RESET_CFG__ADDRESS                      0x1e000a
#define SPICA_MMD30_RESET_CFG__DEFAULT                      0x0
#define SPICA_MMD30_RESET_CFG__READ(die)                  spica_reg_read(die, SPICA_MMD30_RESET_CFG__ADDRESS)
#define SPICA_MMD30_RESET_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_RESET_CFG__ADDRESS, (data))
#define SPICA_MMD30_RESET_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_RESET_CFG__ADDRESS, (data), (mask))
#  define SPICA_MMD30_RESET_CFG__MCU_SR__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MMD30_RESET_CFG__MCU_SR__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MMD30_RESET_CFG__MCU_SR__READ(die)                SPICA_MMD30_RESET_CFG__MCU_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__MCU_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MMD30_RESET_CFG__MCU_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MMD30_RESET_CFG__MCU_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__MCU_SR__OFFSET                     15
#  define SPICA_MMD30_RESET_CFG__DATAPATH_SR__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MMD30_RESET_CFG__DATAPATH_SR__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MMD30_RESET_CFG__DATAPATH_SR__READ(die)                SPICA_MMD30_RESET_CFG__DATAPATH_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__DATAPATH_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MMD30_RESET_CFG__DATAPATH_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MMD30_RESET_CFG__DATAPATH_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__DATAPATH_SR__OFFSET                     14
#  define SPICA_MMD30_RESET_CFG__PMON_SR__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MMD30_RESET_CFG__PMON_SR__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MMD30_RESET_CFG__PMON_SR__READ(die)                SPICA_MMD30_RESET_CFG__PMON_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__PMON_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MMD30_RESET_CFG__PMON_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MMD30_RESET_CFG__PMON_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__PMON_SR__OFFSET                     13
#  define SPICA_MMD30_RESET_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MMD30_RESET_CFG__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MMD30_RESET_CFG__RSRVD1__READ(die)                SPICA_MMD30_RESET_CFG__RSRVD1__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__RSRVD1__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MMD30_RESET_CFG__RSRVD1__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MMD30_RESET_CFG__RSRVD1__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__RSRVD1__OFFSET                     12
#  define SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__READ(die)                SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__ERU1_BIAS_SR__OFFSET                     11
#  define SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__READ(die)                SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__ERU0_BIAS_SR__OFFSET                     10
#  define SPICA_MMD30_RESET_CFG__RPLL1_SR__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MMD30_RESET_CFG__RPLL1_SR__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MMD30_RESET_CFG__RPLL1_SR__READ(die)                SPICA_MMD30_RESET_CFG__RPLL1_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__RPLL1_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_MMD30_RESET_CFG__RPLL1_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_MMD30_RESET_CFG__RPLL1_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__RPLL1_SR__OFFSET                     9
#  define SPICA_MMD30_RESET_CFG__RPLL0_SR__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MMD30_RESET_CFG__RPLL0_SR__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MMD30_RESET_CFG__RPLL0_SR__READ(die)                SPICA_MMD30_RESET_CFG__RPLL0_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__RPLL0_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MMD30_RESET_CFG__RPLL0_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MMD30_RESET_CFG__RPLL0_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__RPLL0_SR__OFFSET                     8
#  define SPICA_MMD30_RESET_CFG__OIMC_SR__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MMD30_RESET_CFG__OIMC_SR__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MMD30_RESET_CFG__OIMC_SR__READ(die)                SPICA_MMD30_RESET_CFG__OIMC_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__OIMC_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<7, 0x80)
#  define SPICA_MMD30_RESET_CFG__OIMC_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<7, 0x80)
#  define SPICA_MMD30_RESET_CFG__OIMC_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__OIMC_SR__OFFSET                     7
#  define SPICA_MMD30_RESET_CFG__DP_MUX_SR__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MMD30_RESET_CFG__DP_MUX_SR__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MMD30_RESET_CFG__DP_MUX_SR__READ(die)                SPICA_MMD30_RESET_CFG__DP_MUX_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__DP_MUX_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<6, 0x40)
#  define SPICA_MMD30_RESET_CFG__DP_MUX_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<6, 0x40)
#  define SPICA_MMD30_RESET_CFG__DP_MUX_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__DP_MUX_SR__OFFSET                     6
#  define SPICA_MMD30_RESET_CFG__ERU_SR__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MMD30_RESET_CFG__ERU_SR__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MMD30_RESET_CFG__ERU_SR__READ(die)                SPICA_MMD30_RESET_CFG__ERU_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__ERU_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_MMD30_RESET_CFG__ERU_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_MMD30_RESET_CFG__ERU_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__ERU_SR__OFFSET                     5
#  define SPICA_MMD30_RESET_CFG__SRX_SR__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MMD30_RESET_CFG__SRX_SR__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MMD30_RESET_CFG__SRX_SR__READ(die)                SPICA_MMD30_RESET_CFG__SRX_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__SRX_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MMD30_RESET_CFG__SRX_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MMD30_RESET_CFG__SRX_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__SRX_SR__OFFSET                     4
#  define SPICA_MMD30_RESET_CFG__SMTX_SR__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MMD30_RESET_CFG__SMTX_SR__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MMD30_RESET_CFG__SMTX_SR__READ(die)                SPICA_MMD30_RESET_CFG__SMTX_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__SMTX_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MMD30_RESET_CFG__SMTX_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MMD30_RESET_CFG__SMTX_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__SMTX_SR__OFFSET                     3
#  define SPICA_MMD30_RESET_CFG__MRX_SR__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MMD30_RESET_CFG__MRX_SR__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MMD30_RESET_CFG__MRX_SR__READ(die)                SPICA_MMD30_RESET_CFG__MRX_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__MRX_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MMD30_RESET_CFG__MRX_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MMD30_RESET_CFG__MRX_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__MRX_SR__OFFSET                     2
#  define SPICA_MMD30_RESET_CFG__OTX_SR__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MMD30_RESET_CFG__OTX_SR__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MMD30_RESET_CFG__OTX_SR__READ(die)                SPICA_MMD30_RESET_CFG__OTX_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__OTX_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MMD30_RESET_CFG__OTX_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MMD30_RESET_CFG__OTX_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__OTX_SR__OFFSET                     1
#  define SPICA_MMD30_RESET_CFG__ORX_SR__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MMD30_RESET_CFG__ORX_SR__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MMD30_RESET_CFG__ORX_SR__READ(die)                SPICA_MMD30_RESET_CFG__ORX_SR__GET(SPICA_MMD30_RESET_CFG__READ(die))
#  define SPICA_MMD30_RESET_CFG__ORX_SR__WRITE(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MMD30_RESET_CFG__ORX_SR__RMW(die, fdata)           SPICA_MMD30_RESET_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MMD30_RESET_CFG__ORX_SR__MASK                       0x1
#  define SPICA_MMD30_RESET_CFG__ORX_SR__OFFSET                     0

#define SPICA_MMD30_SW_COUNTER_CFG__ADDRESS                      0x1e0025
#define SPICA_MMD30_SW_COUNTER_CFG__DEFAULT                      0x64
#define SPICA_MMD30_SW_COUNTER_CFG__READ(die)                  spica_reg_read(die, SPICA_MMD30_SW_COUNTER_CFG__ADDRESS)
#define SPICA_MMD30_SW_COUNTER_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_SW_COUNTER_CFG__ADDRESS, (data))
#define SPICA_MMD30_SW_COUNTER_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_SW_COUNTER_CFG__ADDRESS, (data), (mask))
#  define SPICA_MMD30_SW_COUNTER_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MMD30_SW_COUNTER_CFG__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MMD30_SW_COUNTER_CFG__ENABLE__READ(die)                SPICA_MMD30_SW_COUNTER_CFG__ENABLE__GET(SPICA_MMD30_SW_COUNTER_CFG__READ(die))
#  define SPICA_MMD30_SW_COUNTER_CFG__ENABLE__WRITE(die, fdata)           SPICA_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MMD30_SW_COUNTER_CFG__ENABLE__RMW(die, fdata)           SPICA_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MMD30_SW_COUNTER_CFG__ENABLE__MASK                       0x1
#  define SPICA_MMD30_SW_COUNTER_CFG__ENABLE__OFFSET                     15
#  define SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__SET(rdata, fdata)         (((rdata) & 0x8000) | (((uint32_t)(fdata) << 0) & 0x7fff))
#  define SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__GET(rdata)                (((rdata) >> 0) & 0x7fff)
#  define SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__READ(die)                SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__GET(SPICA_MMD30_SW_COUNTER_CFG__READ(die))
#  define SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__WRITE(die, fdata)           SPICA_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__RMW(die, fdata)           SPICA_MMD30_SW_COUNTER_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__MASK                       0x7fff
#  define SPICA_MMD30_SW_COUNTER_CFG__PRESCALE__OFFSET                     0

#define SPICA_MMD30_SW_COUNTER_STATUS0__ADDRESS                      0x1e0026
#define SPICA_MMD30_SW_COUNTER_STATUS0__DEFAULT                      0x0
#define SPICA_MMD30_SW_COUNTER_STATUS0__READ(die)                  spica_reg_read(die, SPICA_MMD30_SW_COUNTER_STATUS0__ADDRESS)
#define SPICA_MMD30_SW_COUNTER_STATUS0__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_SW_COUNTER_STATUS0__ADDRESS, (data))
#define SPICA_MMD30_SW_COUNTER_STATUS0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_SW_COUNTER_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__READ(die)                SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__GET(SPICA_MMD30_SW_COUNTER_STATUS0__READ(die))
#  define SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__WRITE(die, fdata)           SPICA_MMD30_SW_COUNTER_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__RMW(die, fdata)           SPICA_MMD30_SW_COUNTER_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__MASK                       0xffff
#  define SPICA_MMD30_SW_COUNTER_STATUS0__COUNT__OFFSET                     0

#define SPICA_MMD30_SW_COUNTER_STATUS1__ADDRESS                      0x1e0027
#define SPICA_MMD30_SW_COUNTER_STATUS1__DEFAULT                      0x0
#define SPICA_MMD30_SW_COUNTER_STATUS1__READ(die)                  spica_reg_read(die, SPICA_MMD30_SW_COUNTER_STATUS1__ADDRESS)
#define SPICA_MMD30_SW_COUNTER_STATUS1__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_SW_COUNTER_STATUS1__ADDRESS, (data))
#define SPICA_MMD30_SW_COUNTER_STATUS1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_SW_COUNTER_STATUS1__ADDRESS, (data), (mask))
#  define SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__READ(die)                SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__GET(SPICA_MMD30_SW_COUNTER_STATUS1__READ(die))
#  define SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__WRITE(die, fdata)           SPICA_MMD30_SW_COUNTER_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__RMW(die, fdata)           SPICA_MMD30_SW_COUNTER_STATUS1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__MASK                       0xffff
#  define SPICA_MMD30_SW_COUNTER_STATUS1__COUNT__OFFSET                     0

#define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__ADDRESS                      0x1e005a
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__DEFAULT                      0x0
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__READ(die)                  spica_reg_read(die, SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__ADDRESS)
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__ADDRESS, (data))
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__ADDRESS, (data), (mask))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<14, 0xc000)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<14, 0xc000)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__MASK                       0x3
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD1__OFFSET                     14
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<8, 0x3f00)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<8, 0x3f00)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__MASK                       0x3f
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFV_EN__OFFSET                     8
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff07) | (((uint32_t)(fdata) << 3) & 0xf8))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__GET(rdata)                (((rdata) >> 3) & 0x1f)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<3, 0xf8)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<3, 0xf8)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__MASK                       0x1f
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RSRVD2__OFFSET                     3
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__MASK                       0x7
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_EN__PMRBUFH_EN__OFFSET                     0

#define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__ADDRESS                      0x1e005b
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__DEFAULT                      0x0
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__READ(die)                  spica_reg_read(die, SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__ADDRESS)
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__WRITE(die, data)             spica_reg_write(die, SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__ADDRESS, (data))
#define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__ADDRESS, (data), (mask))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__MASK                       0xf
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD1__OFFSET                     12
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<8, 0xf00)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<8, 0xf00)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__MASK                       0xf
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXV_SEL__OFFSET                     8
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<7, 0x80)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<7, 0x80)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__MASK                       0x1
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RSRVD2__OFFSET                     7
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__READ(die)                SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__GET(SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__READ(die))
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__WRITE(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<0, 0x7f)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__RMW(die, fdata)           SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__RMW(die, (fdata)<<0, 0x7f)
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__MASK                       0x7f
#  define SPICA_MMD30_GCK_RECOV_CLK_PMR_SEL__PMRMUXH_SEL__OFFSET                     0

#define SPICA_EFUSE_GENERAL0_CFG__ADDRESS                      0x1e0400
#define SPICA_EFUSE_GENERAL0_CFG__DEFAULT                      0x0
#define SPICA_EFUSE_GENERAL0_CFG__READ(die)                  spica_reg_read(die, SPICA_EFUSE_GENERAL0_CFG__ADDRESS)
#define SPICA_EFUSE_GENERAL0_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_EFUSE_GENERAL0_CFG__ADDRESS, (data))
#define SPICA_EFUSE_GENERAL0_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_EFUSE_GENERAL0_CFG__ADDRESS, (data), (mask))
#  define SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__READ(die)                SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__GET(SPICA_EFUSE_GENERAL0_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__WRITE(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__RMW(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__MASK                       0x1
#  define SPICA_EFUSE_GENERAL0_CFG__EF_PRGM__OFFSET                     15
#  define SPICA_EFUSE_GENERAL0_CFG__FETCH__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_EFUSE_GENERAL0_CFG__FETCH__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_EFUSE_GENERAL0_CFG__FETCH__READ(die)                SPICA_EFUSE_GENERAL0_CFG__FETCH__GET(SPICA_EFUSE_GENERAL0_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL0_CFG__FETCH__WRITE(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_EFUSE_GENERAL0_CFG__FETCH__RMW(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_EFUSE_GENERAL0_CFG__FETCH__MASK                       0x1
#  define SPICA_EFUSE_GENERAL0_CFG__FETCH__OFFSET                     14
#  define SPICA_EFUSE_GENERAL0_CFG__EF_READ__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_EFUSE_GENERAL0_CFG__EF_READ__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_EFUSE_GENERAL0_CFG__EF_READ__READ(die)                SPICA_EFUSE_GENERAL0_CFG__EF_READ__GET(SPICA_EFUSE_GENERAL0_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL0_CFG__EF_READ__WRITE(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_EFUSE_GENERAL0_CFG__EF_READ__RMW(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_EFUSE_GENERAL0_CFG__EF_READ__MASK                       0x1
#  define SPICA_EFUSE_GENERAL0_CFG__EF_READ__OFFSET                     13
#  define SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__READ(die)                SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__GET(SPICA_EFUSE_GENERAL0_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__WRITE(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__RMW(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__MASK                       0x1f
#  define SPICA_EFUSE_GENERAL0_CFG__BIT_ADDRESS__OFFSET                     8
#  define SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__READ(die)                SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__GET(SPICA_EFUSE_GENERAL0_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__WRITE(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__RMW(die, fdata)           SPICA_EFUSE_GENERAL0_CFG__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__MASK                       0xff
#  define SPICA_EFUSE_GENERAL0_CFG__WORD_ADDRESS__OFFSET                     0

#define SPICA_EFUSE_GENERAL1_CFG__ADDRESS                      0x1e0401
#define SPICA_EFUSE_GENERAL1_CFG__DEFAULT                      0x0
#define SPICA_EFUSE_GENERAL1_CFG__READ(die)                  spica_reg_read(die, SPICA_EFUSE_GENERAL1_CFG__ADDRESS)
#define SPICA_EFUSE_GENERAL1_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_EFUSE_GENERAL1_CFG__ADDRESS, (data))
#define SPICA_EFUSE_GENERAL1_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_EFUSE_GENERAL1_CFG__ADDRESS, (data), (mask))
#  define SPICA_EFUSE_GENERAL1_CFG__POWER_UP__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_EFUSE_GENERAL1_CFG__POWER_UP__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_EFUSE_GENERAL1_CFG__POWER_UP__READ(die)                SPICA_EFUSE_GENERAL1_CFG__POWER_UP__GET(SPICA_EFUSE_GENERAL1_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL1_CFG__POWER_UP__WRITE(die, fdata)           SPICA_EFUSE_GENERAL1_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_EFUSE_GENERAL1_CFG__POWER_UP__RMW(die, fdata)           SPICA_EFUSE_GENERAL1_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_EFUSE_GENERAL1_CFG__POWER_UP__MASK                       0x1
#  define SPICA_EFUSE_GENERAL1_CFG__POWER_UP__OFFSET                     15
#  define SPICA_EFUSE_GENERAL1_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8001) | (((uint32_t)(fdata) << 1) & 0x7ffe))
#  define SPICA_EFUSE_GENERAL1_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x3fff)
#  define SPICA_EFUSE_GENERAL1_CFG__RSRVD1__READ(die)                SPICA_EFUSE_GENERAL1_CFG__RSRVD1__GET(SPICA_EFUSE_GENERAL1_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL1_CFG__RSRVD1__WRITE(die, fdata)           SPICA_EFUSE_GENERAL1_CFG__RMW(die, (fdata)<<1, 0x7ffe)
#  define SPICA_EFUSE_GENERAL1_CFG__RSRVD1__RMW(die, fdata)           SPICA_EFUSE_GENERAL1_CFG__RMW(die, (fdata)<<1, 0x7ffe)
#  define SPICA_EFUSE_GENERAL1_CFG__RSRVD1__MASK                       0x3fff
#  define SPICA_EFUSE_GENERAL1_CFG__RSRVD1__OFFSET                     1
#  define SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__READ(die)                SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__GET(SPICA_EFUSE_GENERAL1_CFG__READ(die))
#  define SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__WRITE(die, fdata)           SPICA_EFUSE_GENERAL1_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__RMW(die, fdata)           SPICA_EFUSE_GENERAL1_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__MASK                       0x1
#  define SPICA_EFUSE_GENERAL1_CFG__MARGIN_MODE__OFFSET                     0

#define SPICA_EFUSE_EF__ADDRESS                      0x1e0500
#define SPICA_EFUSE_EF__DEFAULT                      0x0
#define SPICA_EFUSE_EF__READ(die)                  spica_reg_read(die, SPICA_EFUSE_EF__ADDRESS)
#define SPICA_EFUSE_EF__WRITE(die, data)             spica_reg_write(die, SPICA_EFUSE_EF__ADDRESS, (data))
#define SPICA_EFUSE_EF__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_EFUSE_EF__ADDRESS, (data), (mask))
#  define SPICA_EFUSE_EF__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_EFUSE_EF__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_EFUSE_EF__DATA__READ(die)                SPICA_EFUSE_EF__DATA__GET(SPICA_EFUSE_EF__READ(die))
#  define SPICA_EFUSE_EF__DATA__WRITE(die, fdata)           SPICA_EFUSE_EF__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_EFUSE_EF__DATA__RMW(die, fdata)           SPICA_EFUSE_EF__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_EFUSE_EF__DATA__MASK                       0xffff
#  define SPICA_EFUSE_EF__DATA__OFFSET                     0

#define SPICA_SRX_RXD_CLKEN__ADDRESS                      0x1e1100
#define SPICA_SRX_RXD_CLKEN__DEFAULT                      0x0
#define SPICA_SRX_RXD_CLKEN__ICOUNT                        15
#define SPICA_SRX_RXD_CLKEN__ISPAN                         0x200
#define SPICA_SRX_RXD_CLKEN__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_CLKEN__ADDRESS)
#define SPICA_SRX_RXD_CLKEN__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_CLKEN__ADDRESS)
#define SPICA_SRX_RXD_CLKEN__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_CLKEN__ADDRESS, (data))
#define SPICA_SRX_RXD_CLKEN__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_CLKEN__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_CLKEN__VCOTUNE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_CLKEN__VCOTUNE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__VCOTUNE__READ(die, channel)         SPICA_SRX_RXD_CLKEN__VCOTUNE__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__VCOTUNE__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_CLKEN__VCOTUNE__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_CLKEN__VCOTUNE__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__VCOTUNE__OFFSET                     15
#  define SPICA_SRX_RXD_CLKEN__AGC_DSM__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_RXD_CLKEN__AGC_DSM__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__AGC_DSM__READ(die, channel)         SPICA_SRX_RXD_CLKEN__AGC_DSM__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__AGC_DSM__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_CLKEN__AGC_DSM__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_CLKEN__AGC_DSM__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__AGC_DSM__OFFSET                     14
#  define SPICA_SRX_RXD_CLKEN__AUX__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RXD_CLKEN__AUX__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__AUX__READ(die, channel)         SPICA_SRX_RXD_CLKEN__AUX__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__AUX__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_CLKEN__AUX__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_CLKEN__AUX__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__AUX__OFFSET                     13
#  define SPICA_SRX_RXD_CLKEN__SDM__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXD_CLKEN__SDM__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__SDM__READ(die, channel)         SPICA_SRX_RXD_CLKEN__SDM__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__SDM__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_CLKEN__SDM__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_CLKEN__SDM__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__SDM__OFFSET                     12
#  define SPICA_SRX_RXD_CLKEN__EM_ACC__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_RXD_CLKEN__EM_ACC__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__EM_ACC__READ(die, channel)         SPICA_SRX_RXD_CLKEN__EM_ACC__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__EM_ACC__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXD_CLKEN__EM_ACC__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXD_CLKEN__EM_ACC__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__EM_ACC__OFFSET                     11
#  define SPICA_SRX_RXD_CLKEN__EM__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_RXD_CLKEN__EM__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__EM__READ(die, channel)         SPICA_SRX_RXD_CLKEN__EM__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__EM__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXD_CLKEN__EM__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXD_CLKEN__EM__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__EM__OFFSET                     10
#  define SPICA_SRX_RXD_CLKEN__CHK__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_RXD_CLKEN__CHK__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__CHK__READ(die, channel)         SPICA_SRX_RXD_CLKEN__CHK__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__CHK__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_CLKEN__CHK__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_CLKEN__CHK__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__CHK__OFFSET                     9
#  define SPICA_SRX_RXD_CLKEN__AGC__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_RXD_CLKEN__AGC__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__AGC__READ(die, channel)         SPICA_SRX_RXD_CLKEN__AGC__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__AGC__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_CLKEN__AGC__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_CLKEN__AGC__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__AGC__OFFSET                     8
#  define SPICA_SRX_RXD_CLKEN__CMFB__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_RXD_CLKEN__CMFB__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__CMFB__READ(die, channel)         SPICA_SRX_RXD_CLKEN__CMFB__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__CMFB__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXD_CLKEN__CMFB__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXD_CLKEN__CMFB__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__CMFB__OFFSET                     7
#  define SPICA_SRX_RXD_CLKEN__SRX_REF__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SRX_RXD_CLKEN__SRX_REF__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__SRX_REF__READ(die, channel)         SPICA_SRX_RXD_CLKEN__SRX_REF__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__SRX_REF__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RXD_CLKEN__SRX_REF__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RXD_CLKEN__SRX_REF__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__SRX_REF__OFFSET                     6
#  define SPICA_SRX_RXD_CLKEN__SRX_VCO__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SRX_RXD_CLKEN__SRX_VCO__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__SRX_VCO__READ(die, channel)         SPICA_SRX_RXD_CLKEN__SRX_VCO__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__SRX_VCO__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXD_CLKEN__SRX_VCO__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXD_CLKEN__SRX_VCO__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__SRX_VCO__OFFSET                     5
#  define SPICA_SRX_RXD_CLKEN__CID__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RXD_CLKEN__CID__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__CID__READ(die, channel)         SPICA_SRX_RXD_CLKEN__CID__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__CID__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXD_CLKEN__CID__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXD_CLKEN__CID__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__CID__OFFSET                     4
#  define SPICA_SRX_RXD_CLKEN__OP__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_RXD_CLKEN__OP__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__OP__READ(die, channel)         SPICA_SRX_RXD_CLKEN__OP__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__OP__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXD_CLKEN__OP__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXD_CLKEN__OP__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__OP__OFFSET                     3
#  define SPICA_SRX_RXD_CLKEN__LB__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SRX_RXD_CLKEN__LB__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__LB__READ(die, channel)         SPICA_SRX_RXD_CLKEN__LB__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__LB__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXD_CLKEN__LB__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXD_CLKEN__LB__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__LB__OFFSET                     2
#  define SPICA_SRX_RXD_CLKEN__DSP__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_RXD_CLKEN__DSP__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__DSP__READ(die, channel)         SPICA_SRX_RXD_CLKEN__DSP__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__DSP__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_CLKEN__DSP__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_CLKEN__DSP__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__DSP__OFFSET                     1
#  define SPICA_SRX_RXD_CLKEN__SRX_DP__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_RXD_CLKEN__SRX_DP__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_RXD_CLKEN__SRX_DP__READ(die, channel)         SPICA_SRX_RXD_CLKEN__SRX_DP__GET(SPICA_SRX_RXD_CLKEN__READ(die, channel))
#  define SPICA_SRX_RXD_CLKEN__SRX_DP__WRITE(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_CLKEN__SRX_DP__RMW(die, channel, fdata) SPICA_SRX_RXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_CLKEN__SRX_DP__MASK                       0x1
#  define SPICA_SRX_RXD_CLKEN__SRX_DP__OFFSET                     0

#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__ADDRESS                      0x1e1106
#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DEFAULT                      0x0
#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__ICOUNT                        15
#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__ISPAN                         0x200
#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__ADDRESS)
#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__ADDRESS)
#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__ADDRESS, (data))
#define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__GET(SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__WRITE_ENA__OFFSET                     15
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x801f) | (((uint32_t)(fdata) << 5) & 0x7fe0))
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x3ff)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__GET(SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<5, 0x7fe0)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<5, 0x7fe0)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__MASK                       0x3ff
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RSRVD1__OFFSET                     5
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__GET(SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__MASK                       0x1f
#  define SPICA_SRX_RXD_IDAC_ACCESS_CTRL_CFG__DAC_SEL__OFFSET                     0

#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__ADDRESS                      0x1e1107
#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__DEFAULT                      0x1000
#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__ICOUNT                        15
#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__ISPAN                         0x200
#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__ADDRESS)
#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__ADDRESS)
#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__ADDRESS, (data))
#define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__GET(SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD1__OFFSET                     14
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__GET(SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__OFFSET                     13
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__GET(SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__OFFSET                     12
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__GET(SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__MASK                       0xf
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RSRVD2__OFFSET                     8
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__GET(SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__MASK                       0xff
#  define SPICA_SRX_RXD_IDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__OFFSET                     0

#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ADDRESS                      0x1e1108
#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__DEFAULT                      0x0
#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ICOUNT                        15
#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ISPAN                         0x200
#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ADDRESS)
#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ADDRESS)
#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ADDRESS, (data))
#define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__GET(SPICA_SRX_RXD_IDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__MASK                       0x1
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__SEL_VALID__OFFSET                     15
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__GET(SPICA_SRX_RXD_IDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__MASK                       0x1
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__ENA__OFFSET                     14
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__GET(SPICA_SRX_RXD_IDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__OPEN_ENA__OFFSET                     13
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__GET(SPICA_SRX_RXD_IDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__MASK                       0x1f
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RSRVD1__OFFSET                     8
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__READ(die, channel)         SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__GET(SPICA_SRX_RXD_IDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_IDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__MASK                       0xff
#  define SPICA_SRX_RXD_IDAC_ACCESS_STATUS__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__ADDRESS                      0x1e110a
#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DEFAULT                      0x0
#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__ICOUNT                        15
#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__ISPAN                         0x200
#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__ADDRESS)
#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__ADDRESS)
#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__ADDRESS, (data))
#define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__GET(SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__WRITE_ENA__OFFSET                     15
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x801f) | (((uint32_t)(fdata) << 5) & 0x7fe0))
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x3ff)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__GET(SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<5, 0x7fe0)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<5, 0x7fe0)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__MASK                       0x3ff
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RSRVD1__OFFSET                     5
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__GET(SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__MASK                       0x1f
#  define SPICA_SRX_RXD_RDAC_ACCESS_CTRL_CFG__DAC_SEL__OFFSET                     0

#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__ADDRESS                      0x1e110b
#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__DEFAULT                      0x1000
#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__ICOUNT                        15
#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__ISPAN                         0x200
#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__ADDRESS)
#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__ADDRESS)
#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__ADDRESS, (data))
#define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__GET(SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD1__OFFSET                     14
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__GET(SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_ENA__OFFSET                     13
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__GET(SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_DAC_ENA__OFFSET                     12
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__GET(SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__MASK                       0x7
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RSRVD2__OFFSET                     9
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__GET(SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__MASK                       0x1ff
#  define SPICA_SRX_RXD_RDAC_ACCESS_DATA_CFG__WRITE_OPEN_VAL__OFFSET                     0

#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ADDRESS                      0x1e110c
#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__DEFAULT                      0x0
#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ICOUNT                        15
#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ISPAN                         0x200
#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ADDRESS)
#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ADDRESS)
#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ADDRESS, (data))
#define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__GET(SPICA_SRX_RXD_RDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__MASK                       0x1
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__SEL_VALID__OFFSET                     15
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__GET(SPICA_SRX_RXD_RDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__MASK                       0x1
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__ENA__OFFSET                     14
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__GET(SPICA_SRX_RXD_RDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__MASK                       0x1
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__OPEN_ENA__OFFSET                     13
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xe1ff) | (((uint32_t)(fdata) << 9) & 0x1e00))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0xf)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__GET(SPICA_SRX_RXD_RDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<9, 0x1e00)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<9, 0x1e00)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__MASK                       0xf
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RSRVD1__OFFSET                     9
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__READ(die, channel)         SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__GET(SPICA_SRX_RXD_RDAC_ACCESS_STATUS__READ(die, channel))
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_RDAC_ACCESS_STATUS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__MASK                       0x1ff
#  define SPICA_SRX_RXD_RDAC_ACCESS_STATUS__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_CFG__ADDRESS                      0x1e1113
#define SPICA_SRX_RXD_DP_CHK_CFG__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_CFG__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_CFG__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_CFG__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_CFG__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_CFG__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__GET(SPICA_SRX_RXD_DP_CHK_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__MASK                       0x1
#  define SPICA_SRX_RXD_DP_CHK_CFG__CNT_LATCH__OFFSET                     15
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x9fff) | (((uint32_t)(fdata) << 13) & 0x6000))
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x3)
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__GET(SPICA_SRX_RXD_DP_CHK_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD1__OFFSET                     13
#  define SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__GET(SPICA_SRX_RXD_DP_CHK_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__MASK                       0x1f
#  define SPICA_SRX_RXD_DP_CHK_CFG__OOS_THRESH__OFFSET                     8
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__GET(SPICA_SRX_RXD_DP_CHK_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__MASK                       0x3f
#  define SPICA_SRX_RXD_DP_CHK_CFG__RSRVD2__OFFSET                     2
#  define SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__GET(SPICA_SRX_RXD_DP_CHK_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__MASK                       0x1
#  define SPICA_SRX_RXD_DP_CHK_CFG__FIXED_PAT_EN__OFFSET                     1
#  define SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__GET(SPICA_SRX_RXD_DP_CHK_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__MASK                       0x1
#  define SPICA_SRX_RXD_DP_CHK_CFG__PRBS_EN__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__ADDRESS                      0x1e1114
#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_PRBS_CFG__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_PRBS_CFG__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_PRBS_CFG__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_PRBS_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__GET(SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__MASK                       0x7
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RSRVD1__OFFSET                     13
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__GET(SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__MASK                       0x1
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__DUAL_PRBS__OFFSET                     12
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__MASK                       0x3
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__OFFSET                     10
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__MASK                       0x1
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__AUTO_POLARITY_EN__OFFSET                     9
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__GET(SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__MASK                       0x1
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_INV__OFFSET                     8
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__GET(SPICA_SRX_RXD_DP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__MASK                       0xf
#  define SPICA_SRX_RXD_DP_CHK_PRBS_CFG__PRBS_MODE__OFFSET                     0

#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__ADDRESS                      0x1e1115
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__DEFAULT                      0x3333
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__ICOUNT                        15
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__GET(SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__READ(die, channel))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG0__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__ADDRESS                      0x1e1116
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__DEFAULT                      0x3333
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__ICOUNT                        15
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__GET(SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__READ(die, channel))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG1__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__ADDRESS                      0x1e1117
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__DEFAULT                      0x3333
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__ICOUNT                        15
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__GET(SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__READ(die, channel))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG2__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__ADDRESS                      0x1e1118
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__DEFAULT                      0x3333
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__ICOUNT                        15
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__ADDRESS)
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__GET(SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__READ(die, channel))
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_FIXED_PAT_VALUE_CFG3__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__ADDRESS                      0x1e1119
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_WORD_CNT0__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT0__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT0__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT0__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__GET(SPICA_SRX_RXD_DP_CHK_WORD_CNT0__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT0__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__ADDRESS                      0x1e111a
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_WORD_CNT1__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT1__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT1__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT1__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__GET(SPICA_SRX_RXD_DP_CHK_WORD_CNT1__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT1__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__ADDRESS                      0x1e111b
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_WORD_CNT2__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT2__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT2__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_WORD_CNT2__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__GET(SPICA_SRX_RXD_DP_CHK_WORD_CNT2__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_CHK_WORD_CNT2__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__ADDRESS                      0x1e111c
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__GET(SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT0__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__ADDRESS                      0x1e111d
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__GET(SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_CNT1__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS                      0x1e111e
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT0__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS                      0x1e111f
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__DEFAULT                      0x0
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__ICOUNT                        15
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__ISPAN                         0x200
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data))
#define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__READ(die, channel)         SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel))
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__RMW(die, channel, fdata) SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__MASK                       0xffff
#  define SPICA_SRX_RXD_DP_CHK_BIT_ERROR_ODD_CNT1__VALUE__OFFSET                     0

#define SPICA_SRX_RXD_INT__ADDRESS                      0x1e115e
#define SPICA_SRX_RXD_INT__DEFAULT                      0x0
#define SPICA_SRX_RXD_INT__ICOUNT                        15
#define SPICA_SRX_RXD_INT__ISPAN                         0x200
#define SPICA_SRX_RXD_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_INT__ADDRESS)
#define SPICA_SRX_RXD_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_INT__ADDRESS)
#define SPICA_SRX_RXD_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_INT__ADDRESS, (data))
#define SPICA_SRX_RXD_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_INT__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_INT__LOS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_INT__LOS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_INT__LOS__READ(die, channel)         SPICA_SRX_RXD_INT__LOS__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__LOS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_INT__LOS__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_INT__LOS__MASK                       0x1
#  define SPICA_SRX_RXD_INT__LOS__OFFSET                     15
#  define SPICA_SRX_RXD_INT__DSP_ENGINE__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_RXD_INT__DSP_ENGINE__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_RXD_INT__DSP_ENGINE__READ(die, channel)         SPICA_SRX_RXD_INT__DSP_ENGINE__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DSP_ENGINE__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_INT__DSP_ENGINE__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_INT__DSP_ENGINE__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DSP_ENGINE__OFFSET                     14
#  define SPICA_SRX_RXD_INT__DSP_LMS__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RXD_INT__DSP_LMS__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RXD_INT__DSP_LMS__READ(die, channel)         SPICA_SRX_RXD_INT__DSP_LMS__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DSP_LMS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_INT__DSP_LMS__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_INT__DSP_LMS__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DSP_LMS__OFFSET                     13
#  define SPICA_SRX_RXD_INT__EYEMON__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXD_INT__EYEMON__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXD_INT__EYEMON__READ(die, channel)         SPICA_SRX_RXD_INT__EYEMON__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__EYEMON__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_INT__EYEMON__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_INT__EYEMON__MASK                       0x1
#  define SPICA_SRX_RXD_INT__EYEMON__OFFSET                     12
#  define SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__READ(die, channel)         SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__MASK                       0x1
#  define SPICA_SRX_RXD_INT__FCAL_WDT_TIMEOUT__OFFSET                     11
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__READ(die, channel)         SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__MASK                       0x1
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_BAD_VCO_CLK__OFFSET                     10
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__READ(die, channel)         SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__MASK                       0x1
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK_FILTERED__OFFSET                     9
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__READ(die, channel)         SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__MASK                       0x1
#  define SPICA_SRX_RXD_INT__CTRL_LOCKDET_LOCK__OFFSET                     8
#  define SPICA_SRX_RXD_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_RXD_INT__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_RXD_INT__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_INT__RSRVD1__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXD_INT__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXD_INT__RSRVD1__MASK                       0x1
#  define SPICA_SRX_RXD_INT__RSRVD1__OFFSET                     7
#  define SPICA_SRX_RXD_INT__HOLDOVER_EN__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SRX_RXD_INT__HOLDOVER_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SRX_RXD_INT__HOLDOVER_EN__READ(die, channel)         SPICA_SRX_RXD_INT__HOLDOVER_EN__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__HOLDOVER_EN__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RXD_INT__HOLDOVER_EN__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RXD_INT__HOLDOVER_EN__MASK                       0x1
#  define SPICA_SRX_RXD_INT__HOLDOVER_EN__OFFSET                     6
#  define SPICA_SRX_RXD_INT__DP_CID_DETECTED__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SRX_RXD_INT__DP_CID_DETECTED__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SRX_RXD_INT__DP_CID_DETECTED__READ(die, channel)         SPICA_SRX_RXD_INT__DP_CID_DETECTED__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DP_CID_DETECTED__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXD_INT__DP_CID_DETECTED__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXD_INT__DP_CID_DETECTED__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DP_CID_DETECTED__OFFSET                     5
#  define SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__READ(die, channel)         SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DP_FIXED_PAT_SYNC__OFFSET                     4
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__READ(die, channel)         SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV_ODD__OFFSET                     3
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__READ(die, channel)         SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC_ODD__OFFSET                     2
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__READ(die, channel)         SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DP_PRBS_POLARITY_INV__OFFSET                     1
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC__READ(die, channel)         SPICA_SRX_RXD_INT__DP_PRBS_SYNC__GET(SPICA_SRX_RXD_INT__READ(die, channel))
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC__WRITE(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC__RMW(die, channel, fdata) SPICA_SRX_RXD_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC__MASK                       0x1
#  define SPICA_SRX_RXD_INT__DP_PRBS_SYNC__OFFSET                     0

#define SPICA_SRX_RXD_INTS__ADDRESS                      0x1e1160
#define SPICA_SRX_RXD_INTS__DEFAULT                      0x0
#define SPICA_SRX_RXD_INTS__ICOUNT                        15
#define SPICA_SRX_RXD_INTS__ISPAN                         0x200
#define SPICA_SRX_RXD_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXD_INTS__ADDRESS)
#define SPICA_SRX_RXD_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXD_INTS__ADDRESS)
#define SPICA_SRX_RXD_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXD_INTS__ADDRESS, (data))
#define SPICA_SRX_RXD_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXD_INTS__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXD_INTS__LOSS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RXD_INTS__LOSS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RXD_INTS__LOSS__READ(die, channel)         SPICA_SRX_RXD_INTS__LOSS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__LOSS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_INTS__LOSS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RXD_INTS__LOSS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__LOSS__OFFSET                     15
#  define SPICA_SRX_RXD_INTS__DSP_ENGINES__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_RXD_INTS__DSP_ENGINES__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_RXD_INTS__DSP_ENGINES__READ(die, channel)         SPICA_SRX_RXD_INTS__DSP_ENGINES__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DSP_ENGINES__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_INTS__DSP_ENGINES__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RXD_INTS__DSP_ENGINES__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DSP_ENGINES__OFFSET                     14
#  define SPICA_SRX_RXD_INTS__DSP_LMSS__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RXD_INTS__DSP_LMSS__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RXD_INTS__DSP_LMSS__READ(die, channel)         SPICA_SRX_RXD_INTS__DSP_LMSS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DSP_LMSS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_INTS__DSP_LMSS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RXD_INTS__DSP_LMSS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DSP_LMSS__OFFSET                     13
#  define SPICA_SRX_RXD_INTS__EYEMONS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXD_INTS__EYEMONS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXD_INTS__EYEMONS__READ(die, channel)         SPICA_SRX_RXD_INTS__EYEMONS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__EYEMONS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_INTS__EYEMONS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXD_INTS__EYEMONS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__EYEMONS__OFFSET                     12
#  define SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__READ(die, channel)         SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__FCAL_WDT_TIMEOUTS__OFFSET                     11
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__READ(die, channel)         SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_BAD_VCO_CLKS__OFFSET                     10
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__READ(die, channel)         SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCK_FILTEREDS__OFFSET                     9
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__READ(die, channel)         SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__CTRL_LOCKDET_LOCKS__OFFSET                     8
#  define SPICA_SRX_RXD_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_RXD_INTS__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_RXD_INTS__RSRVD1__READ(die, channel)         SPICA_SRX_RXD_INTS__RSRVD1__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXD_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXD_INTS__RSRVD1__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__RSRVD1__OFFSET                     7
#  define SPICA_SRX_RXD_INTS__HOLDOVER_ENS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SRX_RXD_INTS__HOLDOVER_ENS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SRX_RXD_INTS__HOLDOVER_ENS__READ(die, channel)         SPICA_SRX_RXD_INTS__HOLDOVER_ENS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__HOLDOVER_ENS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RXD_INTS__HOLDOVER_ENS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RXD_INTS__HOLDOVER_ENS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__HOLDOVER_ENS__OFFSET                     6
#  define SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__READ(die, channel)         SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DP_CID_DETECTEDS__OFFSET                     5
#  define SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__READ(die, channel)         SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DP_FIXED_PAT_SYNCS__OFFSET                     4
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__READ(die, channel)         SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INV_ODDS__OFFSET                     3
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__READ(die, channel)         SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNC_ODDS__OFFSET                     2
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__READ(die, channel)         SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DP_PRBS_POLARITY_INVS__OFFSET                     1
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__READ(die, channel)         SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__GET(SPICA_SRX_RXD_INTS__READ(die, channel))
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__WRITE(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__RMW(die, channel, fdata) SPICA_SRX_RXD_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__MASK                       0x1
#  define SPICA_SRX_RXD_INTS__DP_PRBS_SYNCS__OFFSET                     0

#define SPICA_SRX_RXA_AFE_CTLE_CFG__ADDRESS                      0x1e1185
#define SPICA_SRX_RXA_AFE_CTLE_CFG__DEFAULT                      0x707
#define SPICA_SRX_RXA_AFE_CTLE_CFG__ICOUNT                        15
#define SPICA_SRX_RXA_AFE_CTLE_CFG__ISPAN                         0x200
#define SPICA_SRX_RXA_AFE_CTLE_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXA_AFE_CTLE_CFG__ADDRESS)
#define SPICA_SRX_RXA_AFE_CTLE_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXA_AFE_CTLE_CFG__ADDRESS)
#define SPICA_SRX_RXA_AFE_CTLE_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXA_AFE_CTLE_CFG__ADDRESS, (data))
#define SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXA_AFE_CTLE_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__GET(SPICA_SRX_RXA_AFE_CTLE_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__MASK                       0x7
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD1__OFFSET                     13
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__READ(die, channel)         SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__GET(SPICA_SRX_RXA_AFE_CTLE_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__MASK                       0x1
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE_L2R__OFFSET                     12
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__READ(die, channel)         SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__GET(SPICA_SRX_RXA_AFE_CTLE_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__MASK                       0xf
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_CSTUNE__OFFSET                     8
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__GET(SPICA_SRX_RXA_AFE_CTLE_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__MASK                       0x7
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__RSRVD2__OFFSET                     5
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__READ(die, channel)         SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__GET(SPICA_SRX_RXA_AFE_CTLE_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__MASK                       0x1
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE_L2R__OFFSET                     4
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__READ(die, channel)         SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__GET(SPICA_SRX_RXA_AFE_CTLE_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_CTLE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__MASK                       0xf
#  define SPICA_SRX_RXA_AFE_CTLE_CFG__SRX_AGC_CTLE_RSTUNE__OFFSET                     0

#define SPICA_SRX_RXA_AFE_LFEQ_CFG__ADDRESS                      0x1e1186
#define SPICA_SRX_RXA_AFE_LFEQ_CFG__DEFAULT                      0x70e
#define SPICA_SRX_RXA_AFE_LFEQ_CFG__ICOUNT                        15
#define SPICA_SRX_RXA_AFE_LFEQ_CFG__ISPAN                         0x200
#define SPICA_SRX_RXA_AFE_LFEQ_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXA_AFE_LFEQ_CFG__ADDRESS)
#define SPICA_SRX_RXA_AFE_LFEQ_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXA_AFE_LFEQ_CFG__ADDRESS)
#define SPICA_SRX_RXA_AFE_LFEQ_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXA_AFE_LFEQ_CFG__ADDRESS, (data))
#define SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXA_AFE_LFEQ_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__GET(SPICA_SRX_RXA_AFE_LFEQ_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__MASK                       0x7
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD1__OFFSET                     13
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__READ(die, channel)         SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__GET(SPICA_SRX_RXA_AFE_LFEQ_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__MASK                       0x1
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ_L2R__OFFSET                     12
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__READ(die, channel)         SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__GET(SPICA_SRX_RXA_AFE_LFEQ_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__MASK                       0xf
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_PEAK_ADJ__OFFSET                     8
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__GET(SPICA_SRX_RXA_AFE_LFEQ_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__MASK                       0x7
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__RSRVD2__OFFSET                     5
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__READ(die, channel)         SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__GET(SPICA_SRX_RXA_AFE_LFEQ_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__MASK                       0x1
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ_L2R__OFFSET                     4
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__READ(die, channel)         SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__GET(SPICA_SRX_RXA_AFE_LFEQ_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__WRITE(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__RMW(die, channel, fdata) SPICA_SRX_RXA_AFE_LFEQ_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__MASK                       0xf
#  define SPICA_SRX_RXA_AFE_LFEQ_CFG__SRX_AGC_LFEQ_POLE_ADJ__OFFSET                     0

#define SPICA_SRX_RXA_DMUX_CFG__ADDRESS                      0x1e1191
#define SPICA_SRX_RXA_DMUX_CFG__DEFAULT                      0x13f
#define SPICA_SRX_RXA_DMUX_CFG__ICOUNT                        15
#define SPICA_SRX_RXA_DMUX_CFG__ISPAN                         0x200
#define SPICA_SRX_RXA_DMUX_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXA_DMUX_CFG__ADDRESS)
#define SPICA_SRX_RXA_DMUX_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXA_DMUX_CFG__ADDRESS)
#define SPICA_SRX_RXA_DMUX_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXA_DMUX_CFG__ADDRESS, (data))
#define SPICA_SRX_RXA_DMUX_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXA_DMUX_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__MASK                       0xf
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_TST_SEL__OFFSET                     12
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__RSRVD1__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD1__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD1__OFFSET                     11
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYEM_EN__OFFSET                     10
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLK_EN__OFFSET                     9
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_EYECLKINV_EN__OFFSET                     8
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD2__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__RSRVD2__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD2__MASK                       0x3
#  define SPICA_SRX_RXA_DMUX_CFG__RSRVD2__OFFSET                     6
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_DIV_EN__OFFSET                     5
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_ERR_EN__OFFSET                     4
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLKINV_EN__OFFSET                     3
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_CLK_EN__OFFSET                     2
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_MSB_EN__OFFSET                     1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__READ(die, channel)         SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__GET(SPICA_SRX_RXA_DMUX_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_DMUX_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__MASK                       0x1
#  define SPICA_SRX_RXA_DMUX_CFG__SRX_DMX_LSB_EN__OFFSET                     0

#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__ADDRESS                      0x1e1196
#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__DEFAULT                      0x420a
#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__ICOUNT                        15
#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__ISPAN                         0x200
#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXA_FRAC_DIVIDER_CFG__ADDRESS)
#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXA_FRAC_DIVIDER_CFG__ADDRESS)
#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXA_FRAC_DIVIDER_CFG__ADDRESS, (data))
#define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXA_FRAC_DIVIDER_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__MASK                       0xf
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBCLK_SEL__OFFSET                     12
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__MASK                       0x1
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD1__OFFSET                     11
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__MASK                       0x1
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_FRAC_FBSDM_CLK_INV__OFFSET                     10
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__MASK                       0x1
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_2X_EN__OFFSET                     9
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__MASK                       0x1
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_EN__OFFSET                     8
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__MASK                       0x3
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RSRVD2__OFFSET                     6
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__MASK                       0x3
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO_PFRAC__OFFSET                     4
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__READ(die, channel)         SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__GET(SPICA_SRX_RXA_FRAC_DIVIDER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__WRITE(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__RMW(die, channel, fdata) SPICA_SRX_RXA_FRAC_DIVIDER_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__MASK                       0xf
#  define SPICA_SRX_RXA_FRAC_DIVIDER_CFG__SRX_AUX_DIV_RATIO__OFFSET                     0

#define SPICA_SRX_RXA_SAMPLER_CFG__ADDRESS                      0x1e11a5
#define SPICA_SRX_RXA_SAMPLER_CFG__DEFAULT                      0xf0
#define SPICA_SRX_RXA_SAMPLER_CFG__ICOUNT                        15
#define SPICA_SRX_RXA_SAMPLER_CFG__ISPAN                         0x200
#define SPICA_SRX_RXA_SAMPLER_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXA_SAMPLER_CFG__ADDRESS)
#define SPICA_SRX_RXA_SAMPLER_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXA_SAMPLER_CFG__ADDRESS)
#define SPICA_SRX_RXA_SAMPLER_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXA_SAMPLER_CFG__ADDRESS, (data))
#define SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXA_SAMPLER_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__GET(SPICA_SRX_RXA_SAMPLER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__MASK                       0x7
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD1__OFFSET                     13
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__READ(die, channel)         SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__GET(SPICA_SRX_RXA_SAMPLER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__MASK                       0x1
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_CAL_SAMPLERS_EN__OFFSET                     12
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__GET(SPICA_SRX_RXA_SAMPLER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__MASK                       0xf
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD2__OFFSET                     8
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__READ(die, channel)         SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__GET(SPICA_SRX_RXA_SAMPLER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__MASK                       0xf
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_SLICER_EN__OFFSET                     4
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__READ(die, channel)         SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__GET(SPICA_SRX_RXA_SAMPLER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__MASK                       0x1
#  define SPICA_SRX_RXA_SAMPLER_CFG__RSRVD3__OFFSET                     3
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__READ(die, channel)         SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__GET(SPICA_SRX_RXA_SAMPLER_CFG__READ(die, channel))
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__WRITE(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__RMW(die, channel, fdata) SPICA_SRX_RXA_SAMPLER_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__MASK                       0x7
#  define SPICA_SRX_RXA_SAMPLER_CFG__SRX_PATH_SEL__OFFSET                     0

#define SPICA_SRX_DSP_FE_CFG__ADDRESS                      0x1e120d
#define SPICA_SRX_DSP_FE_CFG__DEFAULT                      0x300
#define SPICA_SRX_DSP_FE_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_FE_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_FE_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_FE_CFG__ADDRESS)
#define SPICA_SRX_DSP_FE_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_FE_CFG__ADDRESS)
#define SPICA_SRX_DSP_FE_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_FE_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_FE_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_FE_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_FE_CFG__ERROR_INV__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_DSP_FE_CFG__ERROR_INV__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_INV__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__ERROR_INV__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__ERROR_INV__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_INV__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_INV__MASK                       0x1
#  define SPICA_SRX_DSP_FE_CFG__ERROR_INV__OFFSET                     12
#  define SPICA_SRX_DSP_FE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_DSP_FE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__RSRVD1__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD1__MASK                       0x1
#  define SPICA_SRX_DSP_FE_CFG__RSRVD1__OFFSET                     11
#  define SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__MASK                       0x1
#  define SPICA_SRX_DSP_FE_CFG__ERR_DMUX_SEL__OFFSET                     10
#  define SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__MASK                       0x3
#  define SPICA_SRX_DSP_FE_CFG__PHD_MODE_SEL__OFFSET                     8
#  define SPICA_SRX_DSP_FE_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_DSP_FE_CFG__RSRVD2__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__RSRVD2__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD2__MASK                       0x1
#  define SPICA_SRX_DSP_FE_CFG__RSRVD2__OFFSET                     7
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__MASK                       0x7
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_ODD__OFFSET                     4
#  define SPICA_SRX_DSP_FE_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_DSP_FE_CFG__RSRVD3__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD3__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__RSRVD3__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_DSP_FE_CFG__RSRVD3__MASK                       0x1
#  define SPICA_SRX_DSP_FE_CFG__RSRVD3__OFFSET                     3
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__READ(die, channel)         SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__GET(SPICA_SRX_DSP_FE_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__WRITE(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__RMW(die, channel, fdata) SPICA_SRX_DSP_FE_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__MASK                       0x7
#  define SPICA_SRX_DSP_FE_CFG__ERROR_REF_LEVEL_EVN__OFFSET                     0

#define SPICA_SRX_DSP_SE0_CFG__ADDRESS                      0x1e1238
#define SPICA_SRX_DSP_SE0_CFG__DEFAULT                      0x710
#define SPICA_SRX_DSP_SE0_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE0_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE0_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE0_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE0_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE0_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE0_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE0_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__RSRVD1__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD1__OFFSET                     14
#  define SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__MASK                       0x3
#  define SPICA_SRX_DSP_SE0_CFG__ERROR_MODE__OFFSET                     12
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__RSRVD2__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD2__MASK                       0x1
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD2__OFFSET                     11
#  define SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__MASK                       0x7
#  define SPICA_SRX_DSP_SE0_CFG__QUAL_MODE__OFFSET                     8
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD3__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD3__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__RSRVD3__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD3__MASK                       0x1
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD3__OFFSET                     7
#  define SPICA_SRX_DSP_SE0_CFG__DUR_SEL__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_SRX_DSP_SE0_CFG__DUR_SEL__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_SRX_DSP_SE0_CFG__DUR_SEL__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__DUR_SEL__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__DUR_SEL__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_SRX_DSP_SE0_CFG__DUR_SEL__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_SRX_DSP_SE0_CFG__DUR_SEL__MASK                       0x7
#  define SPICA_SRX_DSP_SE0_CFG__DUR_SEL__OFFSET                     4
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD4__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD4__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__RSRVD4__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD4__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD4__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD4__MASK                       0x7
#  define SPICA_SRX_DSP_SE0_CFG__RSRVD4__OFFSET                     1
#  define SPICA_SRX_DSP_SE0_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_DSP_SE0_CFG__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_DSP_SE0_CFG__ENABLE__READ(die, channel)         SPICA_SRX_DSP_SE0_CFG__ENABLE__GET(SPICA_SRX_DSP_SE0_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CFG__ENABLE__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_DSP_SE0_CFG__ENABLE__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_DSP_SE0_CFG__ENABLE__MASK                       0x1
#  define SPICA_SRX_DSP_SE0_CFG__ENABLE__OFFSET                     0

#define SPICA_SRX_DSP_SE0_SHIFT_CFG__ADDRESS                      0x1e1239
#define SPICA_SRX_DSP_SE0_SHIFT_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE0_SHIFT_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE0_SHIFT_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE0_SHIFT_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE0_SHIFT_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_SHIFT_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE0_SHIFT_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_SHIFT_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE0_SHIFT_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE0_SHIFT_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__GET(SPICA_SRX_DSP_SE0_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD1__OFFSET                     14
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__READ(die, channel)         SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__GET(SPICA_SRX_DSP_SE0_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__MASK                       0x3f
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__DATA_SHIFT__OFFSET                     8
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__GET(SPICA_SRX_DSP_SE0_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__MASK                       0xf
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__RSRVD2__OFFSET                     4
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__READ(die, channel)         SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__GET(SPICA_SRX_DSP_SE0_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_SHIFT_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__MASK                       0xf
#  define SPICA_SRX_DSP_SE0_SHIFT_CFG__ERROR_SHIFT__OFFSET                     0

#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__ADDRESS                      0x1e123a
#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__READ(die, channel)         SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__GET(SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__MASK                       0xffff
#  define SPICA_SRX_DSP_SE0_CMP_STRING_MSB_CFG__CMP_STRING__OFFSET                     0

#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__ADDRESS                      0x1e123b
#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__READ(die, channel)         SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__GET(SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__MASK                       0xffff
#  define SPICA_SRX_DSP_SE0_CMP_STRING_LSB_CFG__CMP_STRING__OFFSET                     0

#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__ADDRESS                      0x1e123c
#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__READ(die, channel)         SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__GET(SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__MASK                       0xffff
#  define SPICA_SRX_DSP_SE0_CMP_MASK_MSB_CFG__CMP_MASK__OFFSET                     0

#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__ADDRESS                      0x1e123d
#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__READ(die, channel)         SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__GET(SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__RMW(die, channel, fdata) SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__MASK                       0xffff
#  define SPICA_SRX_DSP_SE0_CMP_MASK_LSB_CFG__CMP_MASK__OFFSET                     0

#define SPICA_SRX_DSP_SE1_CFG__ADDRESS                      0x1e1242
#define SPICA_SRX_DSP_SE1_CFG__DEFAULT                      0x710
#define SPICA_SRX_DSP_SE1_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE1_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE1_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE1_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE1_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE1_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE1_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE1_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__RSRVD1__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD1__OFFSET                     14
#  define SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__MASK                       0x3
#  define SPICA_SRX_DSP_SE1_CFG__ERROR_MODE__OFFSET                     12
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__RSRVD2__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD2__MASK                       0x1
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD2__OFFSET                     11
#  define SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__MASK                       0x7
#  define SPICA_SRX_DSP_SE1_CFG__QUAL_MODE__OFFSET                     8
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD3__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD3__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__RSRVD3__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD3__MASK                       0x1
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD3__OFFSET                     7
#  define SPICA_SRX_DSP_SE1_CFG__DUR_SEL__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_SRX_DSP_SE1_CFG__DUR_SEL__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_SRX_DSP_SE1_CFG__DUR_SEL__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__DUR_SEL__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__DUR_SEL__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_SRX_DSP_SE1_CFG__DUR_SEL__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_SRX_DSP_SE1_CFG__DUR_SEL__MASK                       0x7
#  define SPICA_SRX_DSP_SE1_CFG__DUR_SEL__OFFSET                     4
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD4__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD4__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__RSRVD4__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD4__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD4__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD4__MASK                       0x7
#  define SPICA_SRX_DSP_SE1_CFG__RSRVD4__OFFSET                     1
#  define SPICA_SRX_DSP_SE1_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_DSP_SE1_CFG__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_DSP_SE1_CFG__ENABLE__READ(die, channel)         SPICA_SRX_DSP_SE1_CFG__ENABLE__GET(SPICA_SRX_DSP_SE1_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CFG__ENABLE__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_DSP_SE1_CFG__ENABLE__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_DSP_SE1_CFG__ENABLE__MASK                       0x1
#  define SPICA_SRX_DSP_SE1_CFG__ENABLE__OFFSET                     0

#define SPICA_SRX_DSP_SE1_SHIFT_CFG__ADDRESS                      0x1e1243
#define SPICA_SRX_DSP_SE1_SHIFT_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE1_SHIFT_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE1_SHIFT_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE1_SHIFT_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE1_SHIFT_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_SHIFT_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE1_SHIFT_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_SHIFT_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE1_SHIFT_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE1_SHIFT_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__GET(SPICA_SRX_DSP_SE1_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD1__OFFSET                     14
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__READ(die, channel)         SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__GET(SPICA_SRX_DSP_SE1_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<8, 0x3f00)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__MASK                       0x3f
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__DATA_SHIFT__OFFSET                     8
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__GET(SPICA_SRX_DSP_SE1_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__MASK                       0xf
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__RSRVD2__OFFSET                     4
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__READ(die, channel)         SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__GET(SPICA_SRX_DSP_SE1_SHIFT_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_SHIFT_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__MASK                       0xf
#  define SPICA_SRX_DSP_SE1_SHIFT_CFG__ERROR_SHIFT__OFFSET                     0

#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__ADDRESS                      0x1e1244
#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__READ(die, channel)         SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__GET(SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__MASK                       0xffff
#  define SPICA_SRX_DSP_SE1_CMP_STRING_MSB_CFG__CMP_STRING__OFFSET                     0

#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__ADDRESS                      0x1e1245
#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__READ(die, channel)         SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__GET(SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__MASK                       0xffff
#  define SPICA_SRX_DSP_SE1_CMP_STRING_LSB_CFG__CMP_STRING__OFFSET                     0

#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__ADDRESS                      0x1e1246
#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__READ(die, channel)         SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__GET(SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__MASK                       0xffff
#  define SPICA_SRX_DSP_SE1_CMP_MASK_MSB_CFG__CMP_MASK__OFFSET                     0

#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__ADDRESS                      0x1e1247
#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__DEFAULT                      0x0
#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__ADDRESS)
#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__READ(die, channel)         SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__GET(SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__WRITE(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__RMW(die, channel, fdata) SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__MASK                       0xffff
#  define SPICA_SRX_DSP_SE1_CMP_MASK_LSB_CFG__CMP_MASK__OFFSET                     0

#define SPICA_SRX_DSP_PCT_GENERAL_CFG__ADDRESS                      0x1e124c
#define SPICA_SRX_DSP_PCT_GENERAL_CFG__DEFAULT                      0x100
#define SPICA_SRX_DSP_PCT_GENERAL_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_PCT_GENERAL_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_PCT_GENERAL_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_PCT_GENERAL_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_PCT_GENERAL_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_GENERAL_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_PCT_GENERAL_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_PCT_GENERAL_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_ODD__OFFSET                     15
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__ENABLE_EVEN__OFFSET                     14
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_ODD__OFFSET                     13
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_EVEN__OFFSET                     12
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LINEAR_MAX2MIN__OFFSET                     11
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_GT__OFFSET                     10
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__COMPARE_ONE_CNT__OFFSET                     9
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__READ(die, channel)         SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__GET(SPICA_SRX_DSP_PCT_GENERAL_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_GENERAL_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__MASK                       0x1ff
#  define SPICA_SRX_DSP_PCT_GENERAL_CFG__LOAD_VAL__OFFSET                     0

#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__ADDRESS                      0x1e124d
#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__DEFAULT                      0x2701
#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_PCT_PROPTIME_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_PCT_PROPTIME_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_PCT_PROPTIME_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_PCT_PROPTIME_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_PCT_PROPTIME_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__READ(die, channel)         SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__GET(SPICA_SRX_DSP_PCT_PROPTIME_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_PROPTIME_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_PROPTIME_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__MASK                       0xffff
#  define SPICA_SRX_DSP_PCT_PROPTIME_CFG__PROPAGATION_TIME__OFFSET                     0

#define SPICA_SRX_DSP_PCT_DESIRED_CFG__ADDRESS                      0x1e124e
#define SPICA_SRX_DSP_PCT_DESIRED_CFG__DEFAULT                      0x12df
#define SPICA_SRX_DSP_PCT_DESIRED_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_PCT_DESIRED_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_PCT_DESIRED_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_PCT_DESIRED_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_DESIRED_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_PCT_DESIRED_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_DESIRED_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_PCT_DESIRED_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_PCT_DESIRED_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__GET(SPICA_SRX_DSP_PCT_DESIRED_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD1__OFFSET                     15
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__SET(rdata, fdata)         (((rdata) & 0x8fff) | (((uint32_t)(fdata) << 12) & 0x7000))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__GET(rdata)                (((rdata) >> 12) & 0x7)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__READ(die, channel)         SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__GET(SPICA_SRX_DSP_PCT_DESIRED_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__MASK                       0x7
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__BISECT_DUR_SEL__OFFSET                     12
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__READ(die, channel)         SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__GET(SPICA_SRX_DSP_PCT_DESIRED_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__RSRVD2__OFFSET                     11
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__READ(die, channel)         SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__GET(SPICA_SRX_DSP_PCT_DESIRED_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__MASK                       0x7
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__LINEAR_DUR_SEL__OFFSET                     8
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__READ(die, channel)         SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__GET(SPICA_SRX_DSP_PCT_DESIRED_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_DESIRED_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__MASK                       0xff
#  define SPICA_SRX_DSP_PCT_DESIRED_CFG__PERCENTAGE__OFFSET                     0

#define SPICA_SRX_DSP_PCT_MIN_CFG__ADDRESS                      0x1e124f
#define SPICA_SRX_DSP_PCT_MIN_CFG__DEFAULT                      0x6800
#define SPICA_SRX_DSP_PCT_MIN_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_PCT_MIN_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_PCT_MIN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_PCT_MIN_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_MIN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_PCT_MIN_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_MIN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_PCT_MIN_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_PCT_MIN_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__READ(die, channel)         SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__GET(SPICA_SRX_DSP_PCT_MIN_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__MASK                       0xf
#  define SPICA_SRX_DSP_PCT_MIN_CFG__BISECT_ITERATIONS__OFFSET                     12
#  define SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__READ(die, channel)         SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__GET(SPICA_SRX_DSP_PCT_MIN_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__MASK                       0x1
#  define SPICA_SRX_DSP_PCT_MIN_CFG__USE_LINEAR__OFFSET                     11
#  define SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf9ff) | (((uint32_t)(fdata) << 9) & 0x600))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x3)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__GET(SPICA_SRX_DSP_PCT_MIN_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<9, 0x600)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<9, 0x600)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SRX_DSP_PCT_MIN_CFG__RSRVD1__OFFSET                     9
#  define SPICA_SRX_DSP_PCT_MIN_CFG__MIN__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__MIN__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__MIN__READ(die, channel)         SPICA_SRX_DSP_PCT_MIN_CFG__MIN__GET(SPICA_SRX_DSP_PCT_MIN_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_MIN_CFG__MIN__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__MIN__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_MIN_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_DSP_PCT_MIN_CFG__MIN__MASK                       0x1ff
#  define SPICA_SRX_DSP_PCT_MIN_CFG__MIN__OFFSET                     0

#define SPICA_SRX_DSP_PCT_MAX_CFG__ADDRESS                      0x1e1250
#define SPICA_SRX_DSP_PCT_MAX_CFG__DEFAULT                      0x11ff
#define SPICA_SRX_DSP_PCT_MAX_CFG__ICOUNT                        15
#define SPICA_SRX_DSP_PCT_MAX_CFG__ISPAN                         0x200
#define SPICA_SRX_DSP_PCT_MAX_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_PCT_MAX_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_MAX_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_PCT_MAX_CFG__ADDRESS)
#define SPICA_SRX_DSP_PCT_MAX_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_PCT_MAX_CFG__ADDRESS, (data))
#define SPICA_SRX_DSP_PCT_MAX_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_PCT_MAX_CFG__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__READ(die, channel)         SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__GET(SPICA_SRX_DSP_PCT_MAX_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_MAX_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_MAX_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__MASK                       0xf
#  define SPICA_SRX_DSP_PCT_MAX_CFG__LINEAR_STEP_SIZE__OFFSET                     12
#  define SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__GET(SPICA_SRX_DSP_PCT_MAX_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_MAX_CFG__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_MAX_CFG__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__MASK                       0x7
#  define SPICA_SRX_DSP_PCT_MAX_CFG__RSRVD1__OFFSET                     9
#  define SPICA_SRX_DSP_PCT_MAX_CFG__MAX__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SRX_DSP_PCT_MAX_CFG__MAX__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__MAX__READ(die, channel)         SPICA_SRX_DSP_PCT_MAX_CFG__MAX__GET(SPICA_SRX_DSP_PCT_MAX_CFG__READ(die, channel))
#  define SPICA_SRX_DSP_PCT_MAX_CFG__MAX__WRITE(die, channel, fdata) SPICA_SRX_DSP_PCT_MAX_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__MAX__RMW(die, channel, fdata) SPICA_SRX_DSP_PCT_MAX_CFG__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_DSP_PCT_MAX_CFG__MAX__MASK                       0x1ff
#  define SPICA_SRX_DSP_PCT_MAX_CFG__MAX__OFFSET                     0

#define SPICA_SRX_DSP_ENGINE_INT__ADDRESS                      0x1e1259
#define SPICA_SRX_DSP_ENGINE_INT__DEFAULT                      0x0
#define SPICA_SRX_DSP_ENGINE_INT__ICOUNT                        15
#define SPICA_SRX_DSP_ENGINE_INT__ISPAN                         0x200
#define SPICA_SRX_DSP_ENGINE_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DSP_ENGINE_INT__ADDRESS)
#define SPICA_SRX_DSP_ENGINE_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DSP_ENGINE_INT__ADDRESS)
#define SPICA_SRX_DSP_ENGINE_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DSP_ENGINE_INT__ADDRESS, (data))
#define SPICA_SRX_DSP_ENGINE_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DSP_ENGINE_INT__ADDRESS, (data), (mask))
#  define SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__ANY_ENABLED__OFFSET                     15
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD1__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__RSRVD1__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD1__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD1__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD1__MASK                       0x1f
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD1__OFFSET                     10
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_ODD__OFFSET                     9
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__PCT_DONE_EVEN__OFFSET                     8
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD2__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD2__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__RSRVD2__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD2__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD2__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD2__MASK                       0x3
#  define SPICA_SRX_DSP_ENGINE_INT__RSRVD2__OFFSET                     6
#  define SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__PUL_DONE__OFFSET                     5
#  define SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__AGC_DONE__OFFSET                     4
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_MORE_ONES__OFFSET                     3
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__SE1_DONE__OFFSET                     2
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_MORE_ONES__OFFSET                     1
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__READ(die, channel)         SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__GET(SPICA_SRX_DSP_ENGINE_INT__READ(die, channel))
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__WRITE(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__RMW(die, channel, fdata) SPICA_SRX_DSP_ENGINE_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__MASK                       0x1
#  define SPICA_SRX_DSP_ENGINE_INT__SE0_DONE__OFFSET                     0

#define SPICA_MRX_TOP_RESET__ADDRESS                      0x1e3800
#define SPICA_MRX_TOP_RESET__DEFAULT                      0xff
#define SPICA_MRX_TOP_RESET__ICOUNT                        5
#define SPICA_MRX_TOP_RESET__ISPAN                         0x800
#define SPICA_MRX_TOP_RESET__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_TOP_RESET__ADDRESS)
#define SPICA_MRX_TOP_RESET__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_TOP_RESET__ADDRESS)
#define SPICA_MRX_TOP_RESET__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_TOP_RESET__ADDRESS, (data))
#define SPICA_MRX_TOP_RESET__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_TOP_RESET__ADDRESS, (data), (mask))
#  define SPICA_MRX_TOP_RESET__SOFT_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_TOP_RESET__SOFT_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_TOP_RESET__SOFT_RESET__READ(die, channel)         SPICA_MRX_TOP_RESET__SOFT_RESET__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__SOFT_RESET__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_TOP_RESET__SOFT_RESET__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_TOP_RESET__SOFT_RESET__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__SOFT_RESET__OFFSET                     15
#  define SPICA_MRX_TOP_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_MRX_TOP_RESET__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_MRX_TOP_RESET__RSRVD1__READ(die, channel)         SPICA_MRX_TOP_RESET__RSRVD1__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_MRX_TOP_RESET__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_MRX_TOP_RESET__RSRVD1__MASK                       0x7f
#  define SPICA_MRX_TOP_RESET__RSRVD1__OFFSET                     8
#  define SPICA_MRX_TOP_RESET__PROCESS_MONITOR__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_TOP_RESET__PROCESS_MONITOR__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_TOP_RESET__PROCESS_MONITOR__READ(die, channel)         SPICA_MRX_TOP_RESET__PROCESS_MONITOR__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__PROCESS_MONITOR__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_TOP_RESET__PROCESS_MONITOR__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_TOP_RESET__PROCESS_MONITOR__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__PROCESS_MONITOR__OFFSET                     7
#  define SPICA_MRX_TOP_RESET__TIA__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_TOP_RESET__TIA__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_TOP_RESET__TIA__READ(die, channel)         SPICA_MRX_TOP_RESET__TIA__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__TIA__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_TOP_RESET__TIA__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_TOP_RESET__TIA__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__TIA__OFFSET                     6
#  define SPICA_MRX_TOP_RESET__CDRLD__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_TOP_RESET__CDRLD__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_TOP_RESET__CDRLD__READ(die, channel)         SPICA_MRX_TOP_RESET__CDRLD__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__CDRLD__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_TOP_RESET__CDRLD__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_TOP_RESET__CDRLD__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__CDRLD__OFFSET                     5
#  define SPICA_MRX_TOP_RESET__DTL__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_TOP_RESET__DTL__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_TOP_RESET__DTL__READ(die, channel)         SPICA_MRX_TOP_RESET__DTL__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__DTL__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_TOP_RESET__DTL__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_TOP_RESET__DTL__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__DTL__OFFSET                     4
#  define SPICA_MRX_TOP_RESET__DBG__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_TOP_RESET__DBG__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_TOP_RESET__DBG__READ(die, channel)         SPICA_MRX_TOP_RESET__DBG__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__DBG__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_TOP_RESET__DBG__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_TOP_RESET__DBG__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__DBG__OFFSET                     3
#  define SPICA_MRX_TOP_RESET__CP__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_TOP_RESET__CP__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_TOP_RESET__CP__READ(die, channel)         SPICA_MRX_TOP_RESET__CP__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__CP__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_TOP_RESET__CP__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_TOP_RESET__CP__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__CP__OFFSET                     2
#  define SPICA_MRX_TOP_RESET__CHK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_TOP_RESET__CHK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_TOP_RESET__CHK__READ(die, channel)         SPICA_MRX_TOP_RESET__CHK__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__CHK__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_TOP_RESET__CHK__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_TOP_RESET__CHK__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__CHK__OFFSET                     1
#  define SPICA_MRX_TOP_RESET__CID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_TOP_RESET__CID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_TOP_RESET__CID__READ(die, channel)         SPICA_MRX_TOP_RESET__CID__GET(SPICA_MRX_TOP_RESET__READ(die, channel))
#  define SPICA_MRX_TOP_RESET__CID__WRITE(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_TOP_RESET__CID__RMW(die, channel, fdata) SPICA_MRX_TOP_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_TOP_RESET__CID__MASK                       0x1
#  define SPICA_MRX_TOP_RESET__CID__OFFSET                     0

#define SPICA_MRX_TOP_CLKEN__ADDRESS                      0x1e3801
#define SPICA_MRX_TOP_CLKEN__DEFAULT                      0x8000
#define SPICA_MRX_TOP_CLKEN__ICOUNT                        5
#define SPICA_MRX_TOP_CLKEN__ISPAN                         0x800
#define SPICA_MRX_TOP_CLKEN__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_TOP_CLKEN__ADDRESS)
#define SPICA_MRX_TOP_CLKEN__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_TOP_CLKEN__ADDRESS)
#define SPICA_MRX_TOP_CLKEN__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_TOP_CLKEN__ADDRESS, (data))
#define SPICA_MRX_TOP_CLKEN__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_TOP_CLKEN__ADDRESS, (data), (mask))
#  define SPICA_MRX_TOP_CLKEN__OUT_GAPPED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_TOP_CLKEN__OUT_GAPPED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__OUT_GAPPED__READ(die, channel)         SPICA_MRX_TOP_CLKEN__OUT_GAPPED__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__OUT_GAPPED__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_TOP_CLKEN__OUT_GAPPED__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_TOP_CLKEN__OUT_GAPPED__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__OUT_GAPPED__OFFSET                     15
#  define SPICA_MRX_TOP_CLKEN__TIA__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MRX_TOP_CLKEN__TIA__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__TIA__READ(die, channel)         SPICA_MRX_TOP_CLKEN__TIA__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__TIA__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_TOP_CLKEN__TIA__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_TOP_CLKEN__TIA__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__TIA__OFFSET                     14
#  define SPICA_MRX_TOP_CLKEN__CDRLD__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MRX_TOP_CLKEN__CDRLD__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__CDRLD__READ(die, channel)         SPICA_MRX_TOP_CLKEN__CDRLD__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__CDRLD__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_TOP_CLKEN__CDRLD__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_TOP_CLKEN__CDRLD__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__CDRLD__OFFSET                     13
#  define SPICA_MRX_TOP_CLKEN__CP__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MRX_TOP_CLKEN__CP__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__CP__READ(die, channel)         SPICA_MRX_TOP_CLKEN__CP__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__CP__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_TOP_CLKEN__CP__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_TOP_CLKEN__CP__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__CP__OFFSET                     12
#  define SPICA_MRX_TOP_CLKEN__DTL_OUT__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MRX_TOP_CLKEN__DTL_OUT__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__DTL_OUT__READ(die, channel)         SPICA_MRX_TOP_CLKEN__DTL_OUT__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__DTL_OUT__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_TOP_CLKEN__DTL_OUT__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_TOP_CLKEN__DTL_OUT__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__DTL_OUT__OFFSET                     11
#  define SPICA_MRX_TOP_CLKEN__DTL__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_MRX_TOP_CLKEN__DTL__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__DTL__READ(die, channel)         SPICA_MRX_TOP_CLKEN__DTL__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__DTL__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_TOP_CLKEN__DTL__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_TOP_CLKEN__DTL__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__DTL__OFFSET                     10
#  define SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__READ(die, channel)         SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__DBG_CAPTURE__OFFSET                     9
#  define SPICA_MRX_TOP_CLKEN__DBG__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MRX_TOP_CLKEN__DBG__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__DBG__READ(die, channel)         SPICA_MRX_TOP_CLKEN__DBG__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__DBG__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_TOP_CLKEN__DBG__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_TOP_CLKEN__DBG__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__DBG__OFFSET                     8
#  define SPICA_MRX_TOP_CLKEN__AUX__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_TOP_CLKEN__AUX__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__AUX__READ(die, channel)         SPICA_MRX_TOP_CLKEN__AUX__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__AUX__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_TOP_CLKEN__AUX__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_TOP_CLKEN__AUX__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__AUX__OFFSET                     7
#  define SPICA_MRX_TOP_CLKEN__RXA__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_TOP_CLKEN__RXA__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__RXA__READ(die, channel)         SPICA_MRX_TOP_CLKEN__RXA__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__RXA__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_TOP_CLKEN__RXA__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_TOP_CLKEN__RXA__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__RXA__OFFSET                     6
#  define SPICA_MRX_TOP_CLKEN__CHK__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_TOP_CLKEN__CHK__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__CHK__READ(die, channel)         SPICA_MRX_TOP_CLKEN__CHK__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__CHK__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_TOP_CLKEN__CHK__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_TOP_CLKEN__CHK__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__CHK__OFFSET                     4
#  define SPICA_MRX_TOP_CLKEN__OPD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_TOP_CLKEN__OPD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__OPD__READ(die, channel)         SPICA_MRX_TOP_CLKEN__OPD__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__OPD__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_TOP_CLKEN__OPD__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_TOP_CLKEN__OPD__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__OPD__OFFSET                     3
#  define SPICA_MRX_TOP_CLKEN__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_TOP_CLKEN__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__CID__READ(die, channel)         SPICA_MRX_TOP_CLKEN__CID__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__CID__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_TOP_CLKEN__CID__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_TOP_CLKEN__CID__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__CID__OFFSET                     2
#  define SPICA_MRX_TOP_CLKEN__ODP__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_TOP_CLKEN__ODP__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__ODP__READ(die, channel)         SPICA_MRX_TOP_CLKEN__ODP__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__ODP__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_TOP_CLKEN__ODP__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_TOP_CLKEN__ODP__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__ODP__OFFSET                     1
#  define SPICA_MRX_TOP_CLKEN__OUT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_TOP_CLKEN__OUT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_TOP_CLKEN__OUT__READ(die, channel)         SPICA_MRX_TOP_CLKEN__OUT__GET(SPICA_MRX_TOP_CLKEN__READ(die, channel))
#  define SPICA_MRX_TOP_CLKEN__OUT__WRITE(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_TOP_CLKEN__OUT__RMW(die, channel, fdata) SPICA_MRX_TOP_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_TOP_CLKEN__OUT__MASK                       0x1
#  define SPICA_MRX_TOP_CLKEN__OUT__OFFSET                     0

#define SPICA_MRX_TOP_SCRATCH5__ADDRESS                      0x1e3831
#define SPICA_MRX_TOP_SCRATCH5__DEFAULT                      0x0
#define SPICA_MRX_TOP_SCRATCH5__ICOUNT                        5
#define SPICA_MRX_TOP_SCRATCH5__ISPAN                         0x800
#define SPICA_MRX_TOP_SCRATCH5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_TOP_SCRATCH5__ADDRESS)
#define SPICA_MRX_TOP_SCRATCH5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_TOP_SCRATCH5__ADDRESS)
#define SPICA_MRX_TOP_SCRATCH5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_TOP_SCRATCH5__ADDRESS, (data))
#define SPICA_MRX_TOP_SCRATCH5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_TOP_SCRATCH5__ADDRESS, (data), (mask))
#  define SPICA_MRX_TOP_SCRATCH5__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_TOP_SCRATCH5__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_TOP_SCRATCH5__VALUE__READ(die, channel)         SPICA_MRX_TOP_SCRATCH5__VALUE__GET(SPICA_MRX_TOP_SCRATCH5__READ(die, channel))
#  define SPICA_MRX_TOP_SCRATCH5__VALUE__WRITE(die, channel, fdata) SPICA_MRX_TOP_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_TOP_SCRATCH5__VALUE__RMW(die, channel, fdata) SPICA_MRX_TOP_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_TOP_SCRATCH5__VALUE__MASK                       0xffff
#  define SPICA_MRX_TOP_SCRATCH5__VALUE__OFFSET                     0

#define SPICA_MRX_TOP_SCRATCH6__ADDRESS                      0x1e3832
#define SPICA_MRX_TOP_SCRATCH6__DEFAULT                      0x0
#define SPICA_MRX_TOP_SCRATCH6__ICOUNT                        5
#define SPICA_MRX_TOP_SCRATCH6__ISPAN                         0x800
#define SPICA_MRX_TOP_SCRATCH6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_TOP_SCRATCH6__ADDRESS)
#define SPICA_MRX_TOP_SCRATCH6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_TOP_SCRATCH6__ADDRESS)
#define SPICA_MRX_TOP_SCRATCH6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_TOP_SCRATCH6__ADDRESS, (data))
#define SPICA_MRX_TOP_SCRATCH6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_TOP_SCRATCH6__ADDRESS, (data), (mask))
#  define SPICA_MRX_TOP_SCRATCH6__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_TOP_SCRATCH6__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_TOP_SCRATCH6__VALUE__READ(die, channel)         SPICA_MRX_TOP_SCRATCH6__VALUE__GET(SPICA_MRX_TOP_SCRATCH6__READ(die, channel))
#  define SPICA_MRX_TOP_SCRATCH6__VALUE__WRITE(die, channel, fdata) SPICA_MRX_TOP_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_TOP_SCRATCH6__VALUE__RMW(die, channel, fdata) SPICA_MRX_TOP_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_TOP_SCRATCH6__VALUE__MASK                       0xffff
#  define SPICA_MRX_TOP_SCRATCH6__VALUE__OFFSET                     0

#define SPICA_MRX_CP_STORAGE_ACCESS__ADDRESS                      0x1e384a
#define SPICA_MRX_CP_STORAGE_ACCESS__DEFAULT                      0x0
#define SPICA_MRX_CP_STORAGE_ACCESS__ICOUNT                        5
#define SPICA_MRX_CP_STORAGE_ACCESS__ISPAN                         0x800
#define SPICA_MRX_CP_STORAGE_ACCESS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_STORAGE_ACCESS__ADDRESS)
#define SPICA_MRX_CP_STORAGE_ACCESS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_STORAGE_ACCESS__ADDRESS)
#define SPICA_MRX_CP_STORAGE_ACCESS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_STORAGE_ACCESS__ADDRESS, (data))
#define SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_STORAGE_ACCESS__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__READ(die, channel)         SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__GET(SPICA_MRX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__WRITE(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__RMW(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__MASK                       0x1
#  define SPICA_MRX_CP_STORAGE_ACCESS__ACCESS__OFFSET                     15
#  define SPICA_MRX_CP_STORAGE_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MRX_CP_STORAGE_ACCESS__RBW__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MRX_CP_STORAGE_ACCESS__RBW__READ(die, channel)         SPICA_MRX_CP_STORAGE_ACCESS__RBW__GET(SPICA_MRX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_MRX_CP_STORAGE_ACCESS__RBW__WRITE(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_CP_STORAGE_ACCESS__RBW__RMW(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_CP_STORAGE_ACCESS__RBW__MASK                       0x1
#  define SPICA_MRX_CP_STORAGE_ACCESS__RBW__OFFSET                     14
#  define SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__READ(die, channel)         SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__GET(SPICA_MRX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__WRITE(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__RMW(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__MASK                       0x3
#  define SPICA_MRX_CP_STORAGE_ACCESS__FORMAT__OFFSET                     12
#  define SPICA_MRX_CP_STORAGE_ACCESS__IDX__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SPICA_MRX_CP_STORAGE_ACCESS__IDX__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SPICA_MRX_CP_STORAGE_ACCESS__IDX__READ(die, channel)         SPICA_MRX_CP_STORAGE_ACCESS__IDX__GET(SPICA_MRX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_MRX_CP_STORAGE_ACCESS__IDX__WRITE(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_MRX_CP_STORAGE_ACCESS__IDX__RMW(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_MRX_CP_STORAGE_ACCESS__IDX__MASK                       0x7
#  define SPICA_MRX_CP_STORAGE_ACCESS__IDX__OFFSET                     9
#  define SPICA_MRX_CP_STORAGE_ACCESS__ID__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_MRX_CP_STORAGE_ACCESS__ID__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_MRX_CP_STORAGE_ACCESS__ID__READ(die, channel)         SPICA_MRX_CP_STORAGE_ACCESS__ID__GET(SPICA_MRX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_MRX_CP_STORAGE_ACCESS__ID__WRITE(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_MRX_CP_STORAGE_ACCESS__ID__RMW(die, channel, fdata) SPICA_MRX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_MRX_CP_STORAGE_ACCESS__ID__MASK                       0x1ff
#  define SPICA_MRX_CP_STORAGE_ACCESS__ID__OFFSET                     0

#define SPICA_MRX_CP_STORAGE_DATA0__ADDRESS                      0x1e384b
#define SPICA_MRX_CP_STORAGE_DATA0__DEFAULT                      0x0
#define SPICA_MRX_CP_STORAGE_DATA0__ICOUNT                        5
#define SPICA_MRX_CP_STORAGE_DATA0__ISPAN                         0x800
#define SPICA_MRX_CP_STORAGE_DATA0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_STORAGE_DATA0__ADDRESS)
#define SPICA_MRX_CP_STORAGE_DATA0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_STORAGE_DATA0__ADDRESS)
#define SPICA_MRX_CP_STORAGE_DATA0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_STORAGE_DATA0__ADDRESS, (data))
#define SPICA_MRX_CP_STORAGE_DATA0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_STORAGE_DATA0__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_STORAGE_DATA0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_CP_STORAGE_DATA0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_CP_STORAGE_DATA0__DATA__READ(die, channel)         SPICA_MRX_CP_STORAGE_DATA0__DATA__GET(SPICA_MRX_CP_STORAGE_DATA0__READ(die, channel))
#  define SPICA_MRX_CP_STORAGE_DATA0__DATA__WRITE(die, channel, fdata) SPICA_MRX_CP_STORAGE_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_CP_STORAGE_DATA0__DATA__RMW(die, channel, fdata) SPICA_MRX_CP_STORAGE_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_CP_STORAGE_DATA0__DATA__MASK                       0xffff
#  define SPICA_MRX_CP_STORAGE_DATA0__DATA__OFFSET                     0

#define SPICA_MRX_CP_STORAGE_DATA1__ADDRESS                      0x1e384c
#define SPICA_MRX_CP_STORAGE_DATA1__DEFAULT                      0x0
#define SPICA_MRX_CP_STORAGE_DATA1__ICOUNT                        5
#define SPICA_MRX_CP_STORAGE_DATA1__ISPAN                         0x800
#define SPICA_MRX_CP_STORAGE_DATA1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_STORAGE_DATA1__ADDRESS)
#define SPICA_MRX_CP_STORAGE_DATA1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_STORAGE_DATA1__ADDRESS)
#define SPICA_MRX_CP_STORAGE_DATA1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_STORAGE_DATA1__ADDRESS, (data))
#define SPICA_MRX_CP_STORAGE_DATA1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_STORAGE_DATA1__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_STORAGE_DATA1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_CP_STORAGE_DATA1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_CP_STORAGE_DATA1__DATA__READ(die, channel)         SPICA_MRX_CP_STORAGE_DATA1__DATA__GET(SPICA_MRX_CP_STORAGE_DATA1__READ(die, channel))
#  define SPICA_MRX_CP_STORAGE_DATA1__DATA__WRITE(die, channel, fdata) SPICA_MRX_CP_STORAGE_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_CP_STORAGE_DATA1__DATA__RMW(die, channel, fdata) SPICA_MRX_CP_STORAGE_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_CP_STORAGE_DATA1__DATA__MASK                       0xffff
#  define SPICA_MRX_CP_STORAGE_DATA1__DATA__OFFSET                     0

#define SPICA_MRX_CP_FFE_CFG__ADDRESS                      0x1e3879
#define SPICA_MRX_CP_FFE_CFG__DEFAULT                      0x0
#define SPICA_MRX_CP_FFE_CFG__ICOUNT                        5
#define SPICA_MRX_CP_FFE_CFG__ISPAN                         0x800
#define SPICA_MRX_CP_FFE_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_FFE_CFG__ADDRESS)
#define SPICA_MRX_CP_FFE_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_FFE_CFG__ADDRESS)
#define SPICA_MRX_CP_FFE_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_FFE_CFG__ADDRESS, (data))
#define SPICA_MRX_CP_FFE_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_FFE_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_FFE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_CP_FFE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__RSRVD1__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD1__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__RSRVD1__OFFSET                     15
#  define SPICA_MRX_CP_FFE_CFG__LAST__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MRX_CP_FFE_CFG__LAST__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__LAST__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__LAST__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__LAST__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_CP_FFE_CFG__LAST__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_CP_FFE_CFG__LAST__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__LAST__OFFSET                     14
#  define SPICA_MRX_CP_FFE_CFG__HYB_FINISH__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MRX_CP_FFE_CFG__HYB_FINISH__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__HYB_FINISH__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__HYB_FINISH__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__HYB_FINISH__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_CP_FFE_CFG__HYB_FINISH__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_CP_FFE_CFG__HYB_FINISH__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__HYB_FINISH__OFFSET                     13
#  define SPICA_MRX_CP_FFE_CFG__HYB_START__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MRX_CP_FFE_CFG__HYB_START__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__HYB_START__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__HYB_START__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__HYB_START__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_CP_FFE_CFG__HYB_START__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_CP_FFE_CFG__HYB_START__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__HYB_START__OFFSET                     12
#  define SPICA_MRX_CP_FFE_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_MRX_CP_FFE_CFG__RSRVD2__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD2__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__RSRVD2__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD2__MASK                       0x3
#  define SPICA_MRX_CP_FFE_CFG__RSRVD2__OFFSET                     10
#  define SPICA_MRX_CP_FFE_CFG__TRANS_CON__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MRX_CP_FFE_CFG__TRANS_CON__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__TRANS_CON__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__TRANS_CON__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__TRANS_CON__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_CP_FFE_CFG__TRANS_CON__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_CP_FFE_CFG__TRANS_CON__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__TRANS_CON__OFFSET                     9
#  define SPICA_MRX_CP_FFE_CFG__TRANS_MODE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MRX_CP_FFE_CFG__TRANS_MODE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__TRANS_MODE__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__TRANS_MODE__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__TRANS_MODE__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_CP_FFE_CFG__TRANS_MODE__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_CP_FFE_CFG__TRANS_MODE__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__TRANS_MODE__OFFSET                     8
#  define SPICA_MRX_CP_FFE_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_CP_FFE_CFG__RSRVD3__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD3__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__RSRVD3__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_FFE_CFG__RSRVD3__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__RSRVD3__OFFSET                     7
#  define SPICA_MRX_CP_FFE_CFG__CON__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_CP_FFE_CFG__CON__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_CP_FFE_CFG__CON__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__CON__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__CON__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_CP_FFE_CFG__CON__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_CP_FFE_CFG__CON__MASK                       0x1
#  define SPICA_MRX_CP_FFE_CFG__CON__OFFSET                     6
#  define SPICA_MRX_CP_FFE_CFG__MODE__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_MRX_CP_FFE_CFG__MODE__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_MRX_CP_FFE_CFG__MODE__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__MODE__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__MODE__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_MRX_CP_FFE_CFG__MODE__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_MRX_CP_FFE_CFG__MODE__MASK                       0x3
#  define SPICA_MRX_CP_FFE_CFG__MODE__OFFSET                     4
#  define SPICA_MRX_CP_FFE_CFG__SLICE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MRX_CP_FFE_CFG__SLICE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MRX_CP_FFE_CFG__SLICE__READ(die, channel)         SPICA_MRX_CP_FFE_CFG__SLICE__GET(SPICA_MRX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_MRX_CP_FFE_CFG__SLICE__WRITE(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_CP_FFE_CFG__SLICE__RMW(die, channel, fdata) SPICA_MRX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_CP_FFE_CFG__SLICE__MASK                       0xf
#  define SPICA_MRX_CP_FFE_CFG__SLICE__OFFSET                     0

#define SPICA_MRX_CP_SLC_RUN_CFG__ADDRESS                      0x1e3886
#define SPICA_MRX_CP_SLC_RUN_CFG__DEFAULT                      0x0
#define SPICA_MRX_CP_SLC_RUN_CFG__ICOUNT                        5
#define SPICA_MRX_CP_SLC_RUN_CFG__ISPAN                         0x800
#define SPICA_MRX_CP_SLC_RUN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_SLC_RUN_CFG__ADDRESS)
#define SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_SLC_RUN_CFG__ADDRESS)
#define SPICA_MRX_CP_SLC_RUN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_SLC_RUN_CFG__ADDRESS, (data))
#define SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_SLC_RUN_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__MASK                       0x1
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD1__OFFSET                     15
#  define SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__SET(rdata, fdata)         (((rdata) & 0x8fff) | (((uint32_t)(fdata) << 12) & 0x7000))
#  define SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__GET(rdata)                (((rdata) >> 12) & 0x7)
#  define SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__MASK                       0x7
#  define SPICA_MRX_CP_SLC_RUN_CFG__EST_CLKRATE__OFFSET                     12
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__MASK                       0x1
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD2__OFFSET                     11
#  define SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__MASK                       0x7
#  define SPICA_MRX_CP_SLC_RUN_CFG__CLKRATE__OFFSET                     8
#  define SPICA_MRX_CP_SLC_RUN_CFG__SRC__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_MRX_CP_SLC_RUN_CFG__SRC__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_MRX_CP_SLC_RUN_CFG__SRC__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__SRC__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__SRC__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_MRX_CP_SLC_RUN_CFG__SRC__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_MRX_CP_SLC_RUN_CFG__SRC__MASK                       0x3
#  define SPICA_MRX_CP_SLC_RUN_CFG__SRC__OFFSET                     6
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__MASK                       0x1
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD3__OFFSET                     5
#  define SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__MASK                       0x1
#  define SPICA_MRX_CP_SLC_RUN_CFG__MANUAL_CEN__OFFSET                     4
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__MASK                       0x7
#  define SPICA_MRX_CP_SLC_RUN_CFG__RSRVD4__OFFSET                     1
#  define SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__READ(die, channel)         SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__GET(SPICA_MRX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__WRITE(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__RMW(die, channel, fdata) SPICA_MRX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__MASK                       0x1
#  define SPICA_MRX_CP_SLC_RUN_CFG__RUN_ENG__OFFSET                     0

#define SPICA_MRX_CP_PR_RUN_CFG__ADDRESS                      0x1e3899
#define SPICA_MRX_CP_PR_RUN_CFG__DEFAULT                      0x0
#define SPICA_MRX_CP_PR_RUN_CFG__ICOUNT                        5
#define SPICA_MRX_CP_PR_RUN_CFG__ISPAN                         0x800
#define SPICA_MRX_CP_PR_RUN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_PR_RUN_CFG__ADDRESS)
#define SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_PR_RUN_CFG__ADDRESS)
#define SPICA_MRX_CP_PR_RUN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_PR_RUN_CFG__ADDRESS, (data))
#define SPICA_MRX_CP_PR_RUN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_PR_RUN_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_PR_RUN_CFG__SLICE__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_MRX_CP_PR_RUN_CFG__SLICE__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_MRX_CP_PR_RUN_CFG__SLICE__READ(die, channel)         SPICA_MRX_CP_PR_RUN_CFG__SLICE__GET(SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_RUN_CFG__SLICE__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_MRX_CP_PR_RUN_CFG__SLICE__RMW(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_MRX_CP_PR_RUN_CFG__SLICE__MASK                       0xf
#  define SPICA_MRX_CP_PR_RUN_CFG__SLICE__OFFSET                     12
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__GET(SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__MASK                       0x1
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD1__OFFSET                     11
#  define SPICA_MRX_CP_PR_RUN_CFG__SETTLE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_MRX_CP_PR_RUN_CFG__SETTLE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_MRX_CP_PR_RUN_CFG__SETTLE__READ(die, channel)         SPICA_MRX_CP_PR_RUN_CFG__SETTLE__GET(SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_RUN_CFG__SETTLE__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_CP_PR_RUN_CFG__SETTLE__RMW(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_CP_PR_RUN_CFG__SETTLE__MASK                       0x7
#  define SPICA_MRX_CP_PR_RUN_CFG__SETTLE__OFFSET                     8
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__READ(die, channel)         SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__GET(SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__MASK                       0x1
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD2__OFFSET                     7
#  define SPICA_MRX_CP_PR_RUN_CFG__DURATION__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_MRX_CP_PR_RUN_CFG__DURATION__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_MRX_CP_PR_RUN_CFG__DURATION__READ(die, channel)         SPICA_MRX_CP_PR_RUN_CFG__DURATION__GET(SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_RUN_CFG__DURATION__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_MRX_CP_PR_RUN_CFG__DURATION__RMW(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_MRX_CP_PR_RUN_CFG__DURATION__MASK                       0x7
#  define SPICA_MRX_CP_PR_RUN_CFG__DURATION__OFFSET                     4
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__READ(die, channel)         SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__GET(SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__MASK                       0x7
#  define SPICA_MRX_CP_PR_RUN_CFG__RSRVD3__OFFSET                     1
#  define SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__READ(die, channel)         SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__GET(SPICA_MRX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__RMW(die, channel, fdata) SPICA_MRX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__MASK                       0x1
#  define SPICA_MRX_CP_PR_RUN_CFG__RUN_ALG__OFFSET                     0

#define SPICA_MRX_CP_PR_CFG__ADDRESS                      0x1e389a
#define SPICA_MRX_CP_PR_CFG__DEFAULT                      0x40a0
#define SPICA_MRX_CP_PR_CFG__ICOUNT                        5
#define SPICA_MRX_CP_PR_CFG__ISPAN                         0x800
#define SPICA_MRX_CP_PR_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_PR_CFG__ADDRESS)
#define SPICA_MRX_CP_PR_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_PR_CFG__ADDRESS)
#define SPICA_MRX_CP_PR_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_PR_CFG__ADDRESS, (data))
#define SPICA_MRX_CP_PR_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_PR_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__READ(die, channel)         SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__GET(SPICA_MRX_CP_PR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__RMW(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__MASK                       0x3
#  define SPICA_MRX_CP_PR_CFG__ISI_D_QUAL__OFFSET                     14
#  define SPICA_MRX_CP_PR_CFG__LMS1Q__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_MRX_CP_PR_CFG__LMS1Q__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_MRX_CP_PR_CFG__LMS1Q__READ(die, channel)         SPICA_MRX_CP_PR_CFG__LMS1Q__GET(SPICA_MRX_CP_PR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_CFG__LMS1Q__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_MRX_CP_PR_CFG__LMS1Q__RMW(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_MRX_CP_PR_CFG__LMS1Q__MASK                       0x3
#  define SPICA_MRX_CP_PR_CFG__LMS1Q__OFFSET                     12
#  define SPICA_MRX_CP_PR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MRX_CP_PR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MRX_CP_PR_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_CP_PR_CFG__RSRVD1__GET(SPICA_MRX_CP_PR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_PR_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_PR_CFG__RSRVD1__MASK                       0x1
#  define SPICA_MRX_CP_PR_CFG__RSRVD1__OFFSET                     11
#  define SPICA_MRX_CP_PR_CFG__INV__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_MRX_CP_PR_CFG__INV__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_MRX_CP_PR_CFG__INV__READ(die, channel)         SPICA_MRX_CP_PR_CFG__INV__GET(SPICA_MRX_CP_PR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_CFG__INV__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_CP_PR_CFG__INV__RMW(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_CP_PR_CFG__INV__MASK                       0x1
#  define SPICA_MRX_CP_PR_CFG__INV__OFFSET                     10
#  define SPICA_MRX_CP_PR_CFG__SLC_ID__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MRX_CP_PR_CFG__SLC_ID__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MRX_CP_PR_CFG__SLC_ID__READ(die, channel)         SPICA_MRX_CP_PR_CFG__SLC_ID__GET(SPICA_MRX_CP_PR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_CFG__SLC_ID__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_CP_PR_CFG__SLC_ID__RMW(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_CP_PR_CFG__SLC_ID__MASK                       0x1
#  define SPICA_MRX_CP_PR_CFG__SLC_ID__OFFSET                     9
#  define SPICA_MRX_CP_PR_CFG__STORE_ADDR__SET(rdata, fdata)         (((rdata) & 0xfe0f) | (((uint32_t)(fdata) << 4) & 0x1f0))
#  define SPICA_MRX_CP_PR_CFG__STORE_ADDR__GET(rdata)                (((rdata) >> 4) & 0x1f)
#  define SPICA_MRX_CP_PR_CFG__STORE_ADDR__READ(die, channel)         SPICA_MRX_CP_PR_CFG__STORE_ADDR__GET(SPICA_MRX_CP_PR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_CFG__STORE_ADDR__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<4, 0x1f0)
#  define SPICA_MRX_CP_PR_CFG__STORE_ADDR__RMW(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<4, 0x1f0)
#  define SPICA_MRX_CP_PR_CFG__STORE_ADDR__MASK                       0x1f
#  define SPICA_MRX_CP_PR_CFG__STORE_ADDR__OFFSET                     4
#  define SPICA_MRX_CP_PR_CFG__MU__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MRX_CP_PR_CFG__MU__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MRX_CP_PR_CFG__MU__READ(die, channel)         SPICA_MRX_CP_PR_CFG__MU__GET(SPICA_MRX_CP_PR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_CFG__MU__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_CP_PR_CFG__MU__RMW(die, channel, fdata) SPICA_MRX_CP_PR_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_CP_PR_CFG__MU__MASK                       0xf
#  define SPICA_MRX_CP_PR_CFG__MU__OFFSET                     0

#define SPICA_MRX_CP_PR_ISI_TAP_CFG__ADDRESS                      0x1e389c
#define SPICA_MRX_CP_PR_ISI_TAP_CFG__DEFAULT                      0x700
#define SPICA_MRX_CP_PR_ISI_TAP_CFG__ICOUNT                        5
#define SPICA_MRX_CP_PR_ISI_TAP_CFG__ISPAN                         0x800
#define SPICA_MRX_CP_PR_ISI_TAP_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_PR_ISI_TAP_CFG__ADDRESS)
#define SPICA_MRX_CP_PR_ISI_TAP_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_PR_ISI_TAP_CFG__ADDRESS)
#define SPICA_MRX_CP_PR_ISI_TAP_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_PR_ISI_TAP_CFG__ADDRESS, (data))
#define SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_PR_ISI_TAP_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__GET(SPICA_MRX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__MASK                       0x1f
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD1__OFFSET                     11
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__READ(die, channel)         SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__GET(SPICA_MRX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__RMW(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__MASK                       0x7
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__QTY__OFFSET                     8
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__READ(die, channel)         SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__GET(SPICA_MRX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__MASK                       0x3
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__RSRVD2__OFFSET                     6
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__SET(rdata, fdata)         (((rdata) & 0xffc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__READ(die, channel)         SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__GET(SPICA_MRX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__WRITE(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__RMW(die, channel, fdata) SPICA_MRX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__MASK                       0x3f
#  define SPICA_MRX_CP_PR_ISI_TAP_CFG__FIRST__OFFSET                     0

#define SPICA_MRX_CP_SNR_RUN_CFG__ADDRESS                      0x1e389e
#define SPICA_MRX_CP_SNR_RUN_CFG__DEFAULT                      0x0
#define SPICA_MRX_CP_SNR_RUN_CFG__ICOUNT                        5
#define SPICA_MRX_CP_SNR_RUN_CFG__ISPAN                         0x800
#define SPICA_MRX_CP_SNR_RUN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_SNR_RUN_CFG__ADDRESS)
#define SPICA_MRX_CP_SNR_RUN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_SNR_RUN_CFG__ADDRESS)
#define SPICA_MRX_CP_SNR_RUN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_SNR_RUN_CFG__ADDRESS, (data))
#define SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_SNR_RUN_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__GET(SPICA_MRX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__MASK                       0x1ff
#  define SPICA_MRX_CP_SNR_RUN_CFG__RSRVD1__OFFSET                     7
#  define SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__READ(die, channel)         SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__GET(SPICA_MRX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__MASK                       0x7
#  define SPICA_MRX_CP_SNR_RUN_CFG__SETTLE__OFFSET                     4
#  define SPICA_MRX_CP_SNR_RUN_CFG__DURATION__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_MRX_CP_SNR_RUN_CFG__DURATION__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_MRX_CP_SNR_RUN_CFG__DURATION__READ(die, channel)         SPICA_MRX_CP_SNR_RUN_CFG__DURATION__GET(SPICA_MRX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_RUN_CFG__DURATION__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MRX_CP_SNR_RUN_CFG__DURATION__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MRX_CP_SNR_RUN_CFG__DURATION__MASK                       0x7
#  define SPICA_MRX_CP_SNR_RUN_CFG__DURATION__OFFSET                     1
#  define SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__READ(die, channel)         SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__GET(SPICA_MRX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__MASK                       0x1
#  define SPICA_MRX_CP_SNR_RUN_CFG__RUN_ALG__OFFSET                     0

#define SPICA_MRX_CP_SNR_CFG__ADDRESS                      0x1e389f
#define SPICA_MRX_CP_SNR_CFG__DEFAULT                      0x80a
#define SPICA_MRX_CP_SNR_CFG__ICOUNT                        5
#define SPICA_MRX_CP_SNR_CFG__ISPAN                         0x800
#define SPICA_MRX_CP_SNR_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_SNR_CFG__ADDRESS)
#define SPICA_MRX_CP_SNR_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_SNR_CFG__ADDRESS)
#define SPICA_MRX_CP_SNR_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_SNR_CFG__ADDRESS, (data))
#define SPICA_MRX_CP_SNR_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_SNR_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_SNR_CFG__STEP_SIZE__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_MRX_CP_SNR_CFG__STEP_SIZE__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_MRX_CP_SNR_CFG__STEP_SIZE__READ(die, channel)         SPICA_MRX_CP_SNR_CFG__STEP_SIZE__GET(SPICA_MRX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_CFG__STEP_SIZE__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_MRX_CP_SNR_CFG__STEP_SIZE__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_MRX_CP_SNR_CFG__STEP_SIZE__MASK                       0xff
#  define SPICA_MRX_CP_SNR_CFG__STEP_SIZE__OFFSET                     8
#  define SPICA_MRX_CP_SNR_CFG__INV__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_CP_SNR_CFG__INV__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_CP_SNR_CFG__INV__READ(die, channel)         SPICA_MRX_CP_SNR_CFG__INV__GET(SPICA_MRX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_CFG__INV__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_SNR_CFG__INV__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_SNR_CFG__INV__MASK                       0x1
#  define SPICA_MRX_CP_SNR_CFG__INV__OFFSET                     7
#  define SPICA_MRX_CP_SNR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff9f) | (((uint32_t)(fdata) << 5) & 0x60))
#  define SPICA_MRX_CP_SNR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x3)
#  define SPICA_MRX_CP_SNR_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_CP_SNR_CFG__RSRVD1__GET(SPICA_MRX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_MRX_CP_SNR_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_MRX_CP_SNR_CFG__RSRVD1__MASK                       0x3
#  define SPICA_MRX_CP_SNR_CFG__RSRVD1__OFFSET                     5
#  define SPICA_MRX_CP_SNR_CFG__STORE_ADDR__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_MRX_CP_SNR_CFG__STORE_ADDR__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_MRX_CP_SNR_CFG__STORE_ADDR__READ(die, channel)         SPICA_MRX_CP_SNR_CFG__STORE_ADDR__GET(SPICA_MRX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_MRX_CP_SNR_CFG__STORE_ADDR__WRITE(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_MRX_CP_SNR_CFG__STORE_ADDR__RMW(die, channel, fdata) SPICA_MRX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_MRX_CP_SNR_CFG__STORE_ADDR__MASK                       0x1f
#  define SPICA_MRX_CP_SNR_CFG__STORE_ADDR__OFFSET                     0

#define SPICA_MRX_CP_ALG_DONE_INT__ADDRESS                      0x1e38be
#define SPICA_MRX_CP_ALG_DONE_INT__DEFAULT                      0x0
#define SPICA_MRX_CP_ALG_DONE_INT__ICOUNT                        5
#define SPICA_MRX_CP_ALG_DONE_INT__ISPAN                         0x800
#define SPICA_MRX_CP_ALG_DONE_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_CP_ALG_DONE_INT__ADDRESS)
#define SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_CP_ALG_DONE_INT__ADDRESS)
#define SPICA_MRX_CP_ALG_DONE_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_CP_ALG_DONE_INT__ADDRESS, (data))
#define SPICA_MRX_CP_ALG_DONE_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_CP_ALG_DONE_INT__ADDRESS, (data), (mask))
#  define SPICA_MRX_CP_ALG_DONE_INT__PORC__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_CP_ALG_DONE_INT__PORC__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__PORC__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__PORC__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__PORC__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_ALG_DONE_INT__PORC__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_CP_ALG_DONE_INT__PORC__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__PORC__OFFSET                     15
#  define SPICA_MRX_CP_ALG_DONE_INT__PORA__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MRX_CP_ALG_DONE_INT__PORA__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__PORA__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__PORA__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__PORA__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_CP_ALG_DONE_INT__PORA__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_CP_ALG_DONE_INT__PORA__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__PORA__OFFSET                     14
#  define SPICA_MRX_CP_ALG_DONE_INT__PR__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MRX_CP_ALG_DONE_INT__PR__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__PR__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__PR__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__PR__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_CP_ALG_DONE_INT__PR__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_CP_ALG_DONE_INT__PR__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__PR__OFFSET                     13
#  define SPICA_MRX_CP_ALG_DONE_INT__SNR__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MRX_CP_ALG_DONE_INT__SNR__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__SNR__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__SNR__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__SNR__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_CP_ALG_DONE_INT__SNR__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_CP_ALG_DONE_INT__SNR__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__SNR__OFFSET                     12
#  define SPICA_MRX_CP_ALG_DONE_INT__HIST__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MRX_CP_ALG_DONE_INT__HIST__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__HIST__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__HIST__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__HIST__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_ALG_DONE_INT__HIST__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_CP_ALG_DONE_INT__HIST__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__HIST__OFFSET                     11
#  define SPICA_MRX_CP_ALG_DONE_INT__AMP__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_MRX_CP_ALG_DONE_INT__AMP__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__AMP__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__AMP__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__AMP__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_CP_ALG_DONE_INT__AMP__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_CP_ALG_DONE_INT__AMP__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__AMP__OFFSET                     10
#  define SPICA_MRX_CP_ALG_DONE_INT__ESC__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MRX_CP_ALG_DONE_INT__ESC__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__ESC__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__ESC__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__ESC__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_CP_ALG_DONE_INT__ESC__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_CP_ALG_DONE_INT__ESC__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__ESC__OFFSET                     9
#  define SPICA_MRX_CP_ALG_DONE_INT__DSC__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MRX_CP_ALG_DONE_INT__DSC__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__DSC__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__DSC__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__DSC__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_CP_ALG_DONE_INT__DSC__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_CP_ALG_DONE_INT__DSC__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__DSC__OFFSET                     8
#  define SPICA_MRX_CP_ALG_DONE_INT__DSA__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_CP_ALG_DONE_INT__DSA__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__DSA__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__DSA__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__DSA__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_ALG_DONE_INT__DSA__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_CP_ALG_DONE_INT__DSA__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__DSA__OFFSET                     7
#  define SPICA_MRX_CP_ALG_DONE_INT__ESA__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_CP_ALG_DONE_INT__ESA__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__ESA__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__ESA__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__ESA__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_CP_ALG_DONE_INT__ESA__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_CP_ALG_DONE_INT__ESA__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__ESA__OFFSET                     6
#  define SPICA_MRX_CP_ALG_DONE_INT__DFE__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_CP_ALG_DONE_INT__DFE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__DFE__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__DFE__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__DFE__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_CP_ALG_DONE_INT__DFE__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_CP_ALG_DONE_INT__DFE__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__DFE__OFFSET                     5
#  define SPICA_MRX_CP_ALG_DONE_INT__FFE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_CP_ALG_DONE_INT__FFE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__FFE__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__FFE__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__FFE__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_CP_ALG_DONE_INT__FFE__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_CP_ALG_DONE_INT__FFE__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__FFE__OFFSET                     4
#  define SPICA_MRX_CP_ALG_DONE_INT__V2SK__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_CP_ALG_DONE_INT__V2SK__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2SK__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__V2SK__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__V2SK__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2SK__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2SK__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__V2SK__OFFSET                     3
#  define SPICA_MRX_CP_ALG_DONE_INT__V2O__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_CP_ALG_DONE_INT__V2O__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2O__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__V2O__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__V2O__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2O__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2O__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__V2O__OFFSET                     2
#  define SPICA_MRX_CP_ALG_DONE_INT__V2GC__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_CP_ALG_DONE_INT__V2GC__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2GC__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__V2GC__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__V2GC__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2GC__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_CP_ALG_DONE_INT__V2GC__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__V2GC__OFFSET                     1
#  define SPICA_MRX_CP_ALG_DONE_INT__V1GC__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_CP_ALG_DONE_INT__V1GC__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__V1GC__READ(die, channel)         SPICA_MRX_CP_ALG_DONE_INT__V1GC__GET(SPICA_MRX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_MRX_CP_ALG_DONE_INT__V1GC__WRITE(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__V1GC__RMW(die, channel, fdata) SPICA_MRX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_CP_ALG_DONE_INT__V1GC__MASK                       0x1
#  define SPICA_MRX_CP_ALG_DONE_INT__V1GC__OFFSET                     0

#define SPICA_MRX_DDP_CHK_CFG__ADDRESS                      0x1e38e5
#define SPICA_MRX_DDP_CHK_CFG__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_CFG__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_CFG__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_CFG__ADDRESS)
#define SPICA_MRX_DDP_CHK_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_CFG__ADDRESS)
#define SPICA_MRX_DDP_CHK_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_CFG__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__READ(die, channel)         SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__GET(SPICA_MRX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__MASK                       0x1
#  define SPICA_MRX_DDP_CHK_CFG__SNAPSHOT_EN__OFFSET                     15
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x9fff) | (((uint32_t)(fdata) << 13) & 0x6000))
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x3)
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_DDP_CHK_CFG__RSRVD1__GET(SPICA_MRX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD1__MASK                       0x3
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD1__OFFSET                     13
#  define SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__READ(die, channel)         SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__GET(SPICA_MRX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__MASK                       0x1f
#  define SPICA_MRX_DDP_CHK_CFG__OOS_THRESH__OFFSET                     8
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD2__READ(die, channel)         SPICA_MRX_DDP_CHK_CFG__RSRVD2__GET(SPICA_MRX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD2__MASK                       0x3f
#  define SPICA_MRX_DDP_CHK_CFG__RSRVD2__OFFSET                     2
#  define SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__READ(die, channel)         SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__GET(SPICA_MRX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__MASK                       0x1
#  define SPICA_MRX_DDP_CHK_CFG__FIXED_PAT_EN__OFFSET                     1
#  define SPICA_MRX_DDP_CHK_CFG__PRBS_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_DDP_CHK_CFG__PRBS_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_DDP_CHK_CFG__PRBS_EN__READ(die, channel)         SPICA_MRX_DDP_CHK_CFG__PRBS_EN__GET(SPICA_MRX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_CFG__PRBS_EN__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_DDP_CHK_CFG__PRBS_EN__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_DDP_CHK_CFG__PRBS_EN__MASK                       0x1
#  define SPICA_MRX_DDP_CHK_CFG__PRBS_EN__OFFSET                     0

#define SPICA_MRX_DDP_CHK_PRBS_CFG__ADDRESS                      0x1e38e6
#define SPICA_MRX_DDP_CHK_PRBS_CFG__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_PRBS_CFG__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_PRBS_CFG__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_PRBS_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_PRBS_CFG__ADDRESS)
#define SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_PRBS_CFG__ADDRESS)
#define SPICA_MRX_DDP_CHK_PRBS_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_PRBS_CFG__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_PRBS_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__GET(SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__MASK                       0x7
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__RSRVD1__OFFSET                     13
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__READ(die, channel)         SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__GET(SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__MASK                       0x1
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__DUAL_PRBS__OFFSET                     12
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__READ(die, channel)         SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__MASK                       0x3
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__OFFSET                     10
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__READ(die, channel)         SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__MASK                       0x1
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__OFFSET                     9
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__READ(die, channel)         SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__GET(SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__MASK                       0x1
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_INV__OFFSET                     8
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__READ(die, channel)         SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__READ(die, channel)         SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__GET(SPICA_MRX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__MASK                       0xf
#  define SPICA_MRX_DDP_CHK_PRBS_CFG__PRBS_MODE__OFFSET                     0

#define SPICA_MRX_DDP_CHK_WORD_CNT0__ADDRESS                      0x1e38eb
#define SPICA_MRX_DDP_CHK_WORD_CNT0__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_WORD_CNT0__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_WORD_CNT0__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_WORD_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_WORD_CNT0__ADDRESS)
#define SPICA_MRX_DDP_CHK_WORD_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_WORD_CNT0__ADDRESS)
#define SPICA_MRX_DDP_CHK_WORD_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_WORD_CNT0__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_WORD_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_WORD_CNT0__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__READ(die, channel)         SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__GET(SPICA_MRX_DDP_CHK_WORD_CNT0__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__MASK                       0xffff
#  define SPICA_MRX_DDP_CHK_WORD_CNT0__VALUE__OFFSET                     0

#define SPICA_MRX_DDP_CHK_WORD_CNT1__ADDRESS                      0x1e38ec
#define SPICA_MRX_DDP_CHK_WORD_CNT1__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_WORD_CNT1__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_WORD_CNT1__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_WORD_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_WORD_CNT1__ADDRESS)
#define SPICA_MRX_DDP_CHK_WORD_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_WORD_CNT1__ADDRESS)
#define SPICA_MRX_DDP_CHK_WORD_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_WORD_CNT1__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_WORD_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_WORD_CNT1__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__READ(die, channel)         SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__GET(SPICA_MRX_DDP_CHK_WORD_CNT1__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__MASK                       0xffff
#  define SPICA_MRX_DDP_CHK_WORD_CNT1__VALUE__OFFSET                     0

#define SPICA_MRX_DDP_CHK_WORD_CNT2__ADDRESS                      0x1e38ed
#define SPICA_MRX_DDP_CHK_WORD_CNT2__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_WORD_CNT2__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_WORD_CNT2__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_WORD_CNT2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_WORD_CNT2__ADDRESS)
#define SPICA_MRX_DDP_CHK_WORD_CNT2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_WORD_CNT2__ADDRESS)
#define SPICA_MRX_DDP_CHK_WORD_CNT2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_WORD_CNT2__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_WORD_CNT2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_WORD_CNT2__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__READ(die, channel)         SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__GET(SPICA_MRX_DDP_CHK_WORD_CNT2__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__MASK                       0xffff
#  define SPICA_MRX_DDP_CHK_WORD_CNT2__VALUE__OFFSET                     0

#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS                      0x1e38ee
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__READ(die, channel)         SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__GET(SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__MASK                       0xffff
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT0__VALUE__OFFSET                     0

#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS                      0x1e38ef
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__READ(die, channel)         SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__GET(SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__MASK                       0xffff
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_CNT1__VALUE__OFFSET                     0

#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS                      0x1e38f0
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__READ(die, channel)         SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__MASK                       0xffff
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__OFFSET                     0

#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS                      0x1e38f1
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__DEFAULT                      0x0
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__ICOUNT                        5
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__ISPAN                         0x800
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data))
#define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__READ(die, channel)         SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel))
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__RMW(die, channel, fdata) SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__MASK                       0xffff
#  define SPICA_MRX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__OFFSET                     0

#define SPICA_MRX_DDP_INT__ADDRESS                      0x1e38f2
#define SPICA_MRX_DDP_INT__DEFAULT                      0x0
#define SPICA_MRX_DDP_INT__ICOUNT                        5
#define SPICA_MRX_DDP_INT__ISPAN                         0x800
#define SPICA_MRX_DDP_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_INT__ADDRESS)
#define SPICA_MRX_DDP_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_INT__ADDRESS)
#define SPICA_MRX_DDP_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_INT__ADDRESS, (data))
#define SPICA_MRX_DDP_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_INT__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SPICA_MRX_DDP_INT__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SPICA_MRX_DDP_INT__RSRVD1__READ(die, channel)         SPICA_MRX_DDP_INT__RSRVD1__GET(SPICA_MRX_DDP_INT__READ(die, channel))
#  define SPICA_MRX_DDP_INT__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_MRX_DDP_INT__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_MRX_DDP_INT__RSRVD1__MASK                       0x3ff
#  define SPICA_MRX_DDP_INT__RSRVD1__OFFSET                     6
#  define SPICA_MRX_DDP_INT__CID__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_DDP_INT__CID__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_DDP_INT__CID__READ(die, channel)         SPICA_MRX_DDP_INT__CID__GET(SPICA_MRX_DDP_INT__READ(die, channel))
#  define SPICA_MRX_DDP_INT__CID__WRITE(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_DDP_INT__CID__RMW(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_DDP_INT__CID__MASK                       0x1
#  define SPICA_MRX_DDP_INT__CID__OFFSET                     5
#  define SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__READ(die, channel)         SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__GET(SPICA_MRX_DDP_INT__READ(die, channel))
#  define SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__WRITE(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__RMW(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__MASK                       0x1
#  define SPICA_MRX_DDP_INT__CHK_FIXED_PAT_SYNC__OFFSET                     4
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__READ(die, channel)         SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__GET(SPICA_MRX_DDP_INT__READ(die, channel))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__WRITE(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__RMW(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__MASK                       0x1
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__OFFSET                     3
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__READ(die, channel)         SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__GET(SPICA_MRX_DDP_INT__READ(die, channel))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__WRITE(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__RMW(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__MASK                       0x1
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC_ODD__OFFSET                     2
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__READ(die, channel)         SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__GET(SPICA_MRX_DDP_INT__READ(die, channel))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__WRITE(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__RMW(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__MASK                       0x1
#  define SPICA_MRX_DDP_INT__CHK_PRBS_POLARITY_INV__OFFSET                     1
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__READ(die, channel)         SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__GET(SPICA_MRX_DDP_INT__READ(die, channel))
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__WRITE(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__RMW(die, channel, fdata) SPICA_MRX_DDP_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__MASK                       0x1
#  define SPICA_MRX_DDP_INT__CHK_PRBS_SYNC__OFFSET                     0

#define SPICA_MRX_DDP_INTS__ADDRESS                      0x1e38f4
#define SPICA_MRX_DDP_INTS__DEFAULT                      0x0
#define SPICA_MRX_DDP_INTS__ICOUNT                        5
#define SPICA_MRX_DDP_INTS__ISPAN                         0x800
#define SPICA_MRX_DDP_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_DDP_INTS__ADDRESS)
#define SPICA_MRX_DDP_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_DDP_INTS__ADDRESS)
#define SPICA_MRX_DDP_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_DDP_INTS__ADDRESS, (data))
#define SPICA_MRX_DDP_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_DDP_INTS__ADDRESS, (data), (mask))
#  define SPICA_MRX_DDP_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SPICA_MRX_DDP_INTS__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SPICA_MRX_DDP_INTS__RSRVD1__READ(die, channel)         SPICA_MRX_DDP_INTS__RSRVD1__GET(SPICA_MRX_DDP_INTS__READ(die, channel))
#  define SPICA_MRX_DDP_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_MRX_DDP_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_MRX_DDP_INTS__RSRVD1__MASK                       0x3ff
#  define SPICA_MRX_DDP_INTS__RSRVD1__OFFSET                     6
#  define SPICA_MRX_DDP_INTS__CIDS__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_DDP_INTS__CIDS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_DDP_INTS__CIDS__READ(die, channel)         SPICA_MRX_DDP_INTS__CIDS__GET(SPICA_MRX_DDP_INTS__READ(die, channel))
#  define SPICA_MRX_DDP_INTS__CIDS__WRITE(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_DDP_INTS__CIDS__RMW(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_DDP_INTS__CIDS__MASK                       0x1
#  define SPICA_MRX_DDP_INTS__CIDS__OFFSET                     5
#  define SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__READ(die, channel)         SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__GET(SPICA_MRX_DDP_INTS__READ(die, channel))
#  define SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__WRITE(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__RMW(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__MASK                       0x1
#  define SPICA_MRX_DDP_INTS__CHK_FIXED_PAT_SYNCS__OFFSET                     4
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__READ(die, channel)         SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(SPICA_MRX_DDP_INTS__READ(die, channel))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__WRITE(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__RMW(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__MASK                       0x1
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__OFFSET                     3
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__READ(die, channel)         SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__GET(SPICA_MRX_DDP_INTS__READ(die, channel))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__WRITE(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__RMW(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__MASK                       0x1
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNC_ODDS__OFFSET                     2
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__READ(die, channel)         SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__GET(SPICA_MRX_DDP_INTS__READ(die, channel))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__WRITE(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__RMW(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__MASK                       0x1
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_POLARITY_INVS__OFFSET                     1
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__READ(die, channel)         SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__GET(SPICA_MRX_DDP_INTS__READ(die, channel))
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__WRITE(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__RMW(die, channel, fdata) SPICA_MRX_DDP_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__MASK                       0x1
#  define SPICA_MRX_DDP_INTS__CHK_PRBS_SYNCS__OFFSET                     0

#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS                      0x1e3902
#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DEFAULT                      0x0
#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__ICOUNT                        5
#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__ISPAN                         0x800
#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS)
#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS)
#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS, (data))
#define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__MASK                       0x1f
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__OFFSET                     11
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__MASK                       0x1
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__OFFSET                     10
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__MASK                       0x1
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__OFFSET                     9
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__MASK                       0x1
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__OFFSET                     8
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__MASK                       0x1
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__OFFSET                     7
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__MASK                       0x1
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__OFFSET                     6
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__MASK                       0x1
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__OFFSET                     5
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__MASK                       0x1
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__OFFSET                     4
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__READ(die, channel)         SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__GET(SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__WRITE(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__RMW(die, channel, fdata) SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__MASK                       0xf
#  define SPICA_MRX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__OFFSET                     0

#define SPICA_MRX_RXA_TERM_CFG__ADDRESS                      0x1e3d02
#define SPICA_MRX_RXA_TERM_CFG__DEFAULT                      0x70
#define SPICA_MRX_RXA_TERM_CFG__ICOUNT                        5
#define SPICA_MRX_RXA_TERM_CFG__ISPAN                         0x800
#define SPICA_MRX_RXA_TERM_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_RXA_TERM_CFG__ADDRESS)
#define SPICA_MRX_RXA_TERM_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_RXA_TERM_CFG__ADDRESS)
#define SPICA_MRX_RXA_TERM_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_RXA_TERM_CFG__ADDRESS, (data))
#define SPICA_MRX_RXA_TERM_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_RXA_TERM_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD1__READ(die, channel)         SPICA_MRX_RXA_TERM_CFG__RSRVD1__GET(SPICA_MRX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD1__MASK                       0xf
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD1__OFFSET                     12
#  define SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__READ(die, channel)         SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__GET(SPICA_MRX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__WRITE(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__RMW(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__MASK                       0xf
#  define SPICA_MRX_RXA_TERM_CFG__ADJ_ITERM__OFFSET                     8
#  define SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__READ(die, channel)         SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__GET(SPICA_MRX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__WRITE(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__RMW(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__MASK                       0xf
#  define SPICA_MRX_RXA_TERM_CFG__TERM_RTRIM__OFFSET                     4
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD2__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD2__READ(die, channel)         SPICA_MRX_RXA_TERM_CFG__RSRVD2__GET(SPICA_MRX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD2__MASK                       0x1
#  define SPICA_MRX_RXA_TERM_CFG__RSRVD2__OFFSET                     3
#  define SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__READ(die, channel)         SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__GET(SPICA_MRX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__WRITE(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__RMW(die, channel, fdata) SPICA_MRX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__MASK                       0x7
#  define SPICA_MRX_RXA_TERM_CFG__TERM_ATTN__OFFSET                     0

#define SPICA_MRX_RXA_PROBE_EN_CFG__ADDRESS                      0x1e3d0b
#define SPICA_MRX_RXA_PROBE_EN_CFG__DEFAULT                      0x0
#define SPICA_MRX_RXA_PROBE_EN_CFG__ICOUNT                        5
#define SPICA_MRX_RXA_PROBE_EN_CFG__ISPAN                         0x800
#define SPICA_MRX_RXA_PROBE_EN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_RXA_PROBE_EN_CFG__ADDRESS)
#define SPICA_MRX_RXA_PROBE_EN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_RXA_PROBE_EN_CFG__ADDRESS)
#define SPICA_MRX_RXA_PROBE_EN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_RXA_PROBE_EN_CFG__ADDRESS, (data))
#define SPICA_MRX_RXA_PROBE_EN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_RXA_PROBE_EN_CFG__ADDRESS, (data), (mask))
#  define SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__READ(die, channel)         SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__GET(SPICA_MRX_RXA_PROBE_EN_CFG__READ(die, channel))
#  define SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__WRITE(die, channel, fdata) SPICA_MRX_RXA_PROBE_EN_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__RMW(die, channel, fdata) SPICA_MRX_RXA_PROBE_EN_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__MASK                       0xffff
#  define SPICA_MRX_RXA_PROBE_EN_CFG__PROBE_EN__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS                      0x1e3dd2
#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__OFFSET                     7
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__OFFSET                     6
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__OFFSET                     5
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__OFFSET                     4
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__OFFSET                     3
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__OFFSET                     2
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__OFFSET                     1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS                      0x1e3dea
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__GET(SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS                      0x1e3deb
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__GET(SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__MASK                       0xf
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__OFFSET                     4
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__GET(SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__MASK                       0xf
#  define SPICA_MRX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FSM_INT__ADDRESS                      0x1e3df9
#define SPICA_MRX_PLL_PLLD_FSM_INT__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FSM_INT__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FSM_INT__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FSM_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FSM_INT__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FSM_INT__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FSM_INT__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FSM_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FSM_INT__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__GET(SPICA_MRX_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__MASK                       0x3f
#  define SPICA_MRX_PLL_PLLD_FSM_INT__RSRVD1__OFFSET                     2
#  define SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__GET(SPICA_MRX_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__OFFSET                     1
#  define SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__GET(SPICA_MRX_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FSM_INTS__ADDRESS                      0x1e3dfb
#define SPICA_MRX_PLL_PLLD_FSM_INTS__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FSM_INTS__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FSM_INTS__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FSM_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FSM_INTS__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FSM_INTS__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FSM_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FSM_INTS__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FSM_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FSM_INTS__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__GET(SPICA_MRX_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__MASK                       0x3f
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__RSRVD1__OFFSET                     2
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(SPICA_MRX_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__OFFSET                     1
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__READ(die, channel)         SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(SPICA_MRX_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__ADDRESS                      0x1e3e18
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__ADDRESS                      0x1e3e19
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG1__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG1__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG1__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__ADDRESS                      0x1e3e1a
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG2__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG2__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG2__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG2__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG2__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__ADDRESS                      0x1e3e1b
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG3__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG3__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG3__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__MASK                       0x7f
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RSRVD1__OFFSET                     1
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG3__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG3__NN_B24__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__ADDRESS                      0x1e3e1c
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG4__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG4__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG4__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG4__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG4__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG4__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG4__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__ADDRESS                      0x1e3e1d
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG5__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG5__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG5__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG5__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG5__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG5__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG5__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__ADDRESS                      0x1e3e1e
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG6__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG6__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG6__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG6__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG6__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG6__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG6__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__ADDRESS                      0x1e3e1f
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DEFAULT                      0x3
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG7__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG7__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG7__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG7__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__MASK                       0x3f
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RSRVD1__OFFSET                     2
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__DD_B24__OFFSET                     1
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__ADDRESS                      0x1e3e20
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_FBDSM_CFG8__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG8__ADDRESS)
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__READ(die, channel)         SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__GET(SPICA_MRX_PLL_PLLD_FBDSM_CFG8__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG8__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_FBDSM_CFG8__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__MASK                       0xff
#  define SPICA_MRX_PLL_PLLD_FBDSM_CFG8__MM__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_RST_CFG0__ADDRESS                      0x1e3e25
#define SPICA_MRX_PLL_PLLD_RST_CFG0__DEFAULT                      0x1
#define SPICA_MRX_PLL_PLLD_RST_CFG0__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_RST_CFG0__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_RST_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_RST_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_RST_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_RST_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_RST_CFG0__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_RST_CFG0__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCH__OFFSET                     7
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCF__OFFSET                     6
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCC__OFFSET                     5
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCX__OFFSET                     4
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_FCAL__OFFSET                     3
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__OFFSET                     2
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__FSM_TOP__OFFSET                     1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__READ(die, channel)         SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__GET(SPICA_MRX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_RST_CFG0__PLLD_TOP__OFFSET                     0

#define SPICA_MRX_PLL_PLLD_CFG0__ADDRESS                      0x1e3e2a
#define SPICA_MRX_PLL_PLLD_CFG0__DEFAULT                      0x8
#define SPICA_MRX_PLL_PLLD_CFG0__ICOUNT                        5
#define SPICA_MRX_PLL_PLLD_CFG0__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLD_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLD_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLD_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLD_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLD_CFG0__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLD_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLD_CFG0__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__READ(die, channel)         SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__GET(SPICA_MRX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__MASK                       0x7
#  define SPICA_MRX_PLL_PLLD_CFG0__RSRVD1__OFFSET                     5
#  define SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__READ(die, channel)         SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__GET(SPICA_MRX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__OFFSET                     4
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__READ(die, channel)         SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__GET(SPICA_MRX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__OFFSET                     3
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__SET(rdata, fdata)         (((rdata) & 0xf9) | (((uint32_t)(fdata) << 1) & 0x6))
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__GET(rdata)                (((rdata) >> 1) & 0x3)
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__READ(die, channel)         SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__GET(SPICA_MRX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__MASK                       0x3
#  define SPICA_MRX_PLL_PLLD_CFG0__AFIFO_THRESH__OFFSET                     1
#  define SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__READ(die, channel)         SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__GET(SPICA_MRX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__MASK                       0x1
#  define SPICA_MRX_PLL_PLLD_CFG0__SNAPSHOT_EN__OFFSET                     0

#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__ADDRESS                      0x1e3e45
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__ICOUNT                        5
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLA_FBDIV_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG0__ADDRESS)
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG0__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG0__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__MASK                       0x7f
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RSRVD1__OFFSET                     1
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG0__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__MASK                       0x1
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__OFFSET                     0

#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__ADDRESS                      0x1e3e46
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__DEFAULT                      0x0
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__ICOUNT                        5
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLA_FBDIV_CFG1__ADDRESS)
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG1__ADDRESS)
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG1__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG1__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__MASK                       0x1
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__OFFSET                     7
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__SET(rdata, fdata)         (((rdata) & 0x9f) | (((uint32_t)(fdata) << 5) & 0x60))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__GET(rdata)                (((rdata) >> 5) & 0x3)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__MASK                       0x3
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__OFFSET                     5
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__MASK                       0x1
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__OFFSET                     4
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__MASK                       0xf
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__OFFSET                     0

#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__ADDRESS                      0x1e3e48
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__DEFAULT                      0x2
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__ICOUNT                        5
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__ISPAN                         0x800
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_PLLA_FBDIV_CFG3__ADDRESS)
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG3__ADDRESS)
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG3__ADDRESS, (data))
#define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_PLLA_FBDIV_CFG3__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__MASK                       0x3
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__OFFSET                     6
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__MASK                       0x1
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__OFFSET                     5
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__MASK                       0x1
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__OFFSET                     4
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__READ(die, channel)         SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__GET(SPICA_MRX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__WRITE(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__RMW(die, channel, fdata) SPICA_MRX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__MASK                       0xf
#  define SPICA_MRX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__OFFSET                     0

#define SPICA_ORX_TOP_RESET__ADDRESS                      0x1e6000
#define SPICA_ORX_TOP_RESET__DEFAULT                      0xff
#define SPICA_ORX_TOP_RESET__ICOUNT                        5
#define SPICA_ORX_TOP_RESET__ISPAN                         0x800
#define SPICA_ORX_TOP_RESET__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_TOP_RESET__ADDRESS)
#define SPICA_ORX_TOP_RESET__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_TOP_RESET__ADDRESS)
#define SPICA_ORX_TOP_RESET__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_TOP_RESET__ADDRESS, (data))
#define SPICA_ORX_TOP_RESET__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_TOP_RESET__ADDRESS, (data), (mask))
#  define SPICA_ORX_TOP_RESET__SOFT_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_TOP_RESET__SOFT_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_TOP_RESET__SOFT_RESET__READ(die, channel)         SPICA_ORX_TOP_RESET__SOFT_RESET__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__SOFT_RESET__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_TOP_RESET__SOFT_RESET__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_TOP_RESET__SOFT_RESET__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__SOFT_RESET__OFFSET                     15
#  define SPICA_ORX_TOP_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_ORX_TOP_RESET__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_ORX_TOP_RESET__RSRVD1__READ(die, channel)         SPICA_ORX_TOP_RESET__RSRVD1__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_ORX_TOP_RESET__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_ORX_TOP_RESET__RSRVD1__MASK                       0x7f
#  define SPICA_ORX_TOP_RESET__RSRVD1__OFFSET                     8
#  define SPICA_ORX_TOP_RESET__PROCESS_MONITOR__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_TOP_RESET__PROCESS_MONITOR__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_TOP_RESET__PROCESS_MONITOR__READ(die, channel)         SPICA_ORX_TOP_RESET__PROCESS_MONITOR__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__PROCESS_MONITOR__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_TOP_RESET__PROCESS_MONITOR__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_TOP_RESET__PROCESS_MONITOR__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__PROCESS_MONITOR__OFFSET                     7
#  define SPICA_ORX_TOP_RESET__TIA__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ORX_TOP_RESET__TIA__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ORX_TOP_RESET__TIA__READ(die, channel)         SPICA_ORX_TOP_RESET__TIA__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__TIA__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_TOP_RESET__TIA__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_TOP_RESET__TIA__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__TIA__OFFSET                     6
#  define SPICA_ORX_TOP_RESET__CDRLD__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_TOP_RESET__CDRLD__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_TOP_RESET__CDRLD__READ(die, channel)         SPICA_ORX_TOP_RESET__CDRLD__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__CDRLD__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_TOP_RESET__CDRLD__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_TOP_RESET__CDRLD__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__CDRLD__OFFSET                     5
#  define SPICA_ORX_TOP_RESET__DTL__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_TOP_RESET__DTL__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_TOP_RESET__DTL__READ(die, channel)         SPICA_ORX_TOP_RESET__DTL__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__DTL__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_TOP_RESET__DTL__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_TOP_RESET__DTL__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__DTL__OFFSET                     4
#  define SPICA_ORX_TOP_RESET__DBG__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_TOP_RESET__DBG__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_TOP_RESET__DBG__READ(die, channel)         SPICA_ORX_TOP_RESET__DBG__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__DBG__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_TOP_RESET__DBG__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_TOP_RESET__DBG__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__DBG__OFFSET                     3
#  define SPICA_ORX_TOP_RESET__CP__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_TOP_RESET__CP__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_TOP_RESET__CP__READ(die, channel)         SPICA_ORX_TOP_RESET__CP__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__CP__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_TOP_RESET__CP__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_TOP_RESET__CP__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__CP__OFFSET                     2
#  define SPICA_ORX_TOP_RESET__CHK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_TOP_RESET__CHK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_TOP_RESET__CHK__READ(die, channel)         SPICA_ORX_TOP_RESET__CHK__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__CHK__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_TOP_RESET__CHK__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_TOP_RESET__CHK__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__CHK__OFFSET                     1
#  define SPICA_ORX_TOP_RESET__CID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_TOP_RESET__CID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_TOP_RESET__CID__READ(die, channel)         SPICA_ORX_TOP_RESET__CID__GET(SPICA_ORX_TOP_RESET__READ(die, channel))
#  define SPICA_ORX_TOP_RESET__CID__WRITE(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_TOP_RESET__CID__RMW(die, channel, fdata) SPICA_ORX_TOP_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_TOP_RESET__CID__MASK                       0x1
#  define SPICA_ORX_TOP_RESET__CID__OFFSET                     0

#define SPICA_ORX_TOP_CLKEN__ADDRESS                      0x1e6001
#define SPICA_ORX_TOP_CLKEN__DEFAULT                      0x8000
#define SPICA_ORX_TOP_CLKEN__ICOUNT                        5
#define SPICA_ORX_TOP_CLKEN__ISPAN                         0x800
#define SPICA_ORX_TOP_CLKEN__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_TOP_CLKEN__ADDRESS)
#define SPICA_ORX_TOP_CLKEN__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_TOP_CLKEN__ADDRESS)
#define SPICA_ORX_TOP_CLKEN__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_TOP_CLKEN__ADDRESS, (data))
#define SPICA_ORX_TOP_CLKEN__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_TOP_CLKEN__ADDRESS, (data), (mask))
#  define SPICA_ORX_TOP_CLKEN__OUT_GAPPED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_TOP_CLKEN__OUT_GAPPED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__OUT_GAPPED__READ(die, channel)         SPICA_ORX_TOP_CLKEN__OUT_GAPPED__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__OUT_GAPPED__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_TOP_CLKEN__OUT_GAPPED__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_TOP_CLKEN__OUT_GAPPED__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__OUT_GAPPED__OFFSET                     15
#  define SPICA_ORX_TOP_CLKEN__TIA__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_ORX_TOP_CLKEN__TIA__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__TIA__READ(die, channel)         SPICA_ORX_TOP_CLKEN__TIA__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__TIA__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_TOP_CLKEN__TIA__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_TOP_CLKEN__TIA__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__TIA__OFFSET                     14
#  define SPICA_ORX_TOP_CLKEN__CDRLD__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_ORX_TOP_CLKEN__CDRLD__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__CDRLD__READ(die, channel)         SPICA_ORX_TOP_CLKEN__CDRLD__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__CDRLD__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_TOP_CLKEN__CDRLD__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_TOP_CLKEN__CDRLD__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__CDRLD__OFFSET                     13
#  define SPICA_ORX_TOP_CLKEN__CP__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_ORX_TOP_CLKEN__CP__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__CP__READ(die, channel)         SPICA_ORX_TOP_CLKEN__CP__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__CP__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_TOP_CLKEN__CP__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_TOP_CLKEN__CP__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__CP__OFFSET                     12
#  define SPICA_ORX_TOP_CLKEN__DTL_OUT__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_ORX_TOP_CLKEN__DTL_OUT__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__DTL_OUT__READ(die, channel)         SPICA_ORX_TOP_CLKEN__DTL_OUT__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__DTL_OUT__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_TOP_CLKEN__DTL_OUT__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_TOP_CLKEN__DTL_OUT__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__DTL_OUT__OFFSET                     11
#  define SPICA_ORX_TOP_CLKEN__DTL__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_ORX_TOP_CLKEN__DTL__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__DTL__READ(die, channel)         SPICA_ORX_TOP_CLKEN__DTL__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__DTL__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_TOP_CLKEN__DTL__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_TOP_CLKEN__DTL__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__DTL__OFFSET                     10
#  define SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__READ(die, channel)         SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__DBG_CAPTURE__OFFSET                     9
#  define SPICA_ORX_TOP_CLKEN__DBG__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_ORX_TOP_CLKEN__DBG__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__DBG__READ(die, channel)         SPICA_ORX_TOP_CLKEN__DBG__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__DBG__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_TOP_CLKEN__DBG__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_TOP_CLKEN__DBG__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__DBG__OFFSET                     8
#  define SPICA_ORX_TOP_CLKEN__AUX__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_TOP_CLKEN__AUX__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__AUX__READ(die, channel)         SPICA_ORX_TOP_CLKEN__AUX__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__AUX__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_TOP_CLKEN__AUX__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_TOP_CLKEN__AUX__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__AUX__OFFSET                     7
#  define SPICA_ORX_TOP_CLKEN__RXA__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ORX_TOP_CLKEN__RXA__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__RXA__READ(die, channel)         SPICA_ORX_TOP_CLKEN__RXA__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__RXA__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_TOP_CLKEN__RXA__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_TOP_CLKEN__RXA__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__RXA__OFFSET                     6
#  define SPICA_ORX_TOP_CLKEN__CHK__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_TOP_CLKEN__CHK__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__CHK__READ(die, channel)         SPICA_ORX_TOP_CLKEN__CHK__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__CHK__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_TOP_CLKEN__CHK__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_TOP_CLKEN__CHK__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__CHK__OFFSET                     4
#  define SPICA_ORX_TOP_CLKEN__OPD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_TOP_CLKEN__OPD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__OPD__READ(die, channel)         SPICA_ORX_TOP_CLKEN__OPD__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__OPD__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_TOP_CLKEN__OPD__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_TOP_CLKEN__OPD__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__OPD__OFFSET                     3
#  define SPICA_ORX_TOP_CLKEN__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_TOP_CLKEN__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__CID__READ(die, channel)         SPICA_ORX_TOP_CLKEN__CID__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__CID__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_TOP_CLKEN__CID__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_TOP_CLKEN__CID__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__CID__OFFSET                     2
#  define SPICA_ORX_TOP_CLKEN__ODP__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_TOP_CLKEN__ODP__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__ODP__READ(die, channel)         SPICA_ORX_TOP_CLKEN__ODP__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__ODP__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_TOP_CLKEN__ODP__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_TOP_CLKEN__ODP__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__ODP__OFFSET                     1
#  define SPICA_ORX_TOP_CLKEN__OUT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_TOP_CLKEN__OUT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_TOP_CLKEN__OUT__READ(die, channel)         SPICA_ORX_TOP_CLKEN__OUT__GET(SPICA_ORX_TOP_CLKEN__READ(die, channel))
#  define SPICA_ORX_TOP_CLKEN__OUT__WRITE(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_TOP_CLKEN__OUT__RMW(die, channel, fdata) SPICA_ORX_TOP_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_TOP_CLKEN__OUT__MASK                       0x1
#  define SPICA_ORX_TOP_CLKEN__OUT__OFFSET                     0

#define SPICA_ORX_TOP_SCRATCH5__ADDRESS                      0x1e6031
#define SPICA_ORX_TOP_SCRATCH5__DEFAULT                      0x0
#define SPICA_ORX_TOP_SCRATCH5__ICOUNT                        5
#define SPICA_ORX_TOP_SCRATCH5__ISPAN                         0x800
#define SPICA_ORX_TOP_SCRATCH5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_TOP_SCRATCH5__ADDRESS)
#define SPICA_ORX_TOP_SCRATCH5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_TOP_SCRATCH5__ADDRESS)
#define SPICA_ORX_TOP_SCRATCH5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_TOP_SCRATCH5__ADDRESS, (data))
#define SPICA_ORX_TOP_SCRATCH5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_TOP_SCRATCH5__ADDRESS, (data), (mask))
#  define SPICA_ORX_TOP_SCRATCH5__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_TOP_SCRATCH5__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_TOP_SCRATCH5__VALUE__READ(die, channel)         SPICA_ORX_TOP_SCRATCH5__VALUE__GET(SPICA_ORX_TOP_SCRATCH5__READ(die, channel))
#  define SPICA_ORX_TOP_SCRATCH5__VALUE__WRITE(die, channel, fdata) SPICA_ORX_TOP_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_TOP_SCRATCH5__VALUE__RMW(die, channel, fdata) SPICA_ORX_TOP_SCRATCH5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_TOP_SCRATCH5__VALUE__MASK                       0xffff
#  define SPICA_ORX_TOP_SCRATCH5__VALUE__OFFSET                     0

#define SPICA_ORX_TOP_SCRATCH6__ADDRESS                      0x1e6032
#define SPICA_ORX_TOP_SCRATCH6__DEFAULT                      0x0
#define SPICA_ORX_TOP_SCRATCH6__ICOUNT                        5
#define SPICA_ORX_TOP_SCRATCH6__ISPAN                         0x800
#define SPICA_ORX_TOP_SCRATCH6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_TOP_SCRATCH6__ADDRESS)
#define SPICA_ORX_TOP_SCRATCH6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_TOP_SCRATCH6__ADDRESS)
#define SPICA_ORX_TOP_SCRATCH6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_TOP_SCRATCH6__ADDRESS, (data))
#define SPICA_ORX_TOP_SCRATCH6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_TOP_SCRATCH6__ADDRESS, (data), (mask))
#  define SPICA_ORX_TOP_SCRATCH6__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_TOP_SCRATCH6__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_TOP_SCRATCH6__VALUE__READ(die, channel)         SPICA_ORX_TOP_SCRATCH6__VALUE__GET(SPICA_ORX_TOP_SCRATCH6__READ(die, channel))
#  define SPICA_ORX_TOP_SCRATCH6__VALUE__WRITE(die, channel, fdata) SPICA_ORX_TOP_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_TOP_SCRATCH6__VALUE__RMW(die, channel, fdata) SPICA_ORX_TOP_SCRATCH6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_TOP_SCRATCH6__VALUE__MASK                       0xffff
#  define SPICA_ORX_TOP_SCRATCH6__VALUE__OFFSET                     0

#define SPICA_ORX_CP_STORAGE_ACCESS__ADDRESS                      0x1e604a
#define SPICA_ORX_CP_STORAGE_ACCESS__DEFAULT                      0x0
#define SPICA_ORX_CP_STORAGE_ACCESS__ICOUNT                        5
#define SPICA_ORX_CP_STORAGE_ACCESS__ISPAN                         0x800
#define SPICA_ORX_CP_STORAGE_ACCESS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_STORAGE_ACCESS__ADDRESS)
#define SPICA_ORX_CP_STORAGE_ACCESS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_STORAGE_ACCESS__ADDRESS)
#define SPICA_ORX_CP_STORAGE_ACCESS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_STORAGE_ACCESS__ADDRESS, (data))
#define SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_STORAGE_ACCESS__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__READ(die, channel)         SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__GET(SPICA_ORX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__WRITE(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__RMW(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__MASK                       0x1
#  define SPICA_ORX_CP_STORAGE_ACCESS__ACCESS__OFFSET                     15
#  define SPICA_ORX_CP_STORAGE_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_ORX_CP_STORAGE_ACCESS__RBW__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_ORX_CP_STORAGE_ACCESS__RBW__READ(die, channel)         SPICA_ORX_CP_STORAGE_ACCESS__RBW__GET(SPICA_ORX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_ORX_CP_STORAGE_ACCESS__RBW__WRITE(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_CP_STORAGE_ACCESS__RBW__RMW(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_CP_STORAGE_ACCESS__RBW__MASK                       0x1
#  define SPICA_ORX_CP_STORAGE_ACCESS__RBW__OFFSET                     14
#  define SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__READ(die, channel)         SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__GET(SPICA_ORX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__WRITE(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__RMW(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__MASK                       0x3
#  define SPICA_ORX_CP_STORAGE_ACCESS__FORMAT__OFFSET                     12
#  define SPICA_ORX_CP_STORAGE_ACCESS__IDX__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SPICA_ORX_CP_STORAGE_ACCESS__IDX__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SPICA_ORX_CP_STORAGE_ACCESS__IDX__READ(die, channel)         SPICA_ORX_CP_STORAGE_ACCESS__IDX__GET(SPICA_ORX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_ORX_CP_STORAGE_ACCESS__IDX__WRITE(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_ORX_CP_STORAGE_ACCESS__IDX__RMW(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_ORX_CP_STORAGE_ACCESS__IDX__MASK                       0x7
#  define SPICA_ORX_CP_STORAGE_ACCESS__IDX__OFFSET                     9
#  define SPICA_ORX_CP_STORAGE_ACCESS__ID__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_ORX_CP_STORAGE_ACCESS__ID__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_ORX_CP_STORAGE_ACCESS__ID__READ(die, channel)         SPICA_ORX_CP_STORAGE_ACCESS__ID__GET(SPICA_ORX_CP_STORAGE_ACCESS__READ(die, channel))
#  define SPICA_ORX_CP_STORAGE_ACCESS__ID__WRITE(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_ORX_CP_STORAGE_ACCESS__ID__RMW(die, channel, fdata) SPICA_ORX_CP_STORAGE_ACCESS__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_ORX_CP_STORAGE_ACCESS__ID__MASK                       0x1ff
#  define SPICA_ORX_CP_STORAGE_ACCESS__ID__OFFSET                     0

#define SPICA_ORX_CP_STORAGE_DATA0__ADDRESS                      0x1e604b
#define SPICA_ORX_CP_STORAGE_DATA0__DEFAULT                      0x0
#define SPICA_ORX_CP_STORAGE_DATA0__ICOUNT                        5
#define SPICA_ORX_CP_STORAGE_DATA0__ISPAN                         0x800
#define SPICA_ORX_CP_STORAGE_DATA0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_STORAGE_DATA0__ADDRESS)
#define SPICA_ORX_CP_STORAGE_DATA0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_STORAGE_DATA0__ADDRESS)
#define SPICA_ORX_CP_STORAGE_DATA0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_STORAGE_DATA0__ADDRESS, (data))
#define SPICA_ORX_CP_STORAGE_DATA0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_STORAGE_DATA0__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_STORAGE_DATA0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_CP_STORAGE_DATA0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_CP_STORAGE_DATA0__DATA__READ(die, channel)         SPICA_ORX_CP_STORAGE_DATA0__DATA__GET(SPICA_ORX_CP_STORAGE_DATA0__READ(die, channel))
#  define SPICA_ORX_CP_STORAGE_DATA0__DATA__WRITE(die, channel, fdata) SPICA_ORX_CP_STORAGE_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_CP_STORAGE_DATA0__DATA__RMW(die, channel, fdata) SPICA_ORX_CP_STORAGE_DATA0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_CP_STORAGE_DATA0__DATA__MASK                       0xffff
#  define SPICA_ORX_CP_STORAGE_DATA0__DATA__OFFSET                     0

#define SPICA_ORX_CP_STORAGE_DATA1__ADDRESS                      0x1e604c
#define SPICA_ORX_CP_STORAGE_DATA1__DEFAULT                      0x0
#define SPICA_ORX_CP_STORAGE_DATA1__ICOUNT                        5
#define SPICA_ORX_CP_STORAGE_DATA1__ISPAN                         0x800
#define SPICA_ORX_CP_STORAGE_DATA1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_STORAGE_DATA1__ADDRESS)
#define SPICA_ORX_CP_STORAGE_DATA1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_STORAGE_DATA1__ADDRESS)
#define SPICA_ORX_CP_STORAGE_DATA1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_STORAGE_DATA1__ADDRESS, (data))
#define SPICA_ORX_CP_STORAGE_DATA1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_STORAGE_DATA1__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_STORAGE_DATA1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_CP_STORAGE_DATA1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_CP_STORAGE_DATA1__DATA__READ(die, channel)         SPICA_ORX_CP_STORAGE_DATA1__DATA__GET(SPICA_ORX_CP_STORAGE_DATA1__READ(die, channel))
#  define SPICA_ORX_CP_STORAGE_DATA1__DATA__WRITE(die, channel, fdata) SPICA_ORX_CP_STORAGE_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_CP_STORAGE_DATA1__DATA__RMW(die, channel, fdata) SPICA_ORX_CP_STORAGE_DATA1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_CP_STORAGE_DATA1__DATA__MASK                       0xffff
#  define SPICA_ORX_CP_STORAGE_DATA1__DATA__OFFSET                     0

#define SPICA_ORX_CP_FFE_CFG__ADDRESS                      0x1e6079
#define SPICA_ORX_CP_FFE_CFG__DEFAULT                      0x0
#define SPICA_ORX_CP_FFE_CFG__ICOUNT                        5
#define SPICA_ORX_CP_FFE_CFG__ISPAN                         0x800
#define SPICA_ORX_CP_FFE_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_FFE_CFG__ADDRESS)
#define SPICA_ORX_CP_FFE_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_FFE_CFG__ADDRESS)
#define SPICA_ORX_CP_FFE_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_FFE_CFG__ADDRESS, (data))
#define SPICA_ORX_CP_FFE_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_FFE_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_FFE_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_CP_FFE_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__RSRVD1__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD1__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__RSRVD1__OFFSET                     15
#  define SPICA_ORX_CP_FFE_CFG__LAST__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_ORX_CP_FFE_CFG__LAST__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__LAST__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__LAST__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__LAST__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_CP_FFE_CFG__LAST__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_CP_FFE_CFG__LAST__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__LAST__OFFSET                     14
#  define SPICA_ORX_CP_FFE_CFG__HYB_FINISH__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_ORX_CP_FFE_CFG__HYB_FINISH__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__HYB_FINISH__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__HYB_FINISH__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__HYB_FINISH__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_CP_FFE_CFG__HYB_FINISH__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_CP_FFE_CFG__HYB_FINISH__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__HYB_FINISH__OFFSET                     13
#  define SPICA_ORX_CP_FFE_CFG__HYB_START__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_ORX_CP_FFE_CFG__HYB_START__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__HYB_START__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__HYB_START__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__HYB_START__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_CP_FFE_CFG__HYB_START__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_CP_FFE_CFG__HYB_START__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__HYB_START__OFFSET                     12
#  define SPICA_ORX_CP_FFE_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_ORX_CP_FFE_CFG__RSRVD2__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD2__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__RSRVD2__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD2__MASK                       0x3
#  define SPICA_ORX_CP_FFE_CFG__RSRVD2__OFFSET                     10
#  define SPICA_ORX_CP_FFE_CFG__TRANS_CON__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_ORX_CP_FFE_CFG__TRANS_CON__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__TRANS_CON__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__TRANS_CON__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__TRANS_CON__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_CP_FFE_CFG__TRANS_CON__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_CP_FFE_CFG__TRANS_CON__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__TRANS_CON__OFFSET                     9
#  define SPICA_ORX_CP_FFE_CFG__TRANS_MODE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_ORX_CP_FFE_CFG__TRANS_MODE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__TRANS_MODE__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__TRANS_MODE__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__TRANS_MODE__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_CP_FFE_CFG__TRANS_MODE__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_CP_FFE_CFG__TRANS_MODE__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__TRANS_MODE__OFFSET                     8
#  define SPICA_ORX_CP_FFE_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_CP_FFE_CFG__RSRVD3__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD3__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__RSRVD3__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_FFE_CFG__RSRVD3__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__RSRVD3__OFFSET                     7
#  define SPICA_ORX_CP_FFE_CFG__CON__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ORX_CP_FFE_CFG__CON__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ORX_CP_FFE_CFG__CON__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__CON__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__CON__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_CP_FFE_CFG__CON__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_CP_FFE_CFG__CON__MASK                       0x1
#  define SPICA_ORX_CP_FFE_CFG__CON__OFFSET                     6
#  define SPICA_ORX_CP_FFE_CFG__MODE__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_ORX_CP_FFE_CFG__MODE__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_ORX_CP_FFE_CFG__MODE__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__MODE__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__MODE__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_ORX_CP_FFE_CFG__MODE__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_ORX_CP_FFE_CFG__MODE__MASK                       0x3
#  define SPICA_ORX_CP_FFE_CFG__MODE__OFFSET                     4
#  define SPICA_ORX_CP_FFE_CFG__SLICE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_ORX_CP_FFE_CFG__SLICE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_ORX_CP_FFE_CFG__SLICE__READ(die, channel)         SPICA_ORX_CP_FFE_CFG__SLICE__GET(SPICA_ORX_CP_FFE_CFG__READ(die, channel))
#  define SPICA_ORX_CP_FFE_CFG__SLICE__WRITE(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_CP_FFE_CFG__SLICE__RMW(die, channel, fdata) SPICA_ORX_CP_FFE_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_CP_FFE_CFG__SLICE__MASK                       0xf
#  define SPICA_ORX_CP_FFE_CFG__SLICE__OFFSET                     0

#define SPICA_ORX_CP_SLC_RUN_CFG__ADDRESS                      0x1e6086
#define SPICA_ORX_CP_SLC_RUN_CFG__DEFAULT                      0x0
#define SPICA_ORX_CP_SLC_RUN_CFG__ICOUNT                        5
#define SPICA_ORX_CP_SLC_RUN_CFG__ISPAN                         0x800
#define SPICA_ORX_CP_SLC_RUN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_SLC_RUN_CFG__ADDRESS)
#define SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_SLC_RUN_CFG__ADDRESS)
#define SPICA_ORX_CP_SLC_RUN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_SLC_RUN_CFG__ADDRESS, (data))
#define SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_SLC_RUN_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__MASK                       0x1
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD1__OFFSET                     15
#  define SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__SET(rdata, fdata)         (((rdata) & 0x8fff) | (((uint32_t)(fdata) << 12) & 0x7000))
#  define SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__GET(rdata)                (((rdata) >> 12) & 0x7)
#  define SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0x7000)
#  define SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__MASK                       0x7
#  define SPICA_ORX_CP_SLC_RUN_CFG__EST_CLKRATE__OFFSET                     12
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__MASK                       0x1
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD2__OFFSET                     11
#  define SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__MASK                       0x7
#  define SPICA_ORX_CP_SLC_RUN_CFG__CLKRATE__OFFSET                     8
#  define SPICA_ORX_CP_SLC_RUN_CFG__SRC__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_ORX_CP_SLC_RUN_CFG__SRC__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_ORX_CP_SLC_RUN_CFG__SRC__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__SRC__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__SRC__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_ORX_CP_SLC_RUN_CFG__SRC__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_ORX_CP_SLC_RUN_CFG__SRC__MASK                       0x3
#  define SPICA_ORX_CP_SLC_RUN_CFG__SRC__OFFSET                     6
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__MASK                       0x1
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD3__OFFSET                     5
#  define SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__MASK                       0x1
#  define SPICA_ORX_CP_SLC_RUN_CFG__MANUAL_CEN__OFFSET                     4
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__MASK                       0x7
#  define SPICA_ORX_CP_SLC_RUN_CFG__RSRVD4__OFFSET                     1
#  define SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__READ(die, channel)         SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__GET(SPICA_ORX_CP_SLC_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__WRITE(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__RMW(die, channel, fdata) SPICA_ORX_CP_SLC_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__MASK                       0x1
#  define SPICA_ORX_CP_SLC_RUN_CFG__RUN_ENG__OFFSET                     0

#define SPICA_ORX_CP_PR_RUN_CFG__ADDRESS                      0x1e6099
#define SPICA_ORX_CP_PR_RUN_CFG__DEFAULT                      0x0
#define SPICA_ORX_CP_PR_RUN_CFG__ICOUNT                        5
#define SPICA_ORX_CP_PR_RUN_CFG__ISPAN                         0x800
#define SPICA_ORX_CP_PR_RUN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_PR_RUN_CFG__ADDRESS)
#define SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_PR_RUN_CFG__ADDRESS)
#define SPICA_ORX_CP_PR_RUN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_PR_RUN_CFG__ADDRESS, (data))
#define SPICA_ORX_CP_PR_RUN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_PR_RUN_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_PR_RUN_CFG__SLICE__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_ORX_CP_PR_RUN_CFG__SLICE__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_ORX_CP_PR_RUN_CFG__SLICE__READ(die, channel)         SPICA_ORX_CP_PR_RUN_CFG__SLICE__GET(SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_RUN_CFG__SLICE__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_ORX_CP_PR_RUN_CFG__SLICE__RMW(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_ORX_CP_PR_RUN_CFG__SLICE__MASK                       0xf
#  define SPICA_ORX_CP_PR_RUN_CFG__SLICE__OFFSET                     12
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__GET(SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__MASK                       0x1
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD1__OFFSET                     11
#  define SPICA_ORX_CP_PR_RUN_CFG__SETTLE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_ORX_CP_PR_RUN_CFG__SETTLE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_ORX_CP_PR_RUN_CFG__SETTLE__READ(die, channel)         SPICA_ORX_CP_PR_RUN_CFG__SETTLE__GET(SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_RUN_CFG__SETTLE__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_CP_PR_RUN_CFG__SETTLE__RMW(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_CP_PR_RUN_CFG__SETTLE__MASK                       0x7
#  define SPICA_ORX_CP_PR_RUN_CFG__SETTLE__OFFSET                     8
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__READ(die, channel)         SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__GET(SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__MASK                       0x1
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD2__OFFSET                     7
#  define SPICA_ORX_CP_PR_RUN_CFG__DURATION__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_ORX_CP_PR_RUN_CFG__DURATION__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_ORX_CP_PR_RUN_CFG__DURATION__READ(die, channel)         SPICA_ORX_CP_PR_RUN_CFG__DURATION__GET(SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_RUN_CFG__DURATION__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_ORX_CP_PR_RUN_CFG__DURATION__RMW(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_ORX_CP_PR_RUN_CFG__DURATION__MASK                       0x7
#  define SPICA_ORX_CP_PR_RUN_CFG__DURATION__OFFSET                     4
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__READ(die, channel)         SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__GET(SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__MASK                       0x7
#  define SPICA_ORX_CP_PR_RUN_CFG__RSRVD3__OFFSET                     1
#  define SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__READ(die, channel)         SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__GET(SPICA_ORX_CP_PR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__RMW(die, channel, fdata) SPICA_ORX_CP_PR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__MASK                       0x1
#  define SPICA_ORX_CP_PR_RUN_CFG__RUN_ALG__OFFSET                     0

#define SPICA_ORX_CP_PR_CFG__ADDRESS                      0x1e609a
#define SPICA_ORX_CP_PR_CFG__DEFAULT                      0x40a0
#define SPICA_ORX_CP_PR_CFG__ICOUNT                        5
#define SPICA_ORX_CP_PR_CFG__ISPAN                         0x800
#define SPICA_ORX_CP_PR_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_PR_CFG__ADDRESS)
#define SPICA_ORX_CP_PR_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_PR_CFG__ADDRESS)
#define SPICA_ORX_CP_PR_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_PR_CFG__ADDRESS, (data))
#define SPICA_ORX_CP_PR_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_PR_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__READ(die, channel)         SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__GET(SPICA_ORX_CP_PR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__RMW(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__MASK                       0x3
#  define SPICA_ORX_CP_PR_CFG__ISI_D_QUAL__OFFSET                     14
#  define SPICA_ORX_CP_PR_CFG__LMS1Q__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_ORX_CP_PR_CFG__LMS1Q__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_ORX_CP_PR_CFG__LMS1Q__READ(die, channel)         SPICA_ORX_CP_PR_CFG__LMS1Q__GET(SPICA_ORX_CP_PR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_CFG__LMS1Q__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_ORX_CP_PR_CFG__LMS1Q__RMW(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_ORX_CP_PR_CFG__LMS1Q__MASK                       0x3
#  define SPICA_ORX_CP_PR_CFG__LMS1Q__OFFSET                     12
#  define SPICA_ORX_CP_PR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_ORX_CP_PR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_ORX_CP_PR_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_CP_PR_CFG__RSRVD1__GET(SPICA_ORX_CP_PR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_PR_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_PR_CFG__RSRVD1__MASK                       0x1
#  define SPICA_ORX_CP_PR_CFG__RSRVD1__OFFSET                     11
#  define SPICA_ORX_CP_PR_CFG__INV__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_ORX_CP_PR_CFG__INV__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_ORX_CP_PR_CFG__INV__READ(die, channel)         SPICA_ORX_CP_PR_CFG__INV__GET(SPICA_ORX_CP_PR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_CFG__INV__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_CP_PR_CFG__INV__RMW(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_CP_PR_CFG__INV__MASK                       0x1
#  define SPICA_ORX_CP_PR_CFG__INV__OFFSET                     10
#  define SPICA_ORX_CP_PR_CFG__SLC_ID__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_ORX_CP_PR_CFG__SLC_ID__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_ORX_CP_PR_CFG__SLC_ID__READ(die, channel)         SPICA_ORX_CP_PR_CFG__SLC_ID__GET(SPICA_ORX_CP_PR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_CFG__SLC_ID__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_CP_PR_CFG__SLC_ID__RMW(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_CP_PR_CFG__SLC_ID__MASK                       0x1
#  define SPICA_ORX_CP_PR_CFG__SLC_ID__OFFSET                     9
#  define SPICA_ORX_CP_PR_CFG__STORE_ADDR__SET(rdata, fdata)         (((rdata) & 0xfe0f) | (((uint32_t)(fdata) << 4) & 0x1f0))
#  define SPICA_ORX_CP_PR_CFG__STORE_ADDR__GET(rdata)                (((rdata) >> 4) & 0x1f)
#  define SPICA_ORX_CP_PR_CFG__STORE_ADDR__READ(die, channel)         SPICA_ORX_CP_PR_CFG__STORE_ADDR__GET(SPICA_ORX_CP_PR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_CFG__STORE_ADDR__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<4, 0x1f0)
#  define SPICA_ORX_CP_PR_CFG__STORE_ADDR__RMW(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<4, 0x1f0)
#  define SPICA_ORX_CP_PR_CFG__STORE_ADDR__MASK                       0x1f
#  define SPICA_ORX_CP_PR_CFG__STORE_ADDR__OFFSET                     4
#  define SPICA_ORX_CP_PR_CFG__MU__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_ORX_CP_PR_CFG__MU__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_ORX_CP_PR_CFG__MU__READ(die, channel)         SPICA_ORX_CP_PR_CFG__MU__GET(SPICA_ORX_CP_PR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_CFG__MU__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_CP_PR_CFG__MU__RMW(die, channel, fdata) SPICA_ORX_CP_PR_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_CP_PR_CFG__MU__MASK                       0xf
#  define SPICA_ORX_CP_PR_CFG__MU__OFFSET                     0

#define SPICA_ORX_CP_PR_ISI_TAP_CFG__ADDRESS                      0x1e609c
#define SPICA_ORX_CP_PR_ISI_TAP_CFG__DEFAULT                      0x700
#define SPICA_ORX_CP_PR_ISI_TAP_CFG__ICOUNT                        5
#define SPICA_ORX_CP_PR_ISI_TAP_CFG__ISPAN                         0x800
#define SPICA_ORX_CP_PR_ISI_TAP_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_PR_ISI_TAP_CFG__ADDRESS)
#define SPICA_ORX_CP_PR_ISI_TAP_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_PR_ISI_TAP_CFG__ADDRESS)
#define SPICA_ORX_CP_PR_ISI_TAP_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_PR_ISI_TAP_CFG__ADDRESS, (data))
#define SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_PR_ISI_TAP_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__GET(SPICA_ORX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__MASK                       0x1f
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD1__OFFSET                     11
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__READ(die, channel)         SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__GET(SPICA_ORX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__RMW(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__MASK                       0x7
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__QTY__OFFSET                     8
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__READ(die, channel)         SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__GET(SPICA_ORX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__MASK                       0x3
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__RSRVD2__OFFSET                     6
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__SET(rdata, fdata)         (((rdata) & 0xffc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__READ(die, channel)         SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__GET(SPICA_ORX_CP_PR_ISI_TAP_CFG__READ(die, channel))
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__WRITE(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__RMW(die, channel, fdata) SPICA_ORX_CP_PR_ISI_TAP_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__MASK                       0x3f
#  define SPICA_ORX_CP_PR_ISI_TAP_CFG__FIRST__OFFSET                     0

#define SPICA_ORX_CP_SNR_RUN_CFG__ADDRESS                      0x1e609e
#define SPICA_ORX_CP_SNR_RUN_CFG__DEFAULT                      0x0
#define SPICA_ORX_CP_SNR_RUN_CFG__ICOUNT                        5
#define SPICA_ORX_CP_SNR_RUN_CFG__ISPAN                         0x800
#define SPICA_ORX_CP_SNR_RUN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_SNR_RUN_CFG__ADDRESS)
#define SPICA_ORX_CP_SNR_RUN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_SNR_RUN_CFG__ADDRESS)
#define SPICA_ORX_CP_SNR_RUN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_SNR_RUN_CFG__ADDRESS, (data))
#define SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_SNR_RUN_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__GET(SPICA_ORX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__MASK                       0x1ff
#  define SPICA_ORX_CP_SNR_RUN_CFG__RSRVD1__OFFSET                     7
#  define SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__READ(die, channel)         SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__GET(SPICA_ORX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<4, 0x70)
#  define SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__MASK                       0x7
#  define SPICA_ORX_CP_SNR_RUN_CFG__SETTLE__OFFSET                     4
#  define SPICA_ORX_CP_SNR_RUN_CFG__DURATION__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_ORX_CP_SNR_RUN_CFG__DURATION__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_ORX_CP_SNR_RUN_CFG__DURATION__READ(die, channel)         SPICA_ORX_CP_SNR_RUN_CFG__DURATION__GET(SPICA_ORX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_RUN_CFG__DURATION__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_ORX_CP_SNR_RUN_CFG__DURATION__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_ORX_CP_SNR_RUN_CFG__DURATION__MASK                       0x7
#  define SPICA_ORX_CP_SNR_RUN_CFG__DURATION__OFFSET                     1
#  define SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__READ(die, channel)         SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__GET(SPICA_ORX_CP_SNR_RUN_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_RUN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__MASK                       0x1
#  define SPICA_ORX_CP_SNR_RUN_CFG__RUN_ALG__OFFSET                     0

#define SPICA_ORX_CP_SNR_CFG__ADDRESS                      0x1e609f
#define SPICA_ORX_CP_SNR_CFG__DEFAULT                      0x80a
#define SPICA_ORX_CP_SNR_CFG__ICOUNT                        5
#define SPICA_ORX_CP_SNR_CFG__ISPAN                         0x800
#define SPICA_ORX_CP_SNR_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_SNR_CFG__ADDRESS)
#define SPICA_ORX_CP_SNR_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_SNR_CFG__ADDRESS)
#define SPICA_ORX_CP_SNR_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_SNR_CFG__ADDRESS, (data))
#define SPICA_ORX_CP_SNR_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_SNR_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_SNR_CFG__STEP_SIZE__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_ORX_CP_SNR_CFG__STEP_SIZE__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_ORX_CP_SNR_CFG__STEP_SIZE__READ(die, channel)         SPICA_ORX_CP_SNR_CFG__STEP_SIZE__GET(SPICA_ORX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_CFG__STEP_SIZE__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_ORX_CP_SNR_CFG__STEP_SIZE__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_ORX_CP_SNR_CFG__STEP_SIZE__MASK                       0xff
#  define SPICA_ORX_CP_SNR_CFG__STEP_SIZE__OFFSET                     8
#  define SPICA_ORX_CP_SNR_CFG__INV__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_CP_SNR_CFG__INV__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_CP_SNR_CFG__INV__READ(die, channel)         SPICA_ORX_CP_SNR_CFG__INV__GET(SPICA_ORX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_CFG__INV__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_SNR_CFG__INV__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_SNR_CFG__INV__MASK                       0x1
#  define SPICA_ORX_CP_SNR_CFG__INV__OFFSET                     7
#  define SPICA_ORX_CP_SNR_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff9f) | (((uint32_t)(fdata) << 5) & 0x60))
#  define SPICA_ORX_CP_SNR_CFG__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x3)
#  define SPICA_ORX_CP_SNR_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_CP_SNR_CFG__RSRVD1__GET(SPICA_ORX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_ORX_CP_SNR_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_ORX_CP_SNR_CFG__RSRVD1__MASK                       0x3
#  define SPICA_ORX_CP_SNR_CFG__RSRVD1__OFFSET                     5
#  define SPICA_ORX_CP_SNR_CFG__STORE_ADDR__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_ORX_CP_SNR_CFG__STORE_ADDR__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_ORX_CP_SNR_CFG__STORE_ADDR__READ(die, channel)         SPICA_ORX_CP_SNR_CFG__STORE_ADDR__GET(SPICA_ORX_CP_SNR_CFG__READ(die, channel))
#  define SPICA_ORX_CP_SNR_CFG__STORE_ADDR__WRITE(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_ORX_CP_SNR_CFG__STORE_ADDR__RMW(die, channel, fdata) SPICA_ORX_CP_SNR_CFG__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_ORX_CP_SNR_CFG__STORE_ADDR__MASK                       0x1f
#  define SPICA_ORX_CP_SNR_CFG__STORE_ADDR__OFFSET                     0

#define SPICA_ORX_CP_ALG_DONE_INT__ADDRESS                      0x1e60be
#define SPICA_ORX_CP_ALG_DONE_INT__DEFAULT                      0x0
#define SPICA_ORX_CP_ALG_DONE_INT__ICOUNT                        5
#define SPICA_ORX_CP_ALG_DONE_INT__ISPAN                         0x800
#define SPICA_ORX_CP_ALG_DONE_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_CP_ALG_DONE_INT__ADDRESS)
#define SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_CP_ALG_DONE_INT__ADDRESS)
#define SPICA_ORX_CP_ALG_DONE_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_CP_ALG_DONE_INT__ADDRESS, (data))
#define SPICA_ORX_CP_ALG_DONE_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_CP_ALG_DONE_INT__ADDRESS, (data), (mask))
#  define SPICA_ORX_CP_ALG_DONE_INT__PORC__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_CP_ALG_DONE_INT__PORC__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__PORC__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__PORC__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__PORC__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_ALG_DONE_INT__PORC__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_CP_ALG_DONE_INT__PORC__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__PORC__OFFSET                     15
#  define SPICA_ORX_CP_ALG_DONE_INT__PORA__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_ORX_CP_ALG_DONE_INT__PORA__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__PORA__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__PORA__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__PORA__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_CP_ALG_DONE_INT__PORA__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_CP_ALG_DONE_INT__PORA__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__PORA__OFFSET                     14
#  define SPICA_ORX_CP_ALG_DONE_INT__PR__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_ORX_CP_ALG_DONE_INT__PR__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__PR__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__PR__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__PR__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_CP_ALG_DONE_INT__PR__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_CP_ALG_DONE_INT__PR__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__PR__OFFSET                     13
#  define SPICA_ORX_CP_ALG_DONE_INT__SNR__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_ORX_CP_ALG_DONE_INT__SNR__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__SNR__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__SNR__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__SNR__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_CP_ALG_DONE_INT__SNR__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_CP_ALG_DONE_INT__SNR__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__SNR__OFFSET                     12
#  define SPICA_ORX_CP_ALG_DONE_INT__HIST__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_ORX_CP_ALG_DONE_INT__HIST__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__HIST__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__HIST__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__HIST__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_ALG_DONE_INT__HIST__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_CP_ALG_DONE_INT__HIST__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__HIST__OFFSET                     11
#  define SPICA_ORX_CP_ALG_DONE_INT__AMP__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_ORX_CP_ALG_DONE_INT__AMP__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__AMP__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__AMP__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__AMP__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_CP_ALG_DONE_INT__AMP__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_CP_ALG_DONE_INT__AMP__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__AMP__OFFSET                     10
#  define SPICA_ORX_CP_ALG_DONE_INT__ESC__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_ORX_CP_ALG_DONE_INT__ESC__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__ESC__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__ESC__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__ESC__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_CP_ALG_DONE_INT__ESC__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_CP_ALG_DONE_INT__ESC__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__ESC__OFFSET                     9
#  define SPICA_ORX_CP_ALG_DONE_INT__DSC__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_ORX_CP_ALG_DONE_INT__DSC__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__DSC__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__DSC__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__DSC__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_CP_ALG_DONE_INT__DSC__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_CP_ALG_DONE_INT__DSC__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__DSC__OFFSET                     8
#  define SPICA_ORX_CP_ALG_DONE_INT__DSA__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_CP_ALG_DONE_INT__DSA__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__DSA__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__DSA__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__DSA__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_ALG_DONE_INT__DSA__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_CP_ALG_DONE_INT__DSA__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__DSA__OFFSET                     7
#  define SPICA_ORX_CP_ALG_DONE_INT__ESA__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ORX_CP_ALG_DONE_INT__ESA__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__ESA__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__ESA__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__ESA__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_CP_ALG_DONE_INT__ESA__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_CP_ALG_DONE_INT__ESA__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__ESA__OFFSET                     6
#  define SPICA_ORX_CP_ALG_DONE_INT__DFE__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_CP_ALG_DONE_INT__DFE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__DFE__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__DFE__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__DFE__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_CP_ALG_DONE_INT__DFE__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_CP_ALG_DONE_INT__DFE__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__DFE__OFFSET                     5
#  define SPICA_ORX_CP_ALG_DONE_INT__FFE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_CP_ALG_DONE_INT__FFE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__FFE__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__FFE__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__FFE__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_CP_ALG_DONE_INT__FFE__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_CP_ALG_DONE_INT__FFE__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__FFE__OFFSET                     4
#  define SPICA_ORX_CP_ALG_DONE_INT__V2SK__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_CP_ALG_DONE_INT__V2SK__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2SK__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__V2SK__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__V2SK__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2SK__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2SK__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__V2SK__OFFSET                     3
#  define SPICA_ORX_CP_ALG_DONE_INT__V2O__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_CP_ALG_DONE_INT__V2O__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2O__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__V2O__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__V2O__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2O__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2O__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__V2O__OFFSET                     2
#  define SPICA_ORX_CP_ALG_DONE_INT__V2GC__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_CP_ALG_DONE_INT__V2GC__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2GC__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__V2GC__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__V2GC__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2GC__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_CP_ALG_DONE_INT__V2GC__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__V2GC__OFFSET                     1
#  define SPICA_ORX_CP_ALG_DONE_INT__V1GC__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_CP_ALG_DONE_INT__V1GC__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__V1GC__READ(die, channel)         SPICA_ORX_CP_ALG_DONE_INT__V1GC__GET(SPICA_ORX_CP_ALG_DONE_INT__READ(die, channel))
#  define SPICA_ORX_CP_ALG_DONE_INT__V1GC__WRITE(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__V1GC__RMW(die, channel, fdata) SPICA_ORX_CP_ALG_DONE_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_CP_ALG_DONE_INT__V1GC__MASK                       0x1
#  define SPICA_ORX_CP_ALG_DONE_INT__V1GC__OFFSET                     0

#define SPICA_ORX_DDP_CHK_CFG__ADDRESS                      0x1e60e5
#define SPICA_ORX_DDP_CHK_CFG__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_CFG__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_CFG__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_CFG__ADDRESS)
#define SPICA_ORX_DDP_CHK_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_CFG__ADDRESS)
#define SPICA_ORX_DDP_CHK_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_CFG__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__READ(die, channel)         SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__GET(SPICA_ORX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__MASK                       0x1
#  define SPICA_ORX_DDP_CHK_CFG__SNAPSHOT_EN__OFFSET                     15
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x9fff) | (((uint32_t)(fdata) << 13) & 0x6000))
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x3)
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_DDP_CHK_CFG__RSRVD1__GET(SPICA_ORX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD1__MASK                       0x3
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD1__OFFSET                     13
#  define SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__READ(die, channel)         SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__GET(SPICA_ORX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<8, 0x1f00)
#  define SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__MASK                       0x1f
#  define SPICA_ORX_DDP_CHK_CFG__OOS_THRESH__OFFSET                     8
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD2__READ(die, channel)         SPICA_ORX_DDP_CHK_CFG__RSRVD2__GET(SPICA_ORX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD2__MASK                       0x3f
#  define SPICA_ORX_DDP_CHK_CFG__RSRVD2__OFFSET                     2
#  define SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__READ(die, channel)         SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__GET(SPICA_ORX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__MASK                       0x1
#  define SPICA_ORX_DDP_CHK_CFG__FIXED_PAT_EN__OFFSET                     1
#  define SPICA_ORX_DDP_CHK_CFG__PRBS_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_DDP_CHK_CFG__PRBS_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_DDP_CHK_CFG__PRBS_EN__READ(die, channel)         SPICA_ORX_DDP_CHK_CFG__PRBS_EN__GET(SPICA_ORX_DDP_CHK_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_CFG__PRBS_EN__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_DDP_CHK_CFG__PRBS_EN__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_DDP_CHK_CFG__PRBS_EN__MASK                       0x1
#  define SPICA_ORX_DDP_CHK_CFG__PRBS_EN__OFFSET                     0

#define SPICA_ORX_DDP_CHK_PRBS_CFG__ADDRESS                      0x1e60e6
#define SPICA_ORX_DDP_CHK_PRBS_CFG__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_PRBS_CFG__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_PRBS_CFG__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_PRBS_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_PRBS_CFG__ADDRESS)
#define SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_PRBS_CFG__ADDRESS)
#define SPICA_ORX_DDP_CHK_PRBS_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_PRBS_CFG__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_PRBS_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__GET(SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__MASK                       0x7
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__RSRVD1__OFFSET                     13
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__READ(die, channel)         SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__GET(SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__MASK                       0x1
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__DUAL_PRBS__OFFSET                     12
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__READ(die, channel)         SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__GET(SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__MASK                       0x3
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_THRESH__OFFSET                     10
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__READ(die, channel)         SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__GET(SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__MASK                       0x1
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__AUTO_POLARITY_EN__OFFSET                     9
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__READ(die, channel)         SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__GET(SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__MASK                       0x1
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_INV__OFFSET                     8
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__READ(die, channel)         SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__GET(SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__READ(die, channel)         SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__GET(SPICA_ORX_DDP_CHK_PRBS_CFG__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_PRBS_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__MASK                       0xf
#  define SPICA_ORX_DDP_CHK_PRBS_CFG__PRBS_MODE__OFFSET                     0

#define SPICA_ORX_DDP_CHK_WORD_CNT0__ADDRESS                      0x1e60eb
#define SPICA_ORX_DDP_CHK_WORD_CNT0__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_WORD_CNT0__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_WORD_CNT0__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_WORD_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_WORD_CNT0__ADDRESS)
#define SPICA_ORX_DDP_CHK_WORD_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_WORD_CNT0__ADDRESS)
#define SPICA_ORX_DDP_CHK_WORD_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_WORD_CNT0__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_WORD_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_WORD_CNT0__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__READ(die, channel)         SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__GET(SPICA_ORX_DDP_CHK_WORD_CNT0__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_WORD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__MASK                       0xffff
#  define SPICA_ORX_DDP_CHK_WORD_CNT0__VALUE__OFFSET                     0

#define SPICA_ORX_DDP_CHK_WORD_CNT1__ADDRESS                      0x1e60ec
#define SPICA_ORX_DDP_CHK_WORD_CNT1__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_WORD_CNT1__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_WORD_CNT1__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_WORD_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_WORD_CNT1__ADDRESS)
#define SPICA_ORX_DDP_CHK_WORD_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_WORD_CNT1__ADDRESS)
#define SPICA_ORX_DDP_CHK_WORD_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_WORD_CNT1__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_WORD_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_WORD_CNT1__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__READ(die, channel)         SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__GET(SPICA_ORX_DDP_CHK_WORD_CNT1__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_WORD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__MASK                       0xffff
#  define SPICA_ORX_DDP_CHK_WORD_CNT1__VALUE__OFFSET                     0

#define SPICA_ORX_DDP_CHK_WORD_CNT2__ADDRESS                      0x1e60ed
#define SPICA_ORX_DDP_CHK_WORD_CNT2__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_WORD_CNT2__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_WORD_CNT2__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_WORD_CNT2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_WORD_CNT2__ADDRESS)
#define SPICA_ORX_DDP_CHK_WORD_CNT2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_WORD_CNT2__ADDRESS)
#define SPICA_ORX_DDP_CHK_WORD_CNT2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_WORD_CNT2__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_WORD_CNT2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_WORD_CNT2__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__READ(die, channel)         SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__GET(SPICA_ORX_DDP_CHK_WORD_CNT2__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_WORD_CNT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__MASK                       0xffff
#  define SPICA_ORX_DDP_CHK_WORD_CNT2__VALUE__OFFSET                     0

#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS                      0x1e60ee
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__READ(die, channel)         SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__GET(SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__MASK                       0xffff
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT0__VALUE__OFFSET                     0

#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS                      0x1e60ef
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__READ(die, channel)         SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__GET(SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__MASK                       0xffff
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_CNT1__VALUE__OFFSET                     0

#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS                      0x1e60f0
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__READ(die, channel)         SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__GET(SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__MASK                       0xffff
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT0__VALUE__OFFSET                     0

#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS                      0x1e60f1
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__DEFAULT                      0x0
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__ICOUNT                        5
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__ISPAN                         0x800
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS)
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data))
#define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__READ(die, channel)         SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__GET(SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__READ(die, channel))
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__WRITE(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__RMW(die, channel, fdata) SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__MASK                       0xffff
#  define SPICA_ORX_DDP_CHK_BIT_ERROR_ODD_CNT1__VALUE__OFFSET                     0

#define SPICA_ORX_DDP_INT__ADDRESS                      0x1e60f2
#define SPICA_ORX_DDP_INT__DEFAULT                      0x0
#define SPICA_ORX_DDP_INT__ICOUNT                        5
#define SPICA_ORX_DDP_INT__ISPAN                         0x800
#define SPICA_ORX_DDP_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_INT__ADDRESS)
#define SPICA_ORX_DDP_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_INT__ADDRESS)
#define SPICA_ORX_DDP_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_INT__ADDRESS, (data))
#define SPICA_ORX_DDP_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_INT__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SPICA_ORX_DDP_INT__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SPICA_ORX_DDP_INT__RSRVD1__READ(die, channel)         SPICA_ORX_DDP_INT__RSRVD1__GET(SPICA_ORX_DDP_INT__READ(die, channel))
#  define SPICA_ORX_DDP_INT__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_ORX_DDP_INT__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_ORX_DDP_INT__RSRVD1__MASK                       0x3ff
#  define SPICA_ORX_DDP_INT__RSRVD1__OFFSET                     6
#  define SPICA_ORX_DDP_INT__CID__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_DDP_INT__CID__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_DDP_INT__CID__READ(die, channel)         SPICA_ORX_DDP_INT__CID__GET(SPICA_ORX_DDP_INT__READ(die, channel))
#  define SPICA_ORX_DDP_INT__CID__WRITE(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_DDP_INT__CID__RMW(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_DDP_INT__CID__MASK                       0x1
#  define SPICA_ORX_DDP_INT__CID__OFFSET                     5
#  define SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__READ(die, channel)         SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__GET(SPICA_ORX_DDP_INT__READ(die, channel))
#  define SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__WRITE(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__RMW(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__MASK                       0x1
#  define SPICA_ORX_DDP_INT__CHK_FIXED_PAT_SYNC__OFFSET                     4
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__READ(die, channel)         SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__GET(SPICA_ORX_DDP_INT__READ(die, channel))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__WRITE(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__RMW(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__MASK                       0x1
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV_ODD__OFFSET                     3
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__READ(die, channel)         SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__GET(SPICA_ORX_DDP_INT__READ(die, channel))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__WRITE(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__RMW(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__MASK                       0x1
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC_ODD__OFFSET                     2
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__READ(die, channel)         SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__GET(SPICA_ORX_DDP_INT__READ(die, channel))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__WRITE(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__RMW(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__MASK                       0x1
#  define SPICA_ORX_DDP_INT__CHK_PRBS_POLARITY_INV__OFFSET                     1
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__READ(die, channel)         SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__GET(SPICA_ORX_DDP_INT__READ(die, channel))
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__WRITE(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__RMW(die, channel, fdata) SPICA_ORX_DDP_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__MASK                       0x1
#  define SPICA_ORX_DDP_INT__CHK_PRBS_SYNC__OFFSET                     0

#define SPICA_ORX_DDP_INTS__ADDRESS                      0x1e60f4
#define SPICA_ORX_DDP_INTS__DEFAULT                      0x0
#define SPICA_ORX_DDP_INTS__ICOUNT                        5
#define SPICA_ORX_DDP_INTS__ISPAN                         0x800
#define SPICA_ORX_DDP_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_DDP_INTS__ADDRESS)
#define SPICA_ORX_DDP_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_DDP_INTS__ADDRESS)
#define SPICA_ORX_DDP_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_DDP_INTS__ADDRESS, (data))
#define SPICA_ORX_DDP_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_DDP_INTS__ADDRESS, (data), (mask))
#  define SPICA_ORX_DDP_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xffc0))
#  define SPICA_ORX_DDP_INTS__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3ff)
#  define SPICA_ORX_DDP_INTS__RSRVD1__READ(die, channel)         SPICA_ORX_DDP_INTS__RSRVD1__GET(SPICA_ORX_DDP_INTS__READ(die, channel))
#  define SPICA_ORX_DDP_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_ORX_DDP_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<6, 0xffc0)
#  define SPICA_ORX_DDP_INTS__RSRVD1__MASK                       0x3ff
#  define SPICA_ORX_DDP_INTS__RSRVD1__OFFSET                     6
#  define SPICA_ORX_DDP_INTS__CIDS__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_DDP_INTS__CIDS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_DDP_INTS__CIDS__READ(die, channel)         SPICA_ORX_DDP_INTS__CIDS__GET(SPICA_ORX_DDP_INTS__READ(die, channel))
#  define SPICA_ORX_DDP_INTS__CIDS__WRITE(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_DDP_INTS__CIDS__RMW(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_DDP_INTS__CIDS__MASK                       0x1
#  define SPICA_ORX_DDP_INTS__CIDS__OFFSET                     5
#  define SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__READ(die, channel)         SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__GET(SPICA_ORX_DDP_INTS__READ(die, channel))
#  define SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__WRITE(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__RMW(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__MASK                       0x1
#  define SPICA_ORX_DDP_INTS__CHK_FIXED_PAT_SYNCS__OFFSET                     4
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__READ(die, channel)         SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__GET(SPICA_ORX_DDP_INTS__READ(die, channel))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__WRITE(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__RMW(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__MASK                       0x1
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INV_ODDS__OFFSET                     3
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__READ(die, channel)         SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__GET(SPICA_ORX_DDP_INTS__READ(die, channel))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__WRITE(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__RMW(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__MASK                       0x1
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNC_ODDS__OFFSET                     2
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__READ(die, channel)         SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__GET(SPICA_ORX_DDP_INTS__READ(die, channel))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__WRITE(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__RMW(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__MASK                       0x1
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_POLARITY_INVS__OFFSET                     1
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__READ(die, channel)         SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__GET(SPICA_ORX_DDP_INTS__READ(die, channel))
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__WRITE(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__RMW(die, channel, fdata) SPICA_ORX_DDP_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__MASK                       0x1
#  define SPICA_ORX_DDP_INTS__CHK_PRBS_SYNCS__OFFSET                     0

#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS                      0x1e6102
#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DEFAULT                      0x0
#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__ICOUNT                        5
#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__ISPAN                         0x800
#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS)
#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS)
#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS, (data))
#define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<11, 0xf800)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__MASK                       0x1f
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DSP_CTL__OFFSET                     11
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__MASK                       0x1
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__POR_DEC_MODE__OFFSET                     10
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__MASK                       0x1
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__DPLUT_EN__OFFSET                     9
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__MASK                       0x1
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__EYEIDLUT_EN__OFFSET                     8
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__MASK                       0x1
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__OIM_EN__OFFSET                     7
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__MASK                       0x1
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SFEC_EN__OFFSET                     6
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__MASK                       0x1
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__SNRM_EN__OFFSET                     5
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__MASK                       0x1
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAMX_MODE__OFFSET                     4
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__READ(die, channel)         SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__GET(SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__READ(die, channel))
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__WRITE(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__RMW(die, channel, fdata) SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__MASK                       0xf
#  define SPICA_ORX_ODP_DSP_DSP_MODE_CONTROL_CFG__PAM4_MODE__OFFSET                     0

#define SPICA_ORX_RXA_TERM_CFG__ADDRESS                      0x1e6502
#define SPICA_ORX_RXA_TERM_CFG__DEFAULT                      0x70
#define SPICA_ORX_RXA_TERM_CFG__ICOUNT                        5
#define SPICA_ORX_RXA_TERM_CFG__ISPAN                         0x800
#define SPICA_ORX_RXA_TERM_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_RXA_TERM_CFG__ADDRESS)
#define SPICA_ORX_RXA_TERM_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_RXA_TERM_CFG__ADDRESS)
#define SPICA_ORX_RXA_TERM_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_RXA_TERM_CFG__ADDRESS, (data))
#define SPICA_ORX_RXA_TERM_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_RXA_TERM_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD1__READ(die, channel)         SPICA_ORX_RXA_TERM_CFG__RSRVD1__GET(SPICA_ORX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD1__MASK                       0xf
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD1__OFFSET                     12
#  define SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__READ(die, channel)         SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__GET(SPICA_ORX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__WRITE(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__RMW(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__MASK                       0xf
#  define SPICA_ORX_RXA_TERM_CFG__ADJ_ITERM__OFFSET                     8
#  define SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__READ(die, channel)         SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__GET(SPICA_ORX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__WRITE(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__RMW(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__MASK                       0xf
#  define SPICA_ORX_RXA_TERM_CFG__TERM_RTRIM__OFFSET                     4
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD2__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD2__READ(die, channel)         SPICA_ORX_RXA_TERM_CFG__RSRVD2__GET(SPICA_ORX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD2__MASK                       0x1
#  define SPICA_ORX_RXA_TERM_CFG__RSRVD2__OFFSET                     3
#  define SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__READ(die, channel)         SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__GET(SPICA_ORX_RXA_TERM_CFG__READ(die, channel))
#  define SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__WRITE(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__RMW(die, channel, fdata) SPICA_ORX_RXA_TERM_CFG__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__MASK                       0x7
#  define SPICA_ORX_RXA_TERM_CFG__TERM_ATTN__OFFSET                     0

#define SPICA_ORX_RXA_PROBE_EN_CFG__ADDRESS                      0x1e650b
#define SPICA_ORX_RXA_PROBE_EN_CFG__DEFAULT                      0x0
#define SPICA_ORX_RXA_PROBE_EN_CFG__ICOUNT                        5
#define SPICA_ORX_RXA_PROBE_EN_CFG__ISPAN                         0x800
#define SPICA_ORX_RXA_PROBE_EN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_RXA_PROBE_EN_CFG__ADDRESS)
#define SPICA_ORX_RXA_PROBE_EN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_RXA_PROBE_EN_CFG__ADDRESS)
#define SPICA_ORX_RXA_PROBE_EN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_RXA_PROBE_EN_CFG__ADDRESS, (data))
#define SPICA_ORX_RXA_PROBE_EN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_RXA_PROBE_EN_CFG__ADDRESS, (data), (mask))
#  define SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__READ(die, channel)         SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__GET(SPICA_ORX_RXA_PROBE_EN_CFG__READ(die, channel))
#  define SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__WRITE(die, channel, fdata) SPICA_ORX_RXA_PROBE_EN_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__RMW(die, channel, fdata) SPICA_ORX_RXA_PROBE_EN_CFG__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__MASK                       0xffff
#  define SPICA_ORX_RXA_PROBE_EN_CFG__PROBE_EN__OFFSET                     0

#define SPICA_SMTX_FLL_FLL_CONTROL__ADDRESS                      0x1e8840
#define SPICA_SMTX_FLL_FLL_CONTROL__DEFAULT                      0x0
#define SPICA_SMTX_FLL_FLL_CONTROL__ICOUNT                        5
#define SPICA_SMTX_FLL_FLL_CONTROL__ISPAN                         0x800
#define SPICA_SMTX_FLL_FLL_CONTROL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_FLL_FLL_CONTROL__ADDRESS)
#define SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_FLL_FLL_CONTROL__ADDRESS)
#define SPICA_SMTX_FLL_FLL_CONTROL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_FLL_FLL_CONTROL__ADDRESS, (data))
#define SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_FLL_FLL_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__MASK                       0x3f
#  define SPICA_SMTX_FLL_FLL_CONTROL__RSRVD1__OFFSET                     10
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV_BB__OFFSET                     9
#  define SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__PD_MODE__OFFSET                     8
#  define SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__DEBUG_EN__OFFSET                     7
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__OFFSET                     6
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__OFFSET                     5
#  define SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__OFFSET                     4
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__OFFSET                     3
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__OFFSET                     2
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__POLARITY_INV__OFFSET                     1
#  define SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__READ(die, channel)         SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__GET(SPICA_SMTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__RMW(die, channel, fdata) SPICA_SMTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__MASK                       0x1
#  define SPICA_SMTX_FLL_FLL_CONTROL__ENABLE__OFFSET                     0

#define SPICA_SMTX_FLL_FCW_VALUE0__ADDRESS                      0x1e8855
#define SPICA_SMTX_FLL_FCW_VALUE0__DEFAULT                      0x0
#define SPICA_SMTX_FLL_FCW_VALUE0__ICOUNT                        5
#define SPICA_SMTX_FLL_FCW_VALUE0__ISPAN                         0x800
#define SPICA_SMTX_FLL_FCW_VALUE0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_FLL_FCW_VALUE0__ADDRESS)
#define SPICA_SMTX_FLL_FCW_VALUE0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_FLL_FCW_VALUE0__ADDRESS)
#define SPICA_SMTX_FLL_FCW_VALUE0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_FLL_FCW_VALUE0__ADDRESS, (data))
#define SPICA_SMTX_FLL_FCW_VALUE0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_FLL_FCW_VALUE0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__READ(die, channel)         SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__GET(SPICA_SMTX_FLL_FCW_VALUE0__READ(die, channel))
#  define SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FCW_VALUE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__RMW(die, channel, fdata) SPICA_SMTX_FLL_FCW_VALUE0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__MASK                       0xffff
#  define SPICA_SMTX_FLL_FCW_VALUE0__FCW_VALUE0__OFFSET                     0

#define SPICA_SMTX_FLL_FCW_VALUE1__ADDRESS                      0x1e8856
#define SPICA_SMTX_FLL_FCW_VALUE1__DEFAULT                      0x0
#define SPICA_SMTX_FLL_FCW_VALUE1__ICOUNT                        5
#define SPICA_SMTX_FLL_FCW_VALUE1__ISPAN                         0x800
#define SPICA_SMTX_FLL_FCW_VALUE1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_FLL_FCW_VALUE1__ADDRESS)
#define SPICA_SMTX_FLL_FCW_VALUE1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_FLL_FCW_VALUE1__ADDRESS)
#define SPICA_SMTX_FLL_FCW_VALUE1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_FLL_FCW_VALUE1__ADDRESS, (data))
#define SPICA_SMTX_FLL_FCW_VALUE1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_FLL_FCW_VALUE1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__READ(die, channel)         SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__GET(SPICA_SMTX_FLL_FCW_VALUE1__READ(die, channel))
#  define SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FCW_VALUE1__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_FLL_FCW_VALUE1__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__MASK                       0x7f
#  define SPICA_SMTX_FLL_FCW_VALUE1__RSRVD1__OFFSET                     9
#  define SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__READ(die, channel)         SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__GET(SPICA_SMTX_FLL_FCW_VALUE1__READ(die, channel))
#  define SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__WRITE(die, channel, fdata) SPICA_SMTX_FLL_FCW_VALUE1__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__RMW(die, channel, fdata) SPICA_SMTX_FLL_FCW_VALUE1__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__MASK                       0x1ff
#  define SPICA_SMTX_FLL_FCW_VALUE1__FCW_VALUE1__OFFSET                     0

#define SPICA_SMTX_FLL_PD_VALUE1__ADDRESS                      0x1e8857
#define SPICA_SMTX_FLL_PD_VALUE1__DEFAULT                      0x0
#define SPICA_SMTX_FLL_PD_VALUE1__ICOUNT                        5
#define SPICA_SMTX_FLL_PD_VALUE1__ISPAN                         0x800
#define SPICA_SMTX_FLL_PD_VALUE1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_FLL_PD_VALUE1__ADDRESS)
#define SPICA_SMTX_FLL_PD_VALUE1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_FLL_PD_VALUE1__ADDRESS)
#define SPICA_SMTX_FLL_PD_VALUE1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_FLL_PD_VALUE1__ADDRESS, (data))
#define SPICA_SMTX_FLL_PD_VALUE1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_FLL_PD_VALUE1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__READ(die, channel)         SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__GET(SPICA_SMTX_FLL_PD_VALUE1__READ(die, channel))
#  define SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE1__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE1__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__MASK                       0x7f
#  define SPICA_SMTX_FLL_PD_VALUE1__RSRVD1__OFFSET                     9
#  define SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__READ(die, channel)         SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__GET(SPICA_SMTX_FLL_PD_VALUE1__READ(die, channel))
#  define SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__WRITE(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE1__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__RMW(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE1__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__MASK                       0x1ff
#  define SPICA_SMTX_FLL_PD_VALUE1__PD_VALUE1__OFFSET                     0

#define SPICA_SMTX_FLL_PD_VALUE2__ADDRESS                      0x1e8858
#define SPICA_SMTX_FLL_PD_VALUE2__DEFAULT                      0x0
#define SPICA_SMTX_FLL_PD_VALUE2__ICOUNT                        5
#define SPICA_SMTX_FLL_PD_VALUE2__ISPAN                         0x800
#define SPICA_SMTX_FLL_PD_VALUE2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_FLL_PD_VALUE2__ADDRESS)
#define SPICA_SMTX_FLL_PD_VALUE2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_FLL_PD_VALUE2__ADDRESS)
#define SPICA_SMTX_FLL_PD_VALUE2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_FLL_PD_VALUE2__ADDRESS, (data))
#define SPICA_SMTX_FLL_PD_VALUE2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_FLL_PD_VALUE2__ADDRESS, (data), (mask))
#  define SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__READ(die, channel)         SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__GET(SPICA_SMTX_FLL_PD_VALUE2__READ(die, channel))
#  define SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE2__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE2__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__MASK                       0x7f
#  define SPICA_SMTX_FLL_PD_VALUE2__RSRVD1__OFFSET                     9
#  define SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__READ(die, channel)         SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__GET(SPICA_SMTX_FLL_PD_VALUE2__READ(die, channel))
#  define SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__WRITE(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE2__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__RMW(die, channel, fdata) SPICA_SMTX_FLL_PD_VALUE2__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__MASK                       0x1ff
#  define SPICA_SMTX_FLL_PD_VALUE2__PD_VALUE2__OFFSET                     0

#define SPICA_SMTX_FLL_INTERRUPTS__ADDRESS                      0x1e885b
#define SPICA_SMTX_FLL_INTERRUPTS__DEFAULT                      0x0
#define SPICA_SMTX_FLL_INTERRUPTS__ICOUNT                        5
#define SPICA_SMTX_FLL_INTERRUPTS__ISPAN                         0x800
#define SPICA_SMTX_FLL_INTERRUPTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_FLL_INTERRUPTS__ADDRESS)
#define SPICA_SMTX_FLL_INTERRUPTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_FLL_INTERRUPTS__ADDRESS)
#define SPICA_SMTX_FLL_INTERRUPTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_FLL_INTERRUPTS__ADDRESS, (data))
#define SPICA_SMTX_FLL_INTERRUPTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_FLL_INTERRUPTS__ADDRESS, (data), (mask))
#  define SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__READ(die, channel)         SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__GET(SPICA_SMTX_FLL_INTERRUPTS__READ(die, channel))
#  define SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_FLL_INTERRUPTS__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_FLL_INTERRUPTS__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__MASK                       0x7fff
#  define SPICA_SMTX_FLL_INTERRUPTS__RSRVD1__OFFSET                     1
#  define SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__READ(die, channel)         SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__GET(SPICA_SMTX_FLL_INTERRUPTS__READ(die, channel))
#  define SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__WRITE(die, channel, fdata) SPICA_SMTX_FLL_INTERRUPTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__RMW(die, channel, fdata) SPICA_SMTX_FLL_INTERRUPTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__MASK                       0x1
#  define SPICA_SMTX_FLL_INTERRUPTS__FLL_UNLOCK_INTS__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_CLKEN__ADDRESS                      0x1e8900
#define SPICA_SMTX_PSR_TXD_CLKEN__DEFAULT                      0x0
#define SPICA_SMTX_PSR_TXD_CLKEN__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_CLKEN__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_CLKEN__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_CLKEN__ADDRESS)
#define SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_CLKEN__ADDRESS)
#define SPICA_SMTX_PSR_TXD_CLKEN__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_CLKEN__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_CLKEN__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__MASK                       0x7
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD1__OFFSET                     13
#  define SPICA_SMTX_PSR_TXD_CLKEN__AUX__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SMTX_PSR_TXD_CLKEN__AUX__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__AUX__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__AUX__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__AUX__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_CLKEN__AUX__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_CLKEN__AUX__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__AUX__OFFSET                     12
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD2__OFFSET                     10
#  define SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__FIFO_WR__OFFSET                     9
#  define SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__PRECODER__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_CLKEN__DSP__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_PSR_TXD_CLKEN__DSP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__DSP__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__DSP__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__DSP__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_CLKEN__DSP__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_CLKEN__DSP__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__DSP__OFFSET                     7
#  define SPICA_SMTX_PSR_TXD_CLKEN__INJ__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SMTX_PSR_TXD_CLKEN__INJ__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__INJ__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__INJ__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__INJ__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PSR_TXD_CLKEN__INJ__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PSR_TXD_CLKEN__INJ__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__INJ__OFFSET                     6
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD3__OFFSET                     4
#  define SPICA_SMTX_PSR_TXD_CLKEN__GEN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_PSR_TXD_CLKEN__GEN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__GEN__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__GEN__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__GEN__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_CLKEN__GEN__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_CLKEN__GEN__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__GEN__OFFSET                     3
#  define SPICA_SMTX_PSR_TXD_CLKEN__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SMTX_PSR_TXD_CLKEN__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__CID__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__CID__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__CID__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PSR_TXD_CLKEN__CID__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PSR_TXD_CLKEN__CID__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__CID__OFFSET                     2
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__RSRVD4__OFFSET                     1
#  define SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__READ(die, channel)         SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__GET(SPICA_SMTX_PSR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_CLKEN__IP_MISSION__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_RESET__ADDRESS                      0x1e8901
#define SPICA_SMTX_PSR_TXD_RESET__DEFAULT                      0x11cd
#define SPICA_SMTX_PSR_TXD_RESET__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_RESET__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_RESET__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_RESET__ADDRESS)
#define SPICA_SMTX_PSR_TXD_RESET__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_RESET__ADDRESS)
#define SPICA_SMTX_PSR_TXD_RESET__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_RESET__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_RESET__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_RESET__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__SOFT_RESET__OFFSET                     15
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x9fff) | (((uint32_t)(fdata) << 13) & 0x6000))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x3)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__RSRVD1__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<13, 0x6000)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD1__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD1__OFFSET                     13
#  define SPICA_SMTX_PSR_TXD_RESET__AUX__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SMTX_PSR_TXD_RESET__AUX__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__AUX__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__AUX__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__AUX__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_RESET__AUX__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_RESET__AUX__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__AUX__OFFSET                     12
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD2__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD2__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__RSRVD2__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD2__MASK                       0x7
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD2__OFFSET                     9
#  define SPICA_SMTX_PSR_TXD_RESET__PRECODER__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PSR_TXD_RESET__PRECODER__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__PRECODER__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__PRECODER__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__PRECODER__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_RESET__PRECODER__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_RESET__PRECODER__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__PRECODER__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_RESET__DSP__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_PSR_TXD_RESET__DSP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__DSP__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__DSP__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__DSP__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_RESET__DSP__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_RESET__DSP__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__DSP__OFFSET                     7
#  define SPICA_SMTX_PSR_TXD_RESET__INJ__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SMTX_PSR_TXD_RESET__INJ__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__INJ__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__INJ__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__INJ__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PSR_TXD_RESET__INJ__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PSR_TXD_RESET__INJ__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__INJ__OFFSET                     6
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD3__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD3__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__RSRVD3__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD3__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD3__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD3__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD3__OFFSET                     4
#  define SPICA_SMTX_PSR_TXD_RESET__GEN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_PSR_TXD_RESET__GEN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__GEN__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__GEN__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__GEN__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_RESET__GEN__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_RESET__GEN__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__GEN__OFFSET                     3
#  define SPICA_SMTX_PSR_TXD_RESET__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SMTX_PSR_TXD_RESET__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__CID__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__CID__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__CID__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PSR_TXD_RESET__CID__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PSR_TXD_RESET__CID__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__CID__OFFSET                     2
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD4__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD4__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__RSRVD4__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD4__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD4__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD4__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__RSRVD4__OFFSET                     1
#  define SPICA_SMTX_PSR_TXD_RESET__FIFO__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PSR_TXD_RESET__FIFO__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__FIFO__READ(die, channel)         SPICA_SMTX_PSR_TXD_RESET__FIFO__GET(SPICA_SMTX_PSR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_RESET__FIFO__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__FIFO__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_RESET__FIFO__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_RESET__FIFO__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_MISC_CFG__ADDRESS                      0x1e8902
#define SPICA_SMTX_PSR_TXD_MISC_CFG__DEFAULT                      0xb401
#define SPICA_SMTX_PSR_TXD_MISC_CFG__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_MISC_CFG__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_MISC_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_MISC_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_MISC_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_MISC_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_MISC_CFG__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_MISC_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B11__OFFSET                     14
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B10__OFFSET                     12
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B01__OFFSET                     10
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__GRAY_MAP_B00__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD1__OFFSET                     6
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__AUX_CLK_DRATIO__OFFSET                     4
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__PRECODE_EN__OFFSET                     3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff9) | (((uint32_t)(fdata) << 1) & 0x6))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__GET(rdata)                (((rdata) >> 1) & 0x3)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__RSRVD2__OFFSET                     1
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__READ(die, channel)         SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__GET(SPICA_SMTX_PSR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_MISC_CFG__BROADCAST_MASK__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_CFG__ADDRESS                      0x1e8913
#define SPICA_SMTX_PSR_TXD_GEN_CFG__DEFAULT                      0x0
#define SPICA_SMTX_PSR_TXD_GEN_CFG__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_CFG__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_CFG__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN__OFFSET                     15
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__GEN_EN_ODD__OFFSET                     14
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__RSRVD1__OFFSET                     13
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__NRZ_MODE__OFFSET                     12
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__DUAL_PRBS__OFFSET                     11
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__MASK                       0x7
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PATTERN_MODE__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__GET(SPICA_SMTX_PSR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__MASK                       0xf
#  define SPICA_SMTX_PSR_TXD_GEN_CFG__PRBS_MODE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS                      0x1e8914
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS                      0x1e8915
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS                      0x1e8916
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS                      0x1e8917
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS                      0x1e8918
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS                      0x1e8919
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS                      0x1e891a
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS                      0x1e891b
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__DEFAULT                      0x3333
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__GET(SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__MASK                       0xffff
#  define SPICA_SMTX_PSR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS                      0x1e891c
#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__DEFAULT                      0x1
#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__MASK                       0xff
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__READ(die, channel)         SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__MASK                       0xff
#  define SPICA_SMTX_PSR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ADDRESS                      0x1e891e
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__DEFAULT                      0x0
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ADDRESS)
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ADDRESS)
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__READ(die, channel)         SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__GET(SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__ENABLE__OFFSET                     15
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8007) | (((uint32_t)(fdata) << 3) & 0x7ff8))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0xfff)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__GET(SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__MASK                       0xfff
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RSRVD1__OFFSET                     3
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__READ(die, channel)         SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__GET(SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__MASK                       0x7
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG0__PATTERN__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__ADDRESS                      0x1e891f
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DEFAULT                      0x1
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__ADDRESS)
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__ADDRESS)
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__GET(SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD1__OFFSET                     15
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__READ(die, channel)         SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__GET(SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__MASK                       0x7f
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__GAP__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__READ(die, channel)         SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__GET(SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RSRVD2__OFFSET                     7
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__READ(die, channel)         SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__GET(SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__MASK                       0x7f
#  define SPICA_SMTX_PSR_TXD_ERRINJ_CFG1__DURATION__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__ADDRESS                      0x1e8920
#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__DEFAULT                      0x1
#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__GET(SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__MASK                       0x7fff
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RSRVD1__OFFSET                     1
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__READ(die, channel)         SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_DSP_CFG__ADDRESS                      0x1e8922
#define SPICA_SMTX_PSR_TXD_DSP_CFG__DEFAULT                      0x0
#define SPICA_SMTX_PSR_TXD_DSP_CFG__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_DSP_CFG__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_DSP_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_DSP_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_DSP_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_DSP_CFG__ADDRESS)
#define SPICA_SMTX_PSR_TXD_DSP_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_DSP_CFG__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_DSP_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__GET(SPICA_SMTX_PSR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__MASK                       0x7f
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD1__OFFSET                     9
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__GET(SPICA_SMTX_PSR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__TEST_EN__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__GET(SPICA_SMTX_PSR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__MASK                       0x7
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD2__OFFSET                     5
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(SPICA_SMTX_PSR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__IS_LUT_UNSIGNED__OFFSET                     4
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__GET(SPICA_SMTX_PSR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__RSRVD3__OFFSET                     2
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__GET(SPICA_SMTX_PSR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__MASK                       0x3
#  define SPICA_SMTX_PSR_TXD_DSP_CFG__MODE__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDRESS                      0x1e8924
#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__DEFAULT                      0x0
#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__GET(SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RBW__OFFSET                     15
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__GET(SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__MASK                       0x7f
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RSRVD1__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__GET(SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__MASK                       0xff
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_ACCESS__ADDR__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__ADDRESS                      0x1e8925
#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DEFAULT                      0x0
#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__ADDRESS)
#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__ADDRESS)
#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__GET(SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__MASK                       0x1ff
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RSRVD1__OFFSET                     7
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__READ(die, channel)         SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__GET(SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__MASK                       0x7f
#  define SPICA_SMTX_PSR_TXD_DSP_LUT_WRITE__DATA__OFFSET                     0

#define SPICA_SMTX_PSR_TXD_INTS__ADDRESS                      0x1e893b
#define SPICA_SMTX_PSR_TXD_INTS__DEFAULT                      0x0
#define SPICA_SMTX_PSR_TXD_INTS__ICOUNT                        15
#define SPICA_SMTX_PSR_TXD_INTS__ISPAN                         0x100
#define SPICA_SMTX_PSR_TXD_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PSR_TXD_INTS__ADDRESS)
#define SPICA_SMTX_PSR_TXD_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PSR_TXD_INTS__ADDRESS)
#define SPICA_SMTX_PSR_TXD_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PSR_TXD_INTS__ADDRESS, (data))
#define SPICA_SMTX_PSR_TXD_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PSR_TXD_INTS__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD1__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__RSRVD1__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD1__MASK                       0x7
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD1__OFFSET                     13
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_UNDERFLOWS__OFFSET                     12
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD2__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__RSRVD2__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD2__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD2__OFFSET                     11
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_NEAR_OVERFLOWS__OFFSET                     10
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD3__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD3__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__RSRVD3__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD3__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD3__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD3__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD3__OFFSET                     9
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_UNDERFLOWS__OFFSET                     8
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD4__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD4__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__RSRVD4__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD4__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD4__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD4__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD4__OFFSET                     7
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_OVERFLOWS__OFFSET                     6
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD5__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD5__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD5__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__RSRVD5__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD5__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD5__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD5__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD5__OFFSET                     5
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_ADVANCE_EVENTS__OFFSET                     4
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD6__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD6__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD6__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__RSRVD6__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD6__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD6__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD6__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__RSRVD6__OFFSET                     3
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__FIFO0_PAUSE_EVENTS__OFFSET                     2
#  define SPICA_SMTX_PSR_TXD_INTS__ERRINJS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SMTX_PSR_TXD_INTS__ERRINJS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__ERRINJS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__ERRINJS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__ERRINJS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PSR_TXD_INTS__ERRINJS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PSR_TXD_INTS__ERRINJS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__ERRINJS__OFFSET                     1
#  define SPICA_SMTX_PSR_TXD_INTS__CIDS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PSR_TXD_INTS__CIDS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__CIDS__READ(die, channel)         SPICA_SMTX_PSR_TXD_INTS__CIDS__GET(SPICA_SMTX_PSR_TXD_INTS__READ(die, channel))
#  define SPICA_SMTX_PSR_TXD_INTS__CIDS__WRITE(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__CIDS__RMW(die, channel, fdata) SPICA_SMTX_PSR_TXD_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PSR_TXD_INTS__CIDS__MASK                       0x1
#  define SPICA_SMTX_PSR_TXD_INTS__CIDS__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_CLKEN__ADDRESS                      0x1e8c00
#define SPICA_SMTX_PMR_TXD_CLKEN__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_CLKEN__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_CLKEN__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_CLKEN__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_CLKEN__ADDRESS)
#define SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_CLKEN__ADDRESS)
#define SPICA_SMTX_PMR_TXD_CLKEN__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_CLKEN__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_CLKEN__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD1__OFFSET                     15
#  define SPICA_SMTX_PMR_TXD_CLKEN__FLL__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SMTX_PMR_TXD_CLKEN__FLL__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__FLL__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__FLL__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__FLL__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__FLL__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__FLL__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__FLL__OFFSET                     14
#  define SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__LTX2EGR__OFFSET                     13
#  define SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__PRECODER__OFFSET                     12
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD2__OFFSET                     11
#  define SPICA_SMTX_PMR_TXD_CLKEN__PGEN__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SMTX_PMR_TXD_CLKEN__PGEN__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__PGEN__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__PGEN__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__PGEN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SMTX_PMR_TXD_CLKEN__PGEN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SMTX_PMR_TXD_CLKEN__PGEN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__PGEN__OFFSET                     10
#  define SPICA_SMTX_PMR_TXD_CLKEN__DSP__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SMTX_PMR_TXD_CLKEN__DSP__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__DSP__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__DSP__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__DSP__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PMR_TXD_CLKEN__DSP__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PMR_TXD_CLKEN__DSP__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__DSP__OFFSET                     9
#  define SPICA_SMTX_PMR_TXD_CLKEN__INJ__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PMR_TXD_CLKEN__INJ__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__INJ__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__INJ__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__INJ__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_CLKEN__INJ__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_CLKEN__INJ__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__INJ__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_CLKEN__FEC__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_PMR_TXD_CLKEN__FEC__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__FEC__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__FEC__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__FEC__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PMR_TXD_CLKEN__FEC__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PMR_TXD_CLKEN__FEC__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__FEC__OFFSET                     7
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD3__OFFSET                     6
#  define SPICA_SMTX_PMR_TXD_CLKEN__GEN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SMTX_PMR_TXD_CLKEN__GEN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__GEN__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__GEN__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__GEN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PMR_TXD_CLKEN__GEN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PMR_TXD_CLKEN__GEN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__GEN__OFFSET                     5
#  define SPICA_SMTX_PMR_TXD_CLKEN__CID__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_PMR_TXD_CLKEN__CID__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_PMR_TXD_CLKEN__CID__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__CID__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__CID__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_CLKEN__CID__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_CLKEN__CID__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_CLKEN__CID__OFFSET                     4
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__READ(die, channel)         SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__GET(SPICA_SMTX_PMR_TXD_CLKEN__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__MASK                       0xf
#  define SPICA_SMTX_PMR_TXD_CLKEN__RSRVD4__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_RESET__ADDRESS                      0x1e8c01
#define SPICA_SMTX_PMR_TXD_RESET__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_RESET__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_RESET__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_RESET__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_RESET__ADDRESS)
#define SPICA_SMTX_PMR_TXD_RESET__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_RESET__ADDRESS)
#define SPICA_SMTX_PMR_TXD_RESET__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_RESET__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_RESET__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_RESET__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__SOFT_RESET__OFFSET                     15
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__RSRVD1__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD1__MASK                       0x1f
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD1__OFFSET                     10
#  define SPICA_SMTX_PMR_TXD_RESET__PRECODER__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SMTX_PMR_TXD_RESET__PRECODER__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__PRECODER__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__PRECODER__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__PRECODER__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PMR_TXD_RESET__PRECODER__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PMR_TXD_RESET__PRECODER__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__PRECODER__OFFSET                     9
#  define SPICA_SMTX_PMR_TXD_RESET__PGEN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PMR_TXD_RESET__PGEN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__PGEN__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__PGEN__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__PGEN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_RESET__PGEN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_RESET__PGEN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__PGEN__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_RESET__DSP__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_PMR_TXD_RESET__DSP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__DSP__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__DSP__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__DSP__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PMR_TXD_RESET__DSP__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PMR_TXD_RESET__DSP__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__DSP__OFFSET                     7
#  define SPICA_SMTX_PMR_TXD_RESET__INJ__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SMTX_PMR_TXD_RESET__INJ__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__INJ__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__INJ__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__INJ__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PMR_TXD_RESET__INJ__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PMR_TXD_RESET__INJ__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__INJ__OFFSET                     6
#  define SPICA_SMTX_PMR_TXD_RESET__FEC__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SMTX_PMR_TXD_RESET__FEC__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__FEC__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__FEC__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__FEC__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PMR_TXD_RESET__FEC__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PMR_TXD_RESET__FEC__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__FEC__OFFSET                     5
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD2__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__RSRVD2__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD2__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD2__OFFSET                     4
#  define SPICA_SMTX_PMR_TXD_RESET__GEN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_PMR_TXD_RESET__GEN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__GEN__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__GEN__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__GEN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PMR_TXD_RESET__GEN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PMR_TXD_RESET__GEN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__GEN__OFFSET                     3
#  define SPICA_SMTX_PMR_TXD_RESET__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SMTX_PMR_TXD_RESET__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__CID__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__CID__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__CID__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PMR_TXD_RESET__CID__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SMTX_PMR_TXD_RESET__CID__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__CID__OFFSET                     2
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD3__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD3__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__RSRVD3__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD3__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD3__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD3__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__RSRVD3__OFFSET                     1
#  define SPICA_SMTX_PMR_TXD_RESET__FIFO__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PMR_TXD_RESET__FIFO__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__FIFO__READ(die, channel)         SPICA_SMTX_PMR_TXD_RESET__FIFO__GET(SPICA_SMTX_PMR_TXD_RESET__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_RESET__FIFO__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__FIFO__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_RESET__FIFO__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_RESET__FIFO__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_MISC_CFG__ADDRESS                      0x1e8c02
#define SPICA_SMTX_PMR_TXD_MISC_CFG__DEFAULT                      0xb400
#define SPICA_SMTX_PMR_TXD_MISC_CFG__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_MISC_CFG__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_MISC_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_MISC_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_MISC_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_MISC_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_MISC_CFG__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_MISC_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B11__OFFSET                     14
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B10__OFFSET                     12
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B01__OFFSET                     10
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__GRAY_MAP_B00__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__MASK                       0xf
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD1__OFFSET                     4
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__PRECODE_EN__OFFSET                     3
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff9) | (((uint32_t)(fdata) << 1) & 0x6))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__GET(rdata)                (((rdata) >> 1) & 0x3)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__RSRVD2__OFFSET                     1
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__GET(SPICA_SMTX_PMR_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_CFG__BMPM_EN__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_CFG__ADDRESS                      0x1e8c1c
#define SPICA_SMTX_PMR_TXD_GEN_CFG__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_GEN_CFG__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_CFG__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_CFG__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN__OFFSET                     15
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__GEN_EN_ODD__OFFSET                     14
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__RSRVD1__OFFSET                     13
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__NRZ_MODE__OFFSET                     12
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__DUAL_PRBS__OFFSET                     11
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__MASK                       0x7
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PATTERN_MODE__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__GET(SPICA_SMTX_PMR_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__MASK                       0xf
#  define SPICA_SMTX_PMR_TXD_GEN_CFG__PRBS_MODE__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS                      0x1e8c1d
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS                      0x1e8c1e
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS                      0x1e8c1f
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS                      0x1e8c20
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS                      0x1e8c21
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS                      0x1e8c22
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS                      0x1e8c23
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS                      0x1e8c24
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__DEFAULT                      0x3333
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__GET(SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__MASK                       0xffff
#  define SPICA_SMTX_PMR_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS                      0x1e8c25
#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__DEFAULT                      0x1
#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__MASK                       0xff
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__READ(die, channel)         SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__MASK                       0xff
#  define SPICA_SMTX_PMR_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ADDRESS                      0x1e8c28
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ADDRESS)
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ADDRESS)
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__READ(die, channel)         SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__GET(SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__ENABLE__OFFSET                     15
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8007) | (((uint32_t)(fdata) << 3) & 0x7ff8))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0xfff)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__GET(SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__MASK                       0xfff
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RSRVD1__OFFSET                     3
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__READ(die, channel)         SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__GET(SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__MASK                       0x7
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG0__PATTERN__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__ADDRESS                      0x1e8c29
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DEFAULT                      0x1
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__ADDRESS)
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__ADDRESS)
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__READ(die, channel)         SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__GET(SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__MASK                       0xff
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__GAP__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__READ(die, channel)         SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__GET(SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__MASK                       0xff
#  define SPICA_SMTX_PMR_TXD_ERRINJ_CFG1__DURATION__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__ADDRESS                      0x1e8c2a
#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__DEFAULT                      0x1
#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__GET(SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__MASK                       0x7fff
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RSRVD1__OFFSET                     1
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__READ(die, channel)         SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_SQUELCH_EN_CFG__SQUELCH_EN__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_DSP_CFG__ADDRESS                      0x1e8c34
#define SPICA_SMTX_PMR_TXD_DSP_CFG__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_DSP_CFG__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_DSP_CFG__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_DSP_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_DSP_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_DSP_CFG__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_DSP_CFG__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_DSP_CFG__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__GET(SPICA_SMTX_PMR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__MASK                       0x7f
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD1__OFFSET                     9
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__GET(SPICA_SMTX_PMR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__TEST_EN__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__GET(SPICA_SMTX_PMR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__MASK                       0x7
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD2__OFFSET                     5
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(SPICA_SMTX_PMR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__IS_LUT_UNSIGNED__OFFSET                     4
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__GET(SPICA_SMTX_PMR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__RSRVD3__OFFSET                     2
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__GET(SPICA_SMTX_PMR_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_DSP_CFG__MODE__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDRESS                      0x1e8c36
#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__GET(SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RBW__OFFSET                     15
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__GET(SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__MASK                       0x1f
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__ADDR__OFFSET                     10
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__SET(rdata, fdata)         (((rdata) & 0xfc00) | (((uint32_t)(fdata) << 0) & 0x3ff))
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__GET(rdata)                (((rdata) >> 0) & 0x3ff)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__GET(SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<0, 0x3ff)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<0, 0x3ff)
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__MASK                       0x3ff
#  define SPICA_SMTX_PMR_TXD_DSP_COEFF_ACCESS__WRITE_DATA__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDRESS                      0x1e8c38
#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__GET(SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RBW__OFFSET                     15
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__GET(SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__MASK                       0x7f
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RSRVD1__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__GET(SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__MASK                       0xff
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_ACCESS__ADDR__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__ADDRESS                      0x1e8c39
#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__GET(SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__MASK                       0x1ff
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RSRVD1__OFFSET                     7
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__GET(SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__MASK                       0x7f
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_WRITE__DATA__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__ADDRESS                      0x1e8c3a
#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_DSP_LUT_READ__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_READ__ADDRESS)
#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_READ__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_DSP_LUT_READ__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__GET(SPICA_SMTX_PMR_TXD_DSP_LUT_READ__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__MASK                       0x1ff
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RSRVD1__OFFSET                     7
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__READ(die, channel)         SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__GET(SPICA_SMTX_PMR_TXD_DSP_LUT_READ__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__MASK                       0x7f
#  define SPICA_SMTX_PMR_TXD_DSP_LUT_READ__DATA__OFFSET                     0

#define SPICA_SMTX_PMR_TXD_MISC_INTS__ADDRESS                      0x1e8c49
#define SPICA_SMTX_PMR_TXD_MISC_INTS__DEFAULT                      0x0
#define SPICA_SMTX_PMR_TXD_MISC_INTS__ICOUNT                        5
#define SPICA_SMTX_PMR_TXD_MISC_INTS__ISPAN                         0x800
#define SPICA_SMTX_PMR_TXD_MISC_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PMR_TXD_MISC_INTS__ADDRESS)
#define SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PMR_TXD_MISC_INTS__ADDRESS)
#define SPICA_SMTX_PMR_TXD_MISC_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PMR_TXD_MISC_INTS__ADDRESS, (data))
#define SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PMR_TXD_MISC_INTS__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__MASK                       0xf
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD1__OFFSET                     12
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__OFFSET                     11
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__OFFSET                     10
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__OFFSET                     9
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__OFFSET                     8
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__OFFSET                     7
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__OFFSET                     6
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__OFFSET                     5
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__OFFSET                     4
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__MASK                       0x3
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__RSRVD2__OFFSET                     2
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__ERRINJS__OFFSET                     1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__READ(die, channel)         SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__GET(SPICA_SMTX_PMR_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__WRITE(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__RMW(die, channel, fdata) SPICA_SMTX_PMR_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__MASK                       0x1
#  define SPICA_SMTX_PMR_TXD_MISC_INTS__CIDS__OFFSET                     0

#define SPICA_OTX_TX_TOP_CFG__ADDRESS                      0x1eb001
#define SPICA_OTX_TX_TOP_CFG__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_CFG__ICOUNT                        5
#define SPICA_OTX_TX_TOP_CFG__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_CFG__ADDRESS)
#define SPICA_OTX_TX_TOP_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_CFG__ADDRESS)
#define SPICA_OTX_TX_TOP_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_CFG__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SPICA_OTX_TX_TOP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SPICA_OTX_TX_TOP_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TX_TOP_CFG__RSRVD1__GET(SPICA_OTX_TX_TOP_CFG__READ(die, channel))
#  define SPICA_OTX_TX_TOP_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SPICA_OTX_TX_TOP_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_CFG__RMW(die, (channel), (fdata)<<3, 0xfff8)
#  define SPICA_OTX_TX_TOP_CFG__RSRVD1__MASK                       0x1fff
#  define SPICA_OTX_TX_TOP_CFG__RSRVD1__OFFSET                     3
#  define SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__READ(die, channel)         SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__GET(SPICA_OTX_TX_TOP_CFG__READ(die, channel))
#  define SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__MASK                       0x1
#  define SPICA_OTX_TX_TOP_CFG__DAC0_ENABLE__OFFSET                     2
#  define SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__READ(die, channel)         SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__GET(SPICA_OTX_TX_TOP_CFG__READ(die, channel))
#  define SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__MASK                       0x3
#  define SPICA_OTX_TX_TOP_CFG__EML_OR_DAC__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONEN__ADDRESS                      0x1eb00f
#define SPICA_OTX_TX_TOP_MONEN__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONEN__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONEN__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONEN__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONEN__ADDRESS)
#define SPICA_OTX_TX_TOP_MONEN__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONEN__ADDRESS)
#define SPICA_OTX_TX_TOP_MONEN__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONEN__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONEN__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONEN__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONEN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SPICA_OTX_TX_TOP_MONEN__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SPICA_OTX_TX_TOP_MONEN__RSRVD1__READ(die, channel)         SPICA_OTX_TX_TOP_MONEN__RSRVD1__GET(SPICA_OTX_TX_TOP_MONEN__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONEN__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONEN__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SPICA_OTX_TX_TOP_MONEN__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONEN__RMW(die, (channel), (fdata)<<2, 0xfffc)
#  define SPICA_OTX_TX_TOP_MONEN__RSRVD1__MASK                       0x3fff
#  define SPICA_OTX_TX_TOP_MONEN__RSRVD1__OFFSET                     2
#  define SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__READ(die, channel)         SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__GET(SPICA_OTX_TX_TOP_MONEN__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONEN__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__MASK                       0x1
#  define SPICA_OTX_TX_TOP_MONEN__EML_SIPHO__OFFSET                     1
#  define SPICA_OTX_TX_TOP_MONEN__DAC0__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TX_TOP_MONEN__DAC0__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TX_TOP_MONEN__DAC0__READ(die, channel)         SPICA_OTX_TX_TOP_MONEN__DAC0__GET(SPICA_OTX_TX_TOP_MONEN__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONEN__DAC0__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TX_TOP_MONEN__DAC0__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONEN__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TX_TOP_MONEN__DAC0__MASK                       0x1
#  define SPICA_OTX_TX_TOP_MONEN__DAC0__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT0__ADDRESS                      0x1eb010
#define SPICA_OTX_TX_TOP_MONPAT0__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT0__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT0__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT0__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT0__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT0__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT0__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT0__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT0__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT0__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT0__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT0__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT0__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT0__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT0__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT0__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT1__ADDRESS                      0x1eb011
#define SPICA_OTX_TX_TOP_MONPAT1__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT1__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT1__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT1__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT1__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT1__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT1__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT1__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT1__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT1__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT1__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT1__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT1__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT1__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT1__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT1__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT2__ADDRESS                      0x1eb012
#define SPICA_OTX_TX_TOP_MONPAT2__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT2__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT2__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT2__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT2__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT2__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT2__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT2__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT2__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT2__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT2__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT2__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT2__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT2__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT2__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT2__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT3__ADDRESS                      0x1eb013
#define SPICA_OTX_TX_TOP_MONPAT3__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT3__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT3__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT3__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT3__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT3__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT3__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT3__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT3__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT3__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT3__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT3__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT3__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT3__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT3__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT3__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT4__ADDRESS                      0x1eb014
#define SPICA_OTX_TX_TOP_MONPAT4__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT4__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT4__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT4__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT4__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT4__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT4__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT4__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT4__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT4__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT4__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT4__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT4__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT4__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT4__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT4__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT4__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT4__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT4__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT4__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT5__ADDRESS                      0x1eb015
#define SPICA_OTX_TX_TOP_MONPAT5__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT5__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT5__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT5__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT5__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT5__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT5__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT5__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT5__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT5__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT5__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT5__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT5__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT5__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT5__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT5__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT6__ADDRESS                      0x1eb016
#define SPICA_OTX_TX_TOP_MONPAT6__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT6__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT6__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT6__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT6__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT6__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT6__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT6__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT6__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT6__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT6__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT6__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT6__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT6__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT6__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT6__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT7__ADDRESS                      0x1eb017
#define SPICA_OTX_TX_TOP_MONPAT7__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT7__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT7__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT7__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT7__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT7__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT7__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT7__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT7__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT7__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT7__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT7__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT7__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT7__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT7__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT7__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT7__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT7__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT7__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT7__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT8__ADDRESS                      0x1eb018
#define SPICA_OTX_TX_TOP_MONPAT8__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT8__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT8__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT8__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT8__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT8__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT8__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT8__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT8__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT8__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT8__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT8__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT8__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT8__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT8__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT8__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT8__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT8__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT8__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT8__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT9__ADDRESS                      0x1eb019
#define SPICA_OTX_TX_TOP_MONPAT9__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT9__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT9__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT9__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT9__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT9__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT9__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT9__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT9__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT9__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT9__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT9__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT9__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT9__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT9__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT9__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT9__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT9__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT9__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT9__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT10__ADDRESS                      0x1eb01a
#define SPICA_OTX_TX_TOP_MONPAT10__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT10__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT10__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT10__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT10__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT10__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT10__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT10__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT10__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT10__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT10__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT10__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT10__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT10__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT10__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT10__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT10__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT10__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT10__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT10__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT10__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT10__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT11__ADDRESS                      0x1eb01b
#define SPICA_OTX_TX_TOP_MONPAT11__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT11__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT11__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT11__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT11__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT11__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT11__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT11__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT11__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT11__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT11__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT11__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT11__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT11__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT11__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT11__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT11__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT11__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT11__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT11__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT11__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT11__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT12__ADDRESS                      0x1eb01c
#define SPICA_OTX_TX_TOP_MONPAT12__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT12__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT12__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT12__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT12__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT12__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT12__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT12__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT12__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT12__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT12__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT12__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT12__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT12__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT12__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT12__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT12__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT12__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT12__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT12__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT12__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT12__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT13__ADDRESS                      0x1eb01d
#define SPICA_OTX_TX_TOP_MONPAT13__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT13__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT13__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT13__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT13__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT13__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT13__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT13__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT13__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT13__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT13__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT13__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT13__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT13__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT13__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT13__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT13__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT13__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT13__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT13__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT13__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT13__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT14__ADDRESS                      0x1eb01e
#define SPICA_OTX_TX_TOP_MONPAT14__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT14__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT14__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT14__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT14__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT14__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT14__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT14__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT14__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT14__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT14__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT14__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT14__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT14__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT14__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT14__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT14__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT14__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT14__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT14__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT14__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT14__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT15__ADDRESS                      0x1eb01f
#define SPICA_OTX_TX_TOP_MONPAT15__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT15__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT15__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT15__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT15__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT15__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT15__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT15__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT15__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT15__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT15__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT15__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT15__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT15__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT15__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT15__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT15__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT15__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT15__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT15__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT15__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT15__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT16__ADDRESS                      0x1eb020
#define SPICA_OTX_TX_TOP_MONPAT16__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT16__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT16__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT16__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT16__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT16__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT16__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT16__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT16__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT16__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT16__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT16__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT16__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT16__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT16__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT16__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT16__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT16__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT16__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT16__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT16__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT16__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT17__ADDRESS                      0x1eb021
#define SPICA_OTX_TX_TOP_MONPAT17__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT17__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT17__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT17__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT17__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT17__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT17__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT17__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT17__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT17__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT17__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT17__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT17__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT17__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT17__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT17__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT17__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT17__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT17__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT17__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT17__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT17__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT18__ADDRESS                      0x1eb022
#define SPICA_OTX_TX_TOP_MONPAT18__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT18__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT18__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT18__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT18__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT18__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT18__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT18__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT18__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT18__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT18__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT18__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT18__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT18__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT18__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT18__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT18__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT18__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT18__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT18__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT18__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT18__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT19__ADDRESS                      0x1eb023
#define SPICA_OTX_TX_TOP_MONPAT19__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT19__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT19__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT19__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT19__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT19__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT19__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT19__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT19__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT19__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT19__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT19__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT19__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT19__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT19__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT19__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT19__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT19__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT19__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT19__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT19__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT19__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT20__ADDRESS                      0x1eb024
#define SPICA_OTX_TX_TOP_MONPAT20__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT20__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT20__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT20__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT20__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT20__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT20__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT20__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT20__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT20__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT20__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT20__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT20__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT20__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT20__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT20__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT20__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT20__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT20__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT20__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT20__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT20__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT21__ADDRESS                      0x1eb025
#define SPICA_OTX_TX_TOP_MONPAT21__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT21__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT21__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT21__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT21__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT21__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT21__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT21__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT21__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT21__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT21__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT21__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT21__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT21__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT21__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT21__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT21__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT21__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT21__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT21__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT21__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT21__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT22__ADDRESS                      0x1eb026
#define SPICA_OTX_TX_TOP_MONPAT22__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT22__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT22__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT22__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT22__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT22__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT22__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT22__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT22__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT22__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT22__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT22__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT22__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT22__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT22__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT22__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT22__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT22__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT22__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT22__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT22__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT22__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT23__ADDRESS                      0x1eb027
#define SPICA_OTX_TX_TOP_MONPAT23__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT23__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT23__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT23__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT23__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT23__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT23__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT23__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT23__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT23__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT23__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT23__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT23__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT23__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT23__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT23__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT23__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT23__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT23__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT23__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT23__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT23__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT24__ADDRESS                      0x1eb028
#define SPICA_OTX_TX_TOP_MONPAT24__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT24__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT24__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT24__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT24__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT24__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT24__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT24__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT24__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT24__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT24__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT24__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT24__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT24__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT24__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT24__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT24__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT24__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT24__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT24__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT24__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT24__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT25__ADDRESS                      0x1eb029
#define SPICA_OTX_TX_TOP_MONPAT25__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT25__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT25__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT25__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT25__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT25__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT25__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT25__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT25__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT25__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT25__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT25__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT25__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT25__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT25__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT25__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT25__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT25__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT25__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT25__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT25__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT25__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT26__ADDRESS                      0x1eb02a
#define SPICA_OTX_TX_TOP_MONPAT26__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT26__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT26__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT26__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT26__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT26__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT26__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT26__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT26__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT26__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT26__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT26__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT26__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT26__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT26__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT26__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT26__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT26__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT26__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT26__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT26__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT26__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT27__ADDRESS                      0x1eb02b
#define SPICA_OTX_TX_TOP_MONPAT27__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT27__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT27__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT27__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT27__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT27__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT27__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT27__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT27__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT27__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT27__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT27__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT27__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT27__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT27__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT27__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT27__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT27__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT27__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT27__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT27__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT27__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT28__ADDRESS                      0x1eb02c
#define SPICA_OTX_TX_TOP_MONPAT28__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT28__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT28__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT28__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT28__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT28__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT28__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT28__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT28__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT28__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT28__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT28__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT28__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT28__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT28__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT28__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT28__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT28__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT28__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT28__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT28__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT28__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT29__ADDRESS                      0x1eb02d
#define SPICA_OTX_TX_TOP_MONPAT29__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT29__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT29__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT29__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT29__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT29__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT29__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT29__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT29__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT29__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT29__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT29__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT29__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT29__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT29__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT29__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT29__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT29__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT29__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT29__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT29__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT29__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT30__ADDRESS                      0x1eb02e
#define SPICA_OTX_TX_TOP_MONPAT30__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT30__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT30__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT30__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT30__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT30__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT30__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT30__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT30__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT30__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT30__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT30__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT30__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT30__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT30__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT30__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT30__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT30__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT30__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT30__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT30__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT30__PATTERN__OFFSET                     0

#define SPICA_OTX_TX_TOP_MONPAT31__ADDRESS                      0x1eb02f
#define SPICA_OTX_TX_TOP_MONPAT31__DEFAULT                      0x0
#define SPICA_OTX_TX_TOP_MONPAT31__ICOUNT                        5
#define SPICA_OTX_TX_TOP_MONPAT31__ISPAN                         0x800
#define SPICA_OTX_TX_TOP_MONPAT31__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TX_TOP_MONPAT31__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT31__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TX_TOP_MONPAT31__ADDRESS)
#define SPICA_OTX_TX_TOP_MONPAT31__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TX_TOP_MONPAT31__ADDRESS, (data))
#define SPICA_OTX_TX_TOP_MONPAT31__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TX_TOP_MONPAT31__ADDRESS, (data), (mask))
#  define SPICA_OTX_TX_TOP_MONPAT31__PATTERN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TX_TOP_MONPAT31__PATTERN__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT31__PATTERN__READ(die, channel)         SPICA_OTX_TX_TOP_MONPAT31__PATTERN__GET(SPICA_OTX_TX_TOP_MONPAT31__READ(die, channel))
#  define SPICA_OTX_TX_TOP_MONPAT31__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT31__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT31__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TX_TOP_MONPAT31__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TX_TOP_MONPAT31__PATTERN__MASK                       0xffff
#  define SPICA_OTX_TX_TOP_MONPAT31__PATTERN__OFFSET                     0

#define SPICA_OTX_TXA_DAC_CTL3_CFG__ADDRESS                      0x1eb083
#define SPICA_OTX_TXA_DAC_CTL3_CFG__DEFAULT                      0x83
#define SPICA_OTX_TXA_DAC_CTL3_CFG__ICOUNT                        5
#define SPICA_OTX_TXA_DAC_CTL3_CFG__ISPAN                         0x800
#define SPICA_OTX_TXA_DAC_CTL3_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXA_DAC_CTL3_CFG__ADDRESS)
#define SPICA_OTX_TXA_DAC_CTL3_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXA_DAC_CTL3_CFG__ADDRESS)
#define SPICA_OTX_TXA_DAC_CTL3_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXA_DAC_CTL3_CFG__ADDRESS, (data))
#define SPICA_OTX_TXA_DAC_CTL3_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXA_DAC_CTL3_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__READ(die, channel)         SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__GET(SPICA_OTX_TXA_DAC_CTL3_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__WRITE(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL3_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__RMW(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL3_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__MASK                       0xf
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__RTERM__OFFSET                     4
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__READ(die, channel)         SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__GET(SPICA_OTX_TXA_DAC_CTL3_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__WRITE(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL3_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__RMW(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL3_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__MASK                       0xf
#  define SPICA_OTX_TXA_DAC_CTL3_CFG__CM_ADJUST__OFFSET                     0

#define SPICA_OTX_TXA_DAC_CTL4_CFG__ADDRESS                      0x1eb084
#define SPICA_OTX_TXA_DAC_CTL4_CFG__DEFAULT                      0x0
#define SPICA_OTX_TXA_DAC_CTL4_CFG__ICOUNT                        5
#define SPICA_OTX_TXA_DAC_CTL4_CFG__ISPAN                         0x800
#define SPICA_OTX_TXA_DAC_CTL4_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXA_DAC_CTL4_CFG__ADDRESS)
#define SPICA_OTX_TXA_DAC_CTL4_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXA_DAC_CTL4_CFG__ADDRESS)
#define SPICA_OTX_TXA_DAC_CTL4_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXA_DAC_CTL4_CFG__ADDRESS, (data))
#define SPICA_OTX_TXA_DAC_CTL4_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXA_DAC_CTL4_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__READ(die, channel)         SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__GET(SPICA_OTX_TXA_DAC_CTL4_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__WRITE(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL4_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__RMW(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL4_CFG__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__MASK                       0x1
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__PWR_DN_OPZ__OFFSET                     7
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__READ(die, channel)         SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__GET(SPICA_OTX_TXA_DAC_CTL4_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__WRITE(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL4_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__RMW(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL4_CFG__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__MASK                       0x1
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__LOOPBACK_EN__OFFSET                     6
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__SET(rdata, fdata)         (((rdata) & 0xc0) | (((uint32_t)(fdata) << 0) & 0x3f))
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__GET(rdata)                (((rdata) >> 0) & 0x3f)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__READ(die, channel)         SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__GET(SPICA_OTX_TXA_DAC_CTL4_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__WRITE(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL4_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__RMW(die, channel, fdata) SPICA_OTX_TXA_DAC_CTL4_CFG__RMW(die, (channel), (fdata)<<0, 0x3f)
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__MASK                       0x3f
#  define SPICA_OTX_TXA_DAC_CTL4_CFG__RSVD__OFFSET                     0

#define SPICA_OTX_TXA_CK_CTL1_CFG__ADDRESS                      0x1eb087
#define SPICA_OTX_TXA_CK_CTL1_CFG__DEFAULT                      0x0
#define SPICA_OTX_TXA_CK_CTL1_CFG__ICOUNT                        5
#define SPICA_OTX_TXA_CK_CTL1_CFG__ISPAN                         0x800
#define SPICA_OTX_TXA_CK_CTL1_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXA_CK_CTL1_CFG__ADDRESS)
#define SPICA_OTX_TXA_CK_CTL1_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXA_CK_CTL1_CFG__ADDRESS)
#define SPICA_OTX_TXA_CK_CTL1_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXA_CK_CTL1_CFG__ADDRESS, (data))
#define SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXA_CK_CTL1_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__READ(die, channel)         SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__GET(SPICA_OTX_TXA_CK_CTL1_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__WRITE(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__RMW(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__MASK                       0x7
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSVD__OFFSET                     5
#  define SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__READ(die, channel)         SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__GET(SPICA_OTX_TXA_CK_CTL1_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__WRITE(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__RMW(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__MASK                       0x1
#  define SPICA_OTX_TXA_CK_CTL1_CFG__AC_BYP__OFFSET                     4
#  define SPICA_OTX_TXA_CK_CTL1_CFG__SET__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__SET__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__SET__READ(die, channel)         SPICA_OTX_TXA_CK_CTL1_CFG__SET__GET(SPICA_OTX_TXA_CK_CTL1_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__SET__WRITE(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__SET__RMW(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__SET__MASK                       0x1
#  define SPICA_OTX_TXA_CK_CTL1_CFG__SET__OFFSET                     3
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__READ(die, channel)         SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__GET(SPICA_OTX_TXA_CK_CTL1_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__WRITE(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__RMW(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__MASK                       0x1
#  define SPICA_OTX_TXA_CK_CTL1_CFG__RSTB__OFFSET                     2
#  define SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__READ(die, channel)         SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__GET(SPICA_OTX_TXA_CK_CTL1_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__WRITE(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__RMW(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__MASK                       0x1
#  define SPICA_OTX_TXA_CK_CTL1_CFG__DCFB_EN__OFFSET                     1
#  define SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__READ(die, channel)         SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__GET(SPICA_OTX_TXA_CK_CTL1_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__WRITE(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__RMW(die, channel, fdata) SPICA_OTX_TXA_CK_CTL1_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__MASK                       0x1
#  define SPICA_OTX_TXA_CK_CTL1_CFG__LPFB_EN__OFFSET                     0

#define SPICA_OTX_TXA_PDB_CFG__ADDRESS                      0x1eb08a
#define SPICA_OTX_TXA_PDB_CFG__DEFAULT                      0x0
#define SPICA_OTX_TXA_PDB_CFG__ICOUNT                        5
#define SPICA_OTX_TXA_PDB_CFG__ISPAN                         0x800
#define SPICA_OTX_TXA_PDB_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXA_PDB_CFG__ADDRESS)
#define SPICA_OTX_TXA_PDB_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXA_PDB_CFG__ADDRESS)
#define SPICA_OTX_TXA_PDB_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXA_PDB_CFG__ADDRESS, (data))
#define SPICA_OTX_TXA_PDB_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXA_PDB_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXA_PDB_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_OTX_TXA_PDB_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_OTX_TXA_PDB_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TXA_PDB_CFG__RSRVD1__GET(SPICA_OTX_TXA_PDB_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_PDB_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXA_PDB_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXA_PDB_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXA_PDB_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXA_PDB_CFG__RSRVD1__MASK                       0xf
#  define SPICA_OTX_TXA_PDB_CFG__RSRVD1__OFFSET                     4
#  define SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__READ(die, channel)         SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__GET(SPICA_OTX_TXA_PDB_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__WRITE(die, channel, fdata) SPICA_OTX_TXA_PDB_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__RMW(die, channel, fdata) SPICA_OTX_TXA_PDB_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__MASK                       0xf
#  define SPICA_OTX_TXA_PDB_CFG__TXD_O_PDB__OFFSET                     0

#define SPICA_OTX_TXA_RST_CFG__ADDRESS                      0x1eb08b
#define SPICA_OTX_TXA_RST_CFG__DEFAULT                      0x0
#define SPICA_OTX_TXA_RST_CFG__ICOUNT                        5
#define SPICA_OTX_TXA_RST_CFG__ISPAN                         0x800
#define SPICA_OTX_TXA_RST_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXA_RST_CFG__ADDRESS)
#define SPICA_OTX_TXA_RST_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXA_RST_CFG__ADDRESS)
#define SPICA_OTX_TXA_RST_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXA_RST_CFG__ADDRESS, (data))
#define SPICA_OTX_TXA_RST_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXA_RST_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXA_RST_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_OTX_TXA_RST_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_OTX_TXA_RST_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TXA_RST_CFG__RSRVD1__GET(SPICA_OTX_TXA_RST_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_RST_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXA_RST_CFG__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_TXA_RST_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXA_RST_CFG__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_TXA_RST_CFG__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_TXA_RST_CFG__RSRVD1__OFFSET                     1
#  define SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__READ(die, channel)         SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__GET(SPICA_OTX_TXA_RST_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__WRITE(die, channel, fdata) SPICA_OTX_TXA_RST_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__RMW(die, channel, fdata) SPICA_OTX_TXA_RST_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__MASK                       0x1
#  define SPICA_OTX_TXA_RST_CFG__TXD_O_DIG_RSTB__OFFSET                     0

#define SPICA_OTX_TXA_RCAL_LKUP_CFG__ADDRESS                      0x1eb09d
#define SPICA_OTX_TXA_RCAL_LKUP_CFG__DEFAULT                      0x0
#define SPICA_OTX_TXA_RCAL_LKUP_CFG__ICOUNT                        5
#define SPICA_OTX_TXA_RCAL_LKUP_CFG__ISPAN                         0x800
#define SPICA_OTX_TXA_RCAL_LKUP_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXA_RCAL_LKUP_CFG__ADDRESS)
#define SPICA_OTX_TXA_RCAL_LKUP_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXA_RCAL_LKUP_CFG__ADDRESS)
#define SPICA_OTX_TXA_RCAL_LKUP_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXA_RCAL_LKUP_CFG__ADDRESS, (data))
#define SPICA_OTX_TXA_RCAL_LKUP_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXA_RCAL_LKUP_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__GET(SPICA_OTX_TXA_RCAL_LKUP_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXA_RCAL_LKUP_CFG__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXA_RCAL_LKUP_CFG__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RSRVD1__OFFSET                     1
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__READ(die, channel)         SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__GET(SPICA_OTX_TXA_RCAL_LKUP_CFG__READ(die, channel))
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__WRITE(die, channel, fdata) SPICA_OTX_TXA_RCAL_LKUP_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__RMW(die, channel, fdata) SPICA_OTX_TXA_RCAL_LKUP_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__MASK                       0x1
#  define SPICA_OTX_TXA_RCAL_LKUP_CFG__RTERM_OVRD__OFFSET                     0

#define SPICA_OTX_TXD_CLKEN__ADDRESS                      0x1eb140
#define SPICA_OTX_TXD_CLKEN__DEFAULT                      0x0
#define SPICA_OTX_TXD_CLKEN__ICOUNT                        5
#define SPICA_OTX_TXD_CLKEN__ISPAN                         0x800
#define SPICA_OTX_TXD_CLKEN__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_CLKEN__ADDRESS)
#define SPICA_OTX_TXD_CLKEN__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_CLKEN__ADDRESS)
#define SPICA_OTX_TXD_CLKEN__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_CLKEN__ADDRESS, (data))
#define SPICA_OTX_TXD_CLKEN__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_CLKEN__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_CLKEN__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_TXD_CLKEN__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_CLKEN__RSRVD1__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_CLKEN__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_CLKEN__RSRVD1__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__RSRVD1__OFFSET                     15
#  define SPICA_OTX_TXD_CLKEN__FLL__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_OTX_TXD_CLKEN__FLL__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__FLL__READ(die, channel)         SPICA_OTX_TXD_CLKEN__FLL__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__FLL__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_OTX_TXD_CLKEN__FLL__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_OTX_TXD_CLKEN__FLL__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__FLL__OFFSET                     14
#  define SPICA_OTX_TXD_CLKEN__LTX2EGR__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_OTX_TXD_CLKEN__LTX2EGR__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__LTX2EGR__READ(die, channel)         SPICA_OTX_TXD_CLKEN__LTX2EGR__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__LTX2EGR__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_OTX_TXD_CLKEN__LTX2EGR__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_OTX_TXD_CLKEN__LTX2EGR__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__LTX2EGR__OFFSET                     13
#  define SPICA_OTX_TXD_CLKEN__PRECODER__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_OTX_TXD_CLKEN__PRECODER__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__PRECODER__READ(die, channel)         SPICA_OTX_TXD_CLKEN__PRECODER__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__PRECODER__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_TXD_CLKEN__PRECODER__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_TXD_CLKEN__PRECODER__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__PRECODER__OFFSET                     12
#  define SPICA_OTX_TXD_CLKEN__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_OTX_TXD_CLKEN__RSRVD2__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__RSRVD2__READ(die, channel)         SPICA_OTX_TXD_CLKEN__RSRVD2__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__RSRVD2__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_CLKEN__RSRVD2__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_CLKEN__RSRVD2__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__RSRVD2__OFFSET                     11
#  define SPICA_OTX_TXD_CLKEN__PGEN__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_OTX_TXD_CLKEN__PGEN__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__PGEN__READ(die, channel)         SPICA_OTX_TXD_CLKEN__PGEN__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__PGEN__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_OTX_TXD_CLKEN__PGEN__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_OTX_TXD_CLKEN__PGEN__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__PGEN__OFFSET                     10
#  define SPICA_OTX_TXD_CLKEN__DSP__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_OTX_TXD_CLKEN__DSP__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__DSP__READ(die, channel)         SPICA_OTX_TXD_CLKEN__DSP__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__DSP__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_CLKEN__DSP__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_CLKEN__DSP__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__DSP__OFFSET                     9
#  define SPICA_OTX_TXD_CLKEN__INJ__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_OTX_TXD_CLKEN__INJ__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__INJ__READ(die, channel)         SPICA_OTX_TXD_CLKEN__INJ__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__INJ__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_CLKEN__INJ__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_CLKEN__INJ__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__INJ__OFFSET                     8
#  define SPICA_OTX_TXD_CLKEN__FEC__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_TXD_CLKEN__FEC__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__FEC__READ(die, channel)         SPICA_OTX_TXD_CLKEN__FEC__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__FEC__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_CLKEN__FEC__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_CLKEN__FEC__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__FEC__OFFSET                     7
#  define SPICA_OTX_TXD_CLKEN__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_TXD_CLKEN__RSRVD3__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__RSRVD3__READ(die, channel)         SPICA_OTX_TXD_CLKEN__RSRVD3__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__RSRVD3__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_CLKEN__RSRVD3__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_CLKEN__RSRVD3__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__RSRVD3__OFFSET                     6
#  define SPICA_OTX_TXD_CLKEN__GEN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_TXD_CLKEN__GEN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__GEN__READ(die, channel)         SPICA_OTX_TXD_CLKEN__GEN__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__GEN__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_CLKEN__GEN__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_CLKEN__GEN__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__GEN__OFFSET                     5
#  define SPICA_OTX_TXD_CLKEN__CID__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_TXD_CLKEN__CID__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_TXD_CLKEN__CID__READ(die, channel)         SPICA_OTX_TXD_CLKEN__CID__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__CID__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_CLKEN__CID__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_CLKEN__CID__MASK                       0x1
#  define SPICA_OTX_TXD_CLKEN__CID__OFFSET                     4
#  define SPICA_OTX_TXD_CLKEN__RSRVD4__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_TXD_CLKEN__RSRVD4__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_TXD_CLKEN__RSRVD4__READ(die, channel)         SPICA_OTX_TXD_CLKEN__RSRVD4__GET(SPICA_OTX_TXD_CLKEN__READ(die, channel))
#  define SPICA_OTX_TXD_CLKEN__RSRVD4__WRITE(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXD_CLKEN__RSRVD4__RMW(die, channel, fdata) SPICA_OTX_TXD_CLKEN__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXD_CLKEN__RSRVD4__MASK                       0xf
#  define SPICA_OTX_TXD_CLKEN__RSRVD4__OFFSET                     0

#define SPICA_OTX_TXD_RESET__ADDRESS                      0x1eb141
#define SPICA_OTX_TXD_RESET__DEFAULT                      0x0
#define SPICA_OTX_TXD_RESET__ICOUNT                        5
#define SPICA_OTX_TXD_RESET__ISPAN                         0x800
#define SPICA_OTX_TXD_RESET__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_RESET__ADDRESS)
#define SPICA_OTX_TXD_RESET__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_RESET__ADDRESS)
#define SPICA_OTX_TXD_RESET__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_RESET__ADDRESS, (data))
#define SPICA_OTX_TXD_RESET__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_RESET__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_RESET__SOFT_RESET__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_TXD_RESET__SOFT_RESET__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_TXD_RESET__SOFT_RESET__READ(die, channel)         SPICA_OTX_TXD_RESET__SOFT_RESET__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__SOFT_RESET__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_RESET__SOFT_RESET__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_RESET__SOFT_RESET__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__SOFT_RESET__OFFSET                     15
#  define SPICA_OTX_TXD_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SPICA_OTX_TXD_RESET__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SPICA_OTX_TXD_RESET__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_RESET__RSRVD1__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_OTX_TXD_RESET__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_OTX_TXD_RESET__RSRVD1__MASK                       0x1f
#  define SPICA_OTX_TXD_RESET__RSRVD1__OFFSET                     10
#  define SPICA_OTX_TXD_RESET__PRECODER__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_OTX_TXD_RESET__PRECODER__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_OTX_TXD_RESET__PRECODER__READ(die, channel)         SPICA_OTX_TXD_RESET__PRECODER__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__PRECODER__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_RESET__PRECODER__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_RESET__PRECODER__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__PRECODER__OFFSET                     9
#  define SPICA_OTX_TXD_RESET__PGEN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_OTX_TXD_RESET__PGEN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_OTX_TXD_RESET__PGEN__READ(die, channel)         SPICA_OTX_TXD_RESET__PGEN__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__PGEN__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_RESET__PGEN__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_RESET__PGEN__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__PGEN__OFFSET                     8
#  define SPICA_OTX_TXD_RESET__DSP__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_TXD_RESET__DSP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_TXD_RESET__DSP__READ(die, channel)         SPICA_OTX_TXD_RESET__DSP__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__DSP__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_RESET__DSP__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_RESET__DSP__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__DSP__OFFSET                     7
#  define SPICA_OTX_TXD_RESET__INJ__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_TXD_RESET__INJ__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_TXD_RESET__INJ__READ(die, channel)         SPICA_OTX_TXD_RESET__INJ__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__INJ__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_RESET__INJ__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_RESET__INJ__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__INJ__OFFSET                     6
#  define SPICA_OTX_TXD_RESET__FEC__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_TXD_RESET__FEC__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_TXD_RESET__FEC__READ(die, channel)         SPICA_OTX_TXD_RESET__FEC__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__FEC__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_RESET__FEC__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_RESET__FEC__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__FEC__OFFSET                     5
#  define SPICA_OTX_TXD_RESET__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_TXD_RESET__RSRVD2__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_TXD_RESET__RSRVD2__READ(die, channel)         SPICA_OTX_TXD_RESET__RSRVD2__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__RSRVD2__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_RESET__RSRVD2__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_RESET__RSRVD2__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__RSRVD2__OFFSET                     4
#  define SPICA_OTX_TXD_RESET__GEN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_TXD_RESET__GEN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_TXD_RESET__GEN__READ(die, channel)         SPICA_OTX_TXD_RESET__GEN__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__GEN__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXD_RESET__GEN__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXD_RESET__GEN__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__GEN__OFFSET                     3
#  define SPICA_OTX_TXD_RESET__CID__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_TXD_RESET__CID__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_TXD_RESET__CID__READ(die, channel)         SPICA_OTX_TXD_RESET__CID__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__CID__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TXD_RESET__CID__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TXD_RESET__CID__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__CID__OFFSET                     2
#  define SPICA_OTX_TXD_RESET__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_TXD_RESET__RSRVD3__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_TXD_RESET__RSRVD3__READ(die, channel)         SPICA_OTX_TXD_RESET__RSRVD3__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__RSRVD3__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXD_RESET__RSRVD3__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXD_RESET__RSRVD3__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__RSRVD3__OFFSET                     1
#  define SPICA_OTX_TXD_RESET__FIFO__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXD_RESET__FIFO__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXD_RESET__FIFO__READ(die, channel)         SPICA_OTX_TXD_RESET__FIFO__GET(SPICA_OTX_TXD_RESET__READ(die, channel))
#  define SPICA_OTX_TXD_RESET__FIFO__WRITE(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_RESET__FIFO__RMW(die, channel, fdata) SPICA_OTX_TXD_RESET__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_RESET__FIFO__MASK                       0x1
#  define SPICA_OTX_TXD_RESET__FIFO__OFFSET                     0

#define SPICA_OTX_TXD_MISC_CFG__ADDRESS                      0x1eb142
#define SPICA_OTX_TXD_MISC_CFG__DEFAULT                      0xb400
#define SPICA_OTX_TXD_MISC_CFG__ICOUNT                        5
#define SPICA_OTX_TXD_MISC_CFG__ISPAN                         0x800
#define SPICA_OTX_TXD_MISC_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_MISC_CFG__ADDRESS)
#define SPICA_OTX_TXD_MISC_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_MISC_CFG__ADDRESS)
#define SPICA_OTX_TXD_MISC_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_MISC_CFG__ADDRESS, (data))
#define SPICA_OTX_TXD_MISC_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_MISC_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<14, 0xc000)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__MASK                       0x3
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B11__OFFSET                     14
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__SET(rdata, fdata)         (((rdata) & 0xcfff) | (((uint32_t)(fdata) << 12) & 0x3000))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__GET(rdata)                (((rdata) >> 12) & 0x3)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<12, 0x3000)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__MASK                       0x3
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B10__OFFSET                     12
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__MASK                       0x3
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B01__OFFSET                     10
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<8, 0x300)
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__MASK                       0x3
#  define SPICA_OTX_TXD_MISC_CFG__GRAY_MAP_B00__OFFSET                     8
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__RSRVD1__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD1__MASK                       0xf
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD1__OFFSET                     4
#  define SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_CFG__PRECODE_EN__OFFSET                     3
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff9) | (((uint32_t)(fdata) << 1) & 0x6))
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD2__GET(rdata)                (((rdata) >> 1) & 0x3)
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD2__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__RSRVD2__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD2__MASK                       0x3
#  define SPICA_OTX_TXD_MISC_CFG__RSRVD2__OFFSET                     1
#  define SPICA_OTX_TXD_MISC_CFG__BMPM_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXD_MISC_CFG__BMPM_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXD_MISC_CFG__BMPM_EN__READ(die, channel)         SPICA_OTX_TXD_MISC_CFG__BMPM_EN__GET(SPICA_OTX_TXD_MISC_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_CFG__BMPM_EN__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_MISC_CFG__BMPM_EN__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_MISC_CFG__BMPM_EN__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_CFG__BMPM_EN__OFFSET                     0

#define SPICA_OTX_TXD_FIFO_CTRL__ADDRESS                      0x1eb151
#define SPICA_OTX_TXD_FIFO_CTRL__DEFAULT                      0x0
#define SPICA_OTX_TXD_FIFO_CTRL__ICOUNT                        5
#define SPICA_OTX_TXD_FIFO_CTRL__ISPAN                         0x800
#define SPICA_OTX_TXD_FIFO_CTRL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_FIFO_CTRL__ADDRESS)
#define SPICA_OTX_TXD_FIFO_CTRL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_FIFO_CTRL__ADDRESS)
#define SPICA_OTX_TXD_FIFO_CTRL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_FIFO_CTRL__ADDRESS, (data))
#define SPICA_OTX_TXD_FIFO_CTRL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_FIFO_CTRL__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__READ(die, channel)         SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__GET(SPICA_OTX_TXD_FIFO_CTRL__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__MASK                       0xf
#  define SPICA_OTX_TXD_FIFO_CTRL__AUTO_RPTR_ADJUST_EN__OFFSET                     12
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__READ(die, channel)         SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__GET(SPICA_OTX_TXD_FIFO_CTRL__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__MASK                       0xf
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_ADVANCE__OFFSET                     8
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__READ(die, channel)         SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__GET(SPICA_OTX_TXD_FIFO_CTRL__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__MASK                       0xf
#  define SPICA_OTX_TXD_FIFO_CTRL__RPTR_PAUSE__OFFSET                     4
#  define SPICA_OTX_TXD_FIFO_CTRL__RECENTER__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_TXD_FIFO_CTRL__RECENTER__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_TXD_FIFO_CTRL__RECENTER__READ(die, channel)         SPICA_OTX_TXD_FIFO_CTRL__RECENTER__GET(SPICA_OTX_TXD_FIFO_CTRL__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_CTRL__RECENTER__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXD_FIFO_CTRL__RECENTER__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_CTRL__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXD_FIFO_CTRL__RECENTER__MASK                       0xf
#  define SPICA_OTX_TXD_FIFO_CTRL__RECENTER__OFFSET                     0

#define SPICA_OTX_TXD_GEN_CFG__ADDRESS                      0x1eb15c
#define SPICA_OTX_TXD_GEN_CFG__DEFAULT                      0x0
#define SPICA_OTX_TXD_GEN_CFG__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_CFG__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_CFG__ADDRESS)
#define SPICA_OTX_TXD_GEN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_CFG__ADDRESS)
#define SPICA_OTX_TXD_GEN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_CFG__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__GEN_EN__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN__MASK                       0x1
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN__OFFSET                     15
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__MASK                       0x1
#  define SPICA_OTX_TXD_GEN_CFG__GEN_EN_ODD__OFFSET                     14
#  define SPICA_OTX_TXD_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_OTX_TXD_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_OTX_TXD_GEN_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__RSRVD1__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_OTX_TXD_GEN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_OTX_TXD_GEN_CFG__RSRVD1__MASK                       0x1
#  define SPICA_OTX_TXD_GEN_CFG__RSRVD1__OFFSET                     13
#  define SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__MASK                       0x1
#  define SPICA_OTX_TXD_GEN_CFG__NRZ_MODE__OFFSET                     12
#  define SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__MASK                       0x1
#  define SPICA_OTX_TXD_GEN_CFG__DUAL_PRBS__OFFSET                     11
#  define SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__MASK                       0x7
#  define SPICA_OTX_TXD_GEN_CFG__PATTERN_MODE__OFFSET                     8
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__MASK                       0xf
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE_ODD__OFFSET                     4
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__READ(die, channel)         SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__GET(SPICA_OTX_TXD_GEN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_CFG__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__MASK                       0xf
#  define SPICA_OTX_TXD_GEN_CFG__PRBS_MODE__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS                      0x1eb15d
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__GET(SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG0__VALUE0__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS                      0x1eb15e
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__GET(SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG1__VALUE1__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS                      0x1eb15f
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__GET(SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG2__VALUE2__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS                      0x1eb160
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__GET(SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDE_FIX0_CFG3__VALUE3__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS                      0x1eb161
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__GET(SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG0__VALUE0__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS                      0x1eb162
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__GET(SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG1__VALUE1__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS                      0x1eb163
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__GET(SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG2__VALUE2__OFFSET                     0

#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS                      0x1eb164
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__DEFAULT                      0x3333
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS)
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__READ(die, channel)         SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__GET(SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__MASK                       0xffff
#  define SPICA_OTX_TXD_GEN_SEEDO_FIX1_CFG3__VALUE3__OFFSET                     0

#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS                      0x1eb165
#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__DEFAULT                      0x1
#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__ICOUNT                        5
#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__ISPAN                         0x800
#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS)
#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data))
#define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__READ(die, channel)         SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__GET(SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__MASK                       0xff
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT1__OFFSET                     8
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__READ(die, channel)         SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__GET(SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__WRITE(die, channel, fdata) SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__RMW(die, channel, fdata) SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__MASK                       0xff
#  define SPICA_OTX_TXD_GEN_FIXED_REPEAT_CFG__REPEAT0__OFFSET                     0

#define SPICA_OTX_TXD_ERRINJ_CFG0__ADDRESS                      0x1eb168
#define SPICA_OTX_TXD_ERRINJ_CFG0__DEFAULT                      0x0
#define SPICA_OTX_TXD_ERRINJ_CFG0__ICOUNT                        5
#define SPICA_OTX_TXD_ERRINJ_CFG0__ISPAN                         0x800
#define SPICA_OTX_TXD_ERRINJ_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_ERRINJ_CFG0__ADDRESS)
#define SPICA_OTX_TXD_ERRINJ_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_ERRINJ_CFG0__ADDRESS)
#define SPICA_OTX_TXD_ERRINJ_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_ERRINJ_CFG0__ADDRESS, (data))
#define SPICA_OTX_TXD_ERRINJ_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_ERRINJ_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__READ(die, channel)         SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__GET(SPICA_OTX_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__WRITE(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__RMW(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__MASK                       0x1
#  define SPICA_OTX_TXD_ERRINJ_CFG0__ENABLE__OFFSET                     15
#  define SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x8007) | (((uint32_t)(fdata) << 3) & 0x7ff8))
#  define SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0xfff)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__GET(SPICA_OTX_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<3, 0x7ff8)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__MASK                       0xfff
#  define SPICA_OTX_TXD_ERRINJ_CFG0__RSRVD1__OFFSET                     3
#  define SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__READ(die, channel)         SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__GET(SPICA_OTX_TXD_ERRINJ_CFG0__READ(die, channel))
#  define SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__WRITE(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__RMW(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__MASK                       0x7
#  define SPICA_OTX_TXD_ERRINJ_CFG0__PATTERN__OFFSET                     0

#define SPICA_OTX_TXD_ERRINJ_CFG1__ADDRESS                      0x1eb169
#define SPICA_OTX_TXD_ERRINJ_CFG1__DEFAULT                      0x1
#define SPICA_OTX_TXD_ERRINJ_CFG1__ICOUNT                        5
#define SPICA_OTX_TXD_ERRINJ_CFG1__ISPAN                         0x800
#define SPICA_OTX_TXD_ERRINJ_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_ERRINJ_CFG1__ADDRESS)
#define SPICA_OTX_TXD_ERRINJ_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_ERRINJ_CFG1__ADDRESS)
#define SPICA_OTX_TXD_ERRINJ_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_ERRINJ_CFG1__ADDRESS, (data))
#define SPICA_OTX_TXD_ERRINJ_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_ERRINJ_CFG1__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_ERRINJ_CFG1__GAP__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_OTX_TXD_ERRINJ_CFG1__GAP__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_OTX_TXD_ERRINJ_CFG1__GAP__READ(die, channel)         SPICA_OTX_TXD_ERRINJ_CFG1__GAP__GET(SPICA_OTX_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_OTX_TXD_ERRINJ_CFG1__GAP__WRITE(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_OTX_TXD_ERRINJ_CFG1__GAP__RMW(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_OTX_TXD_ERRINJ_CFG1__GAP__MASK                       0xff
#  define SPICA_OTX_TXD_ERRINJ_CFG1__GAP__OFFSET                     8
#  define SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__READ(die, channel)         SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__GET(SPICA_OTX_TXD_ERRINJ_CFG1__READ(die, channel))
#  define SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__WRITE(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__RMW(die, channel, fdata) SPICA_OTX_TXD_ERRINJ_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__MASK                       0xff
#  define SPICA_OTX_TXD_ERRINJ_CFG1__DURATION__OFFSET                     0

#define SPICA_OTX_TXD_SQUELCH_EN_CFG__ADDRESS                      0x1eb16a
#define SPICA_OTX_TXD_SQUELCH_EN_CFG__DEFAULT                      0x1
#define SPICA_OTX_TXD_SQUELCH_EN_CFG__ICOUNT                        5
#define SPICA_OTX_TXD_SQUELCH_EN_CFG__ISPAN                         0x800
#define SPICA_OTX_TXD_SQUELCH_EN_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SPICA_OTX_TXD_SQUELCH_EN_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_SQUELCH_EN_CFG__ADDRESS)
#define SPICA_OTX_TXD_SQUELCH_EN_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_SQUELCH_EN_CFG__ADDRESS, (data))
#define SPICA_OTX_TXD_SQUELCH_EN_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_SQUELCH_EN_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__GET(SPICA_OTX_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__MASK                       0x7fff
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__RSRVD1__OFFSET                     1
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__READ(die, channel)         SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__GET(SPICA_OTX_TXD_SQUELCH_EN_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__WRITE(die, channel, fdata) SPICA_OTX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__RMW(die, channel, fdata) SPICA_OTX_TXD_SQUELCH_EN_CFG__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__MASK                       0x1
#  define SPICA_OTX_TXD_SQUELCH_EN_CFG__SQUELCH_EN__OFFSET                     0

#define SPICA_OTX_TXD_DSP_CFG__ADDRESS                      0x1eb174
#define SPICA_OTX_TXD_DSP_CFG__DEFAULT                      0x0
#define SPICA_OTX_TXD_DSP_CFG__ICOUNT                        5
#define SPICA_OTX_TXD_DSP_CFG__ISPAN                         0x800
#define SPICA_OTX_TXD_DSP_CFG__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_DSP_CFG__ADDRESS)
#define SPICA_OTX_TXD_DSP_CFG__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_DSP_CFG__ADDRESS)
#define SPICA_OTX_TXD_DSP_CFG__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_DSP_CFG__ADDRESS, (data))
#define SPICA_OTX_TXD_DSP_CFG__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_DSP_CFG__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1ff) | (((uint32_t)(fdata) << 9) & 0xfe00))
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD1__GET(rdata)                (((rdata) >> 9) & 0x7f)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_DSP_CFG__RSRVD1__GET(SPICA_OTX_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<9, 0xfe00)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD1__OFFSET                     9
#  define SPICA_OTX_TXD_DSP_CFG__TEST_EN__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_OTX_TXD_DSP_CFG__TEST_EN__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_OTX_TXD_DSP_CFG__TEST_EN__READ(die, channel)         SPICA_OTX_TXD_DSP_CFG__TEST_EN__GET(SPICA_OTX_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_CFG__TEST_EN__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_DSP_CFG__TEST_EN__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_DSP_CFG__TEST_EN__MASK                       0x1
#  define SPICA_OTX_TXD_DSP_CFG__TEST_EN__OFFSET                     8
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD2__READ(die, channel)         SPICA_OTX_TXD_DSP_CFG__RSRVD2__GET(SPICA_OTX_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD2__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD2__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD2__MASK                       0x7
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD2__OFFSET                     5
#  define SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__READ(die, channel)         SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__GET(SPICA_OTX_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__MASK                       0x1
#  define SPICA_OTX_TXD_DSP_CFG__IS_LUT_UNSIGNED__OFFSET                     4
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD3__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD3__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD3__READ(die, channel)         SPICA_OTX_TXD_DSP_CFG__RSRVD3__GET(SPICA_OTX_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD3__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD3__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD3__MASK                       0x3
#  define SPICA_OTX_TXD_DSP_CFG__RSRVD3__OFFSET                     2
#  define SPICA_OTX_TXD_DSP_CFG__MODE__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SPICA_OTX_TXD_DSP_CFG__MODE__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SPICA_OTX_TXD_DSP_CFG__MODE__READ(die, channel)         SPICA_OTX_TXD_DSP_CFG__MODE__GET(SPICA_OTX_TXD_DSP_CFG__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_CFG__MODE__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_OTX_TXD_DSP_CFG__MODE__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_CFG__RMW(die, (channel), (fdata)<<0, 0x3)
#  define SPICA_OTX_TXD_DSP_CFG__MODE__MASK                       0x3
#  define SPICA_OTX_TXD_DSP_CFG__MODE__OFFSET                     0

#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDRESS                      0x1eb176
#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__DEFAULT                      0x0
#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ICOUNT                        5
#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ISPAN                         0x800
#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDRESS)
#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDRESS)
#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDRESS, (data))
#define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__READ(die, channel)         SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__GET(SPICA_OTX_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__MASK                       0x1
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__RBW__OFFSET                     15
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__SET(rdata, fdata)         (((rdata) & 0x83ff) | (((uint32_t)(fdata) << 10) & 0x7c00))
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__GET(rdata)                (((rdata) >> 10) & 0x1f)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__READ(die, channel)         SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__GET(SPICA_OTX_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<10, 0x7c00)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__MASK                       0x1f
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__ADDR__OFFSET                     10
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__SET(rdata, fdata)         (((rdata) & 0xfc00) | (((uint32_t)(fdata) << 0) & 0x3ff))
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__GET(rdata)                (((rdata) >> 0) & 0x3ff)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__READ(die, channel)         SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__GET(SPICA_OTX_TXD_DSP_COEFF_ACCESS__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<0, 0x3ff)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_COEFF_ACCESS__RMW(die, (channel), (fdata)<<0, 0x3ff)
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__MASK                       0x3ff
#  define SPICA_OTX_TXD_DSP_COEFF_ACCESS__WRITE_DATA__OFFSET                     0

#define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDRESS                      0x1eb178
#define SPICA_OTX_TXD_DSP_LUT_ACCESS__DEFAULT                      0x0
#define SPICA_OTX_TXD_DSP_LUT_ACCESS__ICOUNT                        5
#define SPICA_OTX_TXD_DSP_LUT_ACCESS__ISPAN                         0x800
#define SPICA_OTX_TXD_DSP_LUT_ACCESS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SPICA_OTX_TXD_DSP_LUT_ACCESS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDRESS)
#define SPICA_OTX_TXD_DSP_LUT_ACCESS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDRESS, (data))
#define SPICA_OTX_TXD_DSP_LUT_ACCESS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__READ(die, channel)         SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__GET(SPICA_OTX_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__MASK                       0x1
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RBW__OFFSET                     15
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__GET(SPICA_OTX_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__RSRVD1__OFFSET                     8
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__READ(die, channel)         SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__GET(SPICA_OTX_TXD_DSP_LUT_ACCESS__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_ACCESS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__MASK                       0xff
#  define SPICA_OTX_TXD_DSP_LUT_ACCESS__ADDR__OFFSET                     0

#define SPICA_OTX_TXD_DSP_LUT_WRITE__ADDRESS                      0x1eb179
#define SPICA_OTX_TXD_DSP_LUT_WRITE__DEFAULT                      0x0
#define SPICA_OTX_TXD_DSP_LUT_WRITE__ICOUNT                        5
#define SPICA_OTX_TXD_DSP_LUT_WRITE__ISPAN                         0x800
#define SPICA_OTX_TXD_DSP_LUT_WRITE__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_DSP_LUT_WRITE__ADDRESS)
#define SPICA_OTX_TXD_DSP_LUT_WRITE__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_DSP_LUT_WRITE__ADDRESS)
#define SPICA_OTX_TXD_DSP_LUT_WRITE__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_DSP_LUT_WRITE__ADDRESS, (data))
#define SPICA_OTX_TXD_DSP_LUT_WRITE__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_DSP_LUT_WRITE__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__GET(SPICA_OTX_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__MASK                       0x1ff
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__RSRVD1__OFFSET                     7
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__READ(die, channel)         SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__GET(SPICA_OTX_TXD_DSP_LUT_WRITE__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_WRITE__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__MASK                       0x7f
#  define SPICA_OTX_TXD_DSP_LUT_WRITE__DATA__OFFSET                     0

#define SPICA_OTX_TXD_DSP_LUT_READ__ADDRESS                      0x1eb17a
#define SPICA_OTX_TXD_DSP_LUT_READ__DEFAULT                      0x0
#define SPICA_OTX_TXD_DSP_LUT_READ__ICOUNT                        5
#define SPICA_OTX_TXD_DSP_LUT_READ__ISPAN                         0x800
#define SPICA_OTX_TXD_DSP_LUT_READ__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_DSP_LUT_READ__ADDRESS)
#define SPICA_OTX_TXD_DSP_LUT_READ__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_DSP_LUT_READ__ADDRESS)
#define SPICA_OTX_TXD_DSP_LUT_READ__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_DSP_LUT_READ__ADDRESS, (data))
#define SPICA_OTX_TXD_DSP_LUT_READ__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_DSP_LUT_READ__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__GET(SPICA_OTX_TXD_DSP_LUT_READ__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<7, 0xff80)
#  define SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__MASK                       0x1ff
#  define SPICA_OTX_TXD_DSP_LUT_READ__RSRVD1__OFFSET                     7
#  define SPICA_OTX_TXD_DSP_LUT_READ__DATA__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_OTX_TXD_DSP_LUT_READ__DATA__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_OTX_TXD_DSP_LUT_READ__DATA__READ(die, channel)         SPICA_OTX_TXD_DSP_LUT_READ__DATA__GET(SPICA_OTX_TXD_DSP_LUT_READ__READ(die, channel))
#  define SPICA_OTX_TXD_DSP_LUT_READ__DATA__WRITE(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_OTX_TXD_DSP_LUT_READ__DATA__RMW(die, channel, fdata) SPICA_OTX_TXD_DSP_LUT_READ__RMW(die, (channel), (fdata)<<0, 0x7f)
#  define SPICA_OTX_TXD_DSP_LUT_READ__DATA__MASK                       0x7f
#  define SPICA_OTX_TXD_DSP_LUT_READ__DATA__OFFSET                     0

#define SPICA_OTX_TXD_MISC_INTS__ADDRESS                      0x1eb189
#define SPICA_OTX_TXD_MISC_INTS__DEFAULT                      0x0
#define SPICA_OTX_TXD_MISC_INTS__ICOUNT                        5
#define SPICA_OTX_TXD_MISC_INTS__ISPAN                         0x800
#define SPICA_OTX_TXD_MISC_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_MISC_INTS__ADDRESS)
#define SPICA_OTX_TXD_MISC_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_MISC_INTS__ADDRESS)
#define SPICA_OTX_TXD_MISC_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_MISC_INTS__ADDRESS, (data))
#define SPICA_OTX_TXD_MISC_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_MISC_INTS__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD1__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__RSRVD1__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD1__MASK                       0xf
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD1__OFFSET                     12
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_ADVANCE_EVENTS__OFFSET                     11
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_ADVANCE_EVENTS__OFFSET                     10
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_ADVANCE_EVENTS__OFFSET                     9
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_ADVANCE_EVENTS__OFFSET                     8
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO3_PAUSE_EVENTS__OFFSET                     7
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO2_PAUSE_EVENTS__OFFSET                     6
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO1_PAUSE_EVENTS__OFFSET                     5
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__FIFO0_PAUSE_EVENTS__OFFSET                     4
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD2__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD2__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__RSRVD2__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD2__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD2__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<2, 0xc)
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD2__MASK                       0x3
#  define SPICA_OTX_TXD_MISC_INTS__RSRVD2__OFFSET                     2
#  define SPICA_OTX_TXD_MISC_INTS__ERRINJS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_TXD_MISC_INTS__ERRINJS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__ERRINJS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__ERRINJS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__ERRINJS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXD_MISC_INTS__ERRINJS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXD_MISC_INTS__ERRINJS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__ERRINJS__OFFSET                     1
#  define SPICA_OTX_TXD_MISC_INTS__CIDS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXD_MISC_INTS__CIDS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__CIDS__READ(die, channel)         SPICA_OTX_TXD_MISC_INTS__CIDS__GET(SPICA_OTX_TXD_MISC_INTS__READ(die, channel))
#  define SPICA_OTX_TXD_MISC_INTS__CIDS__WRITE(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__CIDS__RMW(die, channel, fdata) SPICA_OTX_TXD_MISC_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_MISC_INTS__CIDS__MASK                       0x1
#  define SPICA_OTX_TXD_MISC_INTS__CIDS__OFFSET                     0

#define SPICA_OTX_TXD_FIFO_INT__ADDRESS                      0x1eb18b
#define SPICA_OTX_TXD_FIFO_INT__DEFAULT                      0x0
#define SPICA_OTX_TXD_FIFO_INT__ICOUNT                        5
#define SPICA_OTX_TXD_FIFO_INT__ISPAN                         0x800
#define SPICA_OTX_TXD_FIFO_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TXD_FIFO_INT__ADDRESS)
#define SPICA_OTX_TXD_FIFO_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TXD_FIFO_INT__ADDRESS)
#define SPICA_OTX_TXD_FIFO_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TXD_FIFO_INT__ADDRESS, (data))
#define SPICA_OTX_TXD_FIFO_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TXD_FIFO_INT__ADDRESS, (data), (mask))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_UNDERFLOW__OFFSET                     15
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_UNDERFLOW__OFFSET                     14
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_UNDERFLOW__OFFSET                     13
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_UNDERFLOW__OFFSET                     12
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_NEAR_OVERFLOW__OFFSET                     11
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_NEAR_OVERFLOW__OFFSET                     10
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_NEAR_OVERFLOW__OFFSET                     9
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_NEAR_OVERFLOW__OFFSET                     8
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_UNDERFLOW__OFFSET                     7
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_UNDERFLOW__OFFSET                     6
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_UNDERFLOW__OFFSET                     5
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_UNDERFLOW__OFFSET                     4
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO3_OVERFLOW__OFFSET                     3
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO2_OVERFLOW__OFFSET                     2
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO1_OVERFLOW__OFFSET                     1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__READ(die, channel)         SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__GET(SPICA_OTX_TXD_FIFO_INT__READ(die, channel))
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__WRITE(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__RMW(die, channel, fdata) SPICA_OTX_TXD_FIFO_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__MASK                       0x1
#  define SPICA_OTX_TXD_FIFO_INT__FIFO0_OVERFLOW__OFFSET                     0

#define SPICA_OTX_FLL_FLL_CONTROL__ADDRESS                      0x1eb1d0
#define SPICA_OTX_FLL_FLL_CONTROL__DEFAULT                      0x0
#define SPICA_OTX_FLL_FLL_CONTROL__ICOUNT                        5
#define SPICA_OTX_FLL_FLL_CONTROL__ISPAN                         0x800
#define SPICA_OTX_FLL_FLL_CONTROL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_FLL_FLL_CONTROL__ADDRESS)
#define SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_FLL_FLL_CONTROL__ADDRESS)
#define SPICA_OTX_FLL_FLL_CONTROL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_FLL_FLL_CONTROL__ADDRESS, (data))
#define SPICA_OTX_FLL_FLL_CONTROL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_FLL_FLL_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3ff) | (((uint32_t)(fdata) << 10) & 0xfc00))
#  define SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__GET(rdata)                (((rdata) >> 10) & 0x3f)
#  define SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<10, 0xfc00)
#  define SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__MASK                       0x3f
#  define SPICA_OTX_FLL_FLL_CONTROL__RSRVD1__OFFSET                     10
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV_BB__OFFSET                     9
#  define SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__PD_MODE__OFFSET                     8
#  define SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__DEBUG_EN__OFFSET                     7
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_LOAD__OFFSET                     6
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__FCW_OVERRIDE_EN__OFFSET                     5
#  define SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__KFACC_OVERRIDE_EN__OFFSET                     4
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KD__OFFSET                     3
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__CLEAR_PD_FOR_KPKF__OFFSET                     2
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__POLARITY_INV__OFFSET                     1
#  define SPICA_OTX_FLL_FLL_CONTROL__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_FLL_FLL_CONTROL__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__ENABLE__READ(die, channel)         SPICA_OTX_FLL_FLL_CONTROL__ENABLE__GET(SPICA_OTX_FLL_FLL_CONTROL__READ(die, channel))
#  define SPICA_OTX_FLL_FLL_CONTROL__ENABLE__WRITE(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__ENABLE__RMW(die, channel, fdata) SPICA_OTX_FLL_FLL_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_FLL_FLL_CONTROL__ENABLE__MASK                       0x1
#  define SPICA_OTX_FLL_FLL_CONTROL__ENABLE__OFFSET                     0

#define SPICA_OTX_FLL_INTERRUPT__ADDRESS                      0x1eb1e9
#define SPICA_OTX_FLL_INTERRUPT__DEFAULT                      0x0
#define SPICA_OTX_FLL_INTERRUPT__ICOUNT                        5
#define SPICA_OTX_FLL_INTERRUPT__ISPAN                         0x800
#define SPICA_OTX_FLL_INTERRUPT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_FLL_INTERRUPT__ADDRESS)
#define SPICA_OTX_FLL_INTERRUPT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_FLL_INTERRUPT__ADDRESS)
#define SPICA_OTX_FLL_INTERRUPT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_FLL_INTERRUPT__ADDRESS, (data))
#define SPICA_OTX_FLL_INTERRUPT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_FLL_INTERRUPT__ADDRESS, (data), (mask))
#  define SPICA_OTX_FLL_INTERRUPT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_OTX_FLL_INTERRUPT__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_OTX_FLL_INTERRUPT__RSRVD1__READ(die, channel)         SPICA_OTX_FLL_INTERRUPT__RSRVD1__GET(SPICA_OTX_FLL_INTERRUPT__READ(die, channel))
#  define SPICA_OTX_FLL_INTERRUPT__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_FLL_INTERRUPT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_OTX_FLL_INTERRUPT__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_FLL_INTERRUPT__RMW(die, (channel), (fdata)<<1, 0xfffe)
#  define SPICA_OTX_FLL_INTERRUPT__RSRVD1__MASK                       0x7fff
#  define SPICA_OTX_FLL_INTERRUPT__RSRVD1__OFFSET                     1
#  define SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__READ(die, channel)         SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__GET(SPICA_OTX_FLL_INTERRUPT__READ(die, channel))
#  define SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__WRITE(die, channel, fdata) SPICA_OTX_FLL_INTERRUPT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__RMW(die, channel, fdata) SPICA_OTX_FLL_INTERRUPT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__MASK                       0x1
#  define SPICA_OTX_FLL_INTERRUPT__FLL_UNLOCK_INT__OFFSET                     0

#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__ADDRESS                      0x1eb265
#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__DEFAULT                      0x0
#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__ICOUNT                        5
#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__ISPAN                         0x800
#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_BIAS_LDO_CNTL0_LOW__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_BIAS_LDO_CNTL0_LOW__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_BIAS_LDO_CNTL0_LOW__ADDRESS, (data))
#define SPICA_OTX_BIAS_LDO_CNTL0_LOW__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_BIAS_LDO_CNTL0_LOW__ADDRESS, (data), (mask))
#  define SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__READ(die, channel)         SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__GET(SPICA_OTX_BIAS_LDO_CNTL0_LOW__READ(die, channel))
#  define SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__WRITE(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL0_LOW__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__RMW(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL0_LOW__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__MASK                       0xff
#  define SPICA_OTX_BIAS_LDO_CNTL0_LOW__LDO_CNTL0__OFFSET                     0

#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__ADDRESS                      0x1eb266
#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__DEFAULT                      0x0
#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__ICOUNT                        5
#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__ISPAN                         0x800
#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_BIAS_LDO_CNTL0_HIGH__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_BIAS_LDO_CNTL0_HIGH__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_BIAS_LDO_CNTL0_HIGH__ADDRESS, (data))
#define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_BIAS_LDO_CNTL0_HIGH__ADDRESS, (data), (mask))
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__READ(die, channel)         SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__GET(SPICA_OTX_BIAS_LDO_CNTL0_HIGH__READ(die, channel))
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RSRVD1__OFFSET                     1
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__READ(die, channel)         SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__GET(SPICA_OTX_BIAS_LDO_CNTL0_HIGH__READ(die, channel))
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__WRITE(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__RMW(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL0_HIGH__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__MASK                       0x1
#  define SPICA_OTX_BIAS_LDO_CNTL0_HIGH__LDO_CNTL0__OFFSET                     0

#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__ADDRESS                      0x1eb267
#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__DEFAULT                      0x0
#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__ICOUNT                        5
#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__ISPAN                         0x800
#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_BIAS_LDO_CNTL1_LOW__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_BIAS_LDO_CNTL1_LOW__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_BIAS_LDO_CNTL1_LOW__ADDRESS, (data))
#define SPICA_OTX_BIAS_LDO_CNTL1_LOW__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_BIAS_LDO_CNTL1_LOW__ADDRESS, (data), (mask))
#  define SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__READ(die, channel)         SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__GET(SPICA_OTX_BIAS_LDO_CNTL1_LOW__READ(die, channel))
#  define SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__WRITE(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL1_LOW__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__RMW(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL1_LOW__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__MASK                       0xff
#  define SPICA_OTX_BIAS_LDO_CNTL1_LOW__LDO_CNTL1__OFFSET                     0

#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__ADDRESS                      0x1eb268
#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__DEFAULT                      0x0
#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__ICOUNT                        5
#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__ISPAN                         0x800
#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_BIAS_LDO_CNTL1_HIGH__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_BIAS_LDO_CNTL1_HIGH__ADDRESS)
#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_BIAS_LDO_CNTL1_HIGH__ADDRESS, (data))
#define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_BIAS_LDO_CNTL1_HIGH__ADDRESS, (data), (mask))
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__READ(die, channel)         SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__GET(SPICA_OTX_BIAS_LDO_CNTL1_HIGH__READ(die, channel))
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RSRVD1__OFFSET                     1
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__READ(die, channel)         SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__GET(SPICA_OTX_BIAS_LDO_CNTL1_HIGH__READ(die, channel))
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__WRITE(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__RMW(die, channel, fdata) SPICA_OTX_BIAS_LDO_CNTL1_HIGH__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__MASK                       0x1
#  define SPICA_OTX_BIAS_LDO_CNTL1_HIGH__LDO_CNTL1__OFFSET                     0

#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__ADDRESS                      0x1eb291
#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__DEFAULT                      0x0
#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__ICOUNT                        5
#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__ISPAN                         0x800
#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__ADDRESS)
#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__ADDRESS)
#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__ADDRESS, (data))
#define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__ADDRESS, (data), (mask))
#  define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__READ(die, channel)         SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__GET(SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__READ(die, channel))
#  define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__WRITE(die, channel, fdata) SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__RMW(die, channel, fdata) SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__MASK                       0xff
#  define SPICA_OTX_BIAS_LDO_LTCH_EN_LOW__LDO_LTCH_EN__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS                      0x1eb352
#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__OFFSET                     7
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__OFFSET                     6
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__OFFSET                     5
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__OFFSET                     4
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__OFFSET                     3
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__OFFSET                     2
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__OFFSET                     1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS                      0x1eb36a
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__GET(SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS                      0x1eb36b
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__GET(SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__MASK                       0xf
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__OFFSET                     4
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__GET(SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__MASK                       0xf
#  define SPICA_OTX_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FSM_INT__ADDRESS                      0x1eb379
#define SPICA_OTX_PLL_PLLD_FSM_INT__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FSM_INT__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FSM_INT__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FSM_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FSM_INT__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FSM_INT__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FSM_INT__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FSM_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FSM_INT__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__GET(SPICA_OTX_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__MASK                       0x3f
#  define SPICA_OTX_PLL_PLLD_FSM_INT__RSRVD1__OFFSET                     2
#  define SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__GET(SPICA_OTX_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__OFFSET                     1
#  define SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__GET(SPICA_OTX_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FSM_INTS__ADDRESS                      0x1eb37b
#define SPICA_OTX_PLL_PLLD_FSM_INTS__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FSM_INTS__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FSM_INTS__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FSM_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FSM_INTS__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FSM_INTS__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FSM_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FSM_INTS__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FSM_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FSM_INTS__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__GET(SPICA_OTX_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__MASK                       0x3f
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__RSRVD1__OFFSET                     2
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(SPICA_OTX_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__OFFSET                     1
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__READ(die, channel)         SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(SPICA_OTX_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__ADDRESS                      0x1eb398
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG0__NN_B7_0__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__ADDRESS                      0x1eb399
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG1__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG1__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG1__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG1__NN_B15_8__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__ADDRESS                      0x1eb39a
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG2__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG2__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG2__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG2__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG2__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG2__NN_B23_16__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__ADDRESS                      0x1eb39b
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG3__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG3__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG3__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RSRVD1__OFFSET                     1
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG3__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG3__NN_B24__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__ADDRESS                      0x1eb39c
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG4__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG4__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG4__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG4__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG4__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG4__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG4__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG4__DD_B7_0__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__ADDRESS                      0x1eb39d
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG5__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG5__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG5__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG5__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG5__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG5__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG5__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG5__DD_B15_8__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__ADDRESS                      0x1eb39e
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG6__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG6__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG6__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG6__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG6__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG6__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG6__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG6__DD_B23_16__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__ADDRESS                      0x1eb39f
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DEFAULT                      0x3
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG7__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG7__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG7__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG7__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__MASK                       0x3f
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RSRVD1__OFFSET                     2
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__DD_B24__OFFSET                     1
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__ADDRESS                      0x1eb3a0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_FBDSM_CFG8__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG8__ADDRESS)
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__READ(die, channel)         SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__GET(SPICA_OTX_PLL_PLLD_FBDSM_CFG8__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG8__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_FBDSM_CFG8__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__MASK                       0xff
#  define SPICA_OTX_PLL_PLLD_FBDSM_CFG8__MM__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_RST_CFG0__ADDRESS                      0x1eb3a5
#define SPICA_OTX_PLL_PLLD_RST_CFG0__DEFAULT                      0x1
#define SPICA_OTX_PLL_PLLD_RST_CFG0__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_RST_CFG0__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_RST_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_RST_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_RST_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_RST_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_RST_CFG0__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_RST_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCH__OFFSET                     7
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCF__OFFSET                     6
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCC__OFFSET                     5
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCX__OFFSET                     4
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_FCAL__OFFSET                     3
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TDC_OC__OFFSET                     2
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__FSM_TOP__OFFSET                     1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__READ(die, channel)         SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__GET(SPICA_OTX_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_RST_CFG0__PLLD_TOP__OFFSET                     0

#define SPICA_OTX_PLL_PLLD_CFG0__ADDRESS                      0x1eb3aa
#define SPICA_OTX_PLL_PLLD_CFG0__DEFAULT                      0x8
#define SPICA_OTX_PLL_PLLD_CFG0__ICOUNT                        5
#define SPICA_OTX_PLL_PLLD_CFG0__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLD_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLD_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLD_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLD_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLD_CFG0__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLD_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLD_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__GET(SPICA_OTX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__MASK                       0x7
#  define SPICA_OTX_PLL_PLLD_CFG0__RSRVD1__OFFSET                     5
#  define SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__READ(die, channel)         SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__GET(SPICA_OTX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__OFFSET                     4
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__READ(die, channel)         SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__GET(SPICA_OTX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__OFFSET                     3
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__SET(rdata, fdata)         (((rdata) & 0xf9) | (((uint32_t)(fdata) << 1) & 0x6))
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__GET(rdata)                (((rdata) >> 1) & 0x3)
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__READ(die, channel)         SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__GET(SPICA_OTX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__MASK                       0x3
#  define SPICA_OTX_PLL_PLLD_CFG0__AFIFO_THRESH__OFFSET                     1
#  define SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__READ(die, channel)         SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__GET(SPICA_OTX_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLD_CFG0__SNAPSHOT_EN__OFFSET                     0

#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__ADDRESS                      0x1eb3c5
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__ICOUNT                        5
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLA_FBDIV_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG0__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__MASK                       0x7f
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RSRVD1__OFFSET                     1
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG0__FBDIV_AUX_DIV_EN__OFFSET                     0

#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__ADDRESS                      0x1eb3c6
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__DEFAULT                      0x0
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__ICOUNT                        5
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLA_FBDIV_CFG1__ADDRESS)
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG1__ADDRESS)
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG1__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG1__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_DSM_CLK_FLIP__OFFSET                     7
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__SET(rdata, fdata)         (((rdata) & 0x9f) | (((uint32_t)(fdata) << 5) & 0x60))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__GET(rdata)                (((rdata) >> 5) & 0x3)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__MASK                       0x3
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_FRAC__OFFSET                     5
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO_2X_EN__OFFSET                     4
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG1__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__MASK                       0xf
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG1__FBDIV_AUX_DIV_RATIO__OFFSET                     0

#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__ADDRESS                      0x1eb3c8
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__DEFAULT                      0x2
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__ICOUNT                        5
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLA_FBDIV_CFG3__ADDRESS)
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG3__ADDRESS)
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG3__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLA_FBDIV_CFG3__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__SET(rdata, fdata)         (((rdata) & 0x3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<6, 0xc0)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__MASK                       0x3
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO_FRAC__OFFSET                     6
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIV_AUX_DIV_ANA_CLK_EN__OFFSET                     5
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_2X_EN__OFFSET                     4
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__READ(die, channel)         SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__GET(SPICA_OTX_PLL_PLLA_FBDIV_CFG3__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_FBDIV_CFG3__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__MASK                       0xf
#  define SPICA_OTX_PLL_PLLA_FBDIV_CFG3__FBDIVN_RATIO__OFFSET                     0

#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__ADDRESS                      0x1eb3ed
#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__DEFAULT                      0x13
#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__ICOUNT                        5
#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__ISPAN                         0x800
#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__ADDRESS)
#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__ADDRESS, (data))
#define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RSRVD1__OFFSET                     7
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_2_EN__OFFSET                     6
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_1_EN__OFFSET                     5
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_0_EN__OFFSET                     4
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG4_EQ_EN__OFFSET                     3
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG3_EQ_EN__OFFSET                     2
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG2_EQ_EN__OFFSET                     1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__READ(die, channel)         SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__GET(SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__READ(die, channel))
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__WRITE(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__RMW(die, channel, fdata) SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__MASK                       0x1
#  define SPICA_OTX_PLL_PLLA_CKA_EQ_CFG0__CKA_STG1_EQ_EN__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__ADDRESS                      0x1ed952
#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCF_FSM__OFFSET                     7
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCC_FSM__OFFSET                     6
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCX_FSM__OFFSET                     5
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCAL_FSM__OFFSET                     4
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_FCNT_FSM__OFFSET                     3
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_OC_FSM__OFFSET                     2
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TDC_ACC_FSM__OFFSET                     1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__GET(SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_CMD_CFG0__START_TOP_FSM__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS                      0x1ed96a
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__GET(SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS0__TOP_B7_0__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS                      0x1ed96b
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__GET(SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__MASK                       0xf
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RSRVD1__OFFSET                     4
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__SET(rdata, fdata)         (((rdata) & 0xf0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__GET(SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__MASK                       0xf
#  define SPICA_ERU_PLL_PLLD_FSM_STATE_SNAPSHOT_STATUS1__TOP_B11_8__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FSM_INT__ADDRESS                      0x1ed979
#define SPICA_ERU_PLL_PLLD_FSM_INT__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FSM_INT__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FSM_INT__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FSM_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FSM_INT__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FSM_INT__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FSM_INT__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FSM_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FSM_INT__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__GET(SPICA_ERU_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__MASK                       0x3f
#  define SPICA_ERU_PLL_PLLD_FSM_INT__RSRVD1__OFFSET                     2
#  define SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__GET(SPICA_ERU_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_INT__FCNT_WDT_TIMEOUT__OFFSET                     1
#  define SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__GET(SPICA_ERU_PLL_PLLD_FSM_INT__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_INT__PLL_OUT_OF_LOCK__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FSM_INTS__ADDRESS                      0x1ed97b
#define SPICA_ERU_PLL_PLLD_FSM_INTS__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FSM_INTS__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FSM_INTS__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FSM_INTS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FSM_INTS__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_INTS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FSM_INTS__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FSM_INTS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FSM_INTS__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FSM_INTS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FSM_INTS__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__GET(SPICA_ERU_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__MASK                       0x3f
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__RSRVD1__OFFSET                     2
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__GET(SPICA_ERU_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__FCNT_WDT_TIMEOUTS__OFFSET                     1
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__READ(die, channel)         SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__GET(SPICA_ERU_PLL_PLLD_FSM_INTS__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FSM_INTS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FSM_INTS__PLL_OUT_OF_LOCKS__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__ADDRESS                      0x1ed998
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG0__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG0__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG0__NN_B7_0__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__ADDRESS                      0x1ed999
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG1__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG1__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG1__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG1__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG1__NN_B15_8__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__ADDRESS                      0x1ed99a
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG2__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG2__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG2__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG2__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG2__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG2__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG2__NN_B23_16__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__ADDRESS                      0x1ed99b
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG3__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG3__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG3__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfe))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7f)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG3__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<1, 0xfe)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__MASK                       0x7f
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RSRVD1__OFFSET                     1
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG3__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG3__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG3__NN_B24__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__ADDRESS                      0x1ed99c
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG4__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG4__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG4__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG4__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG4__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG4__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG4__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG4__DD_B7_0__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__ADDRESS                      0x1ed99d
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG5__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG5__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG5__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG5__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG5__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG5__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG5__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG5__DD_B15_8__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__ADDRESS                      0x1ed99e
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG6__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG6__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG6__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG6__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG6__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG6__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG6__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG6__DD_B23_16__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__ADDRESS                      0x1ed99f
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DEFAULT                      0x3
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG7__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG7__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG7__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG7__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<2, 0xfc)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__MASK                       0x3f
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RSRVD1__OFFSET                     2
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__DD_B24__OFFSET                     1
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG7__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG7__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG7__FBDSM_TYPE__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__ADDRESS                      0x1ed9a0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_FBDSM_CFG8__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG8__ADDRESS)
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_FBDSM_CFG8__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__READ(die, channel)         SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__GET(SPICA_ERU_PLL_PLLD_FBDSM_CFG8__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG8__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_FBDSM_CFG8__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__MASK                       0xff
#  define SPICA_ERU_PLL_PLLD_FBDSM_CFG8__MM__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_RST_CFG0__ADDRESS                      0x1ed9a5
#define SPICA_ERU_PLL_PLLD_RST_CFG0__DEFAULT                      0x1
#define SPICA_ERU_PLL_PLLD_RST_CFG0__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_RST_CFG0__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_RST_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_RST_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_RST_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_RST_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_RST_CFG0__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_RST_CFG0__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCH__OFFSET                     7
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__SET(rdata, fdata)         (((rdata) & 0xbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCF__OFFSET                     6
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCC__OFFSET                     5
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCX__OFFSET                     4
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_FCAL__OFFSET                     3
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__SET(rdata, fdata)         (((rdata) & 0xfb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TDC_OC__OFFSET                     2
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__SET(rdata, fdata)         (((rdata) & 0xfd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__FSM_TOP__OFFSET                     1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__READ(die, channel)         SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__GET(SPICA_ERU_PLL_PLLD_RST_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_RST_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_RST_CFG0__PLLD_TOP__OFFSET                     0

#define SPICA_ERU_PLL_PLLD_CFG0__ADDRESS                      0x1ed9aa
#define SPICA_ERU_PLL_PLLD_CFG0__DEFAULT                      0x8
#define SPICA_ERU_PLL_PLLD_CFG0__ICOUNT                        2
#define SPICA_ERU_PLL_PLLD_CFG0__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLD_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLD_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLD_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLD_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLD_CFG0__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLD_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLD_CFG0__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__READ(die, channel)         SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__GET(SPICA_ERU_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<5, 0xe0)
#  define SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__MASK                       0x7
#  define SPICA_ERU_PLL_PLLD_CFG0__RSRVD1__OFFSET                     5
#  define SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__READ(die, channel)         SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__GET(SPICA_ERU_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_CFG0__DIV_RATIO_OVERRIDE_EN__OFFSET                     4
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__READ(die, channel)         SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__GET(SPICA_ERU_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_DOUT_OVERRIDE_EN__OFFSET                     3
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__SET(rdata, fdata)         (((rdata) & 0xf9) | (((uint32_t)(fdata) << 1) & 0x6))
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__GET(rdata)                (((rdata) >> 1) & 0x3)
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__READ(die, channel)         SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__GET(SPICA_ERU_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<1, 0x6)
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__MASK                       0x3
#  define SPICA_ERU_PLL_PLLD_CFG0__AFIFO_THRESH__OFFSET                     1
#  define SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__READ(die, channel)         SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__GET(SPICA_ERU_PLL_PLLD_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLD_CFG0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__MASK                       0x1
#  define SPICA_ERU_PLL_PLLD_CFG0__SNAPSHOT_EN__OFFSET                     0

#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__ADDRESS                      0x1ed9b7
#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__DEFAULT                      0x0
#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__ICOUNT                        2
#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__ADDRESS)
#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xf8))
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1f)
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__READ(die, channel)         SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__GET(SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RMW(die, (channel), (fdata)<<3, 0xf8)
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RMW(die, (channel), (fdata)<<3, 0xf8)
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__MASK                       0x1f
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RSRVD1__OFFSET                     3
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__SET(rdata, fdata)         (((rdata) & 0xf8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__READ(die, channel)         SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__GET(SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__READ(die, channel))
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__MASK                       0x7
#  define SPICA_ERU_PLL_PLLA_REFCKMUX_CFG0__REFCKMUX_REFMUX_SEL__OFFSET                     0

#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__ADDRESS                      0x1ed9e6
#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__DEFAULT                      0xb
#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__ICOUNT                        2
#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__ISPAN                         0x300
#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__ADDRESS)
#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__ADDRESS)
#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__ADDRESS, (data))
#define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__ADDRESS, (data), (mask))
#  define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__READ(die, channel)         SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__GET(SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__READ(die, channel))
#  define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__WRITE(die, channel, fdata) SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__RMW(die, channel, fdata) SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__MASK                       0xff
#  define SPICA_ERU_PLL_PLLA_POSTDIV_CFG1__POSTDIV_DIV_RATIO__OFFSET                     0

#define SPICA_MCU_RESET__ADDRESS                      0x1ee000
#define SPICA_MCU_RESET__DEFAULT                      0x4
#define SPICA_MCU_RESET__READ(die)                  spica_reg_read(die, SPICA_MCU_RESET__ADDRESS)
#define SPICA_MCU_RESET__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_RESET__ADDRESS, (data))
#define SPICA_MCU_RESET__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_RESET__ADDRESS, (data), (mask))
#  define SPICA_MCU_RESET__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1f) | (((uint32_t)(fdata) << 5) & 0xffe0))
#  define SPICA_MCU_RESET__RSRVD1__GET(rdata)                (((rdata) >> 5) & 0x7ff)
#  define SPICA_MCU_RESET__RSRVD1__READ(die)                SPICA_MCU_RESET__RSRVD1__GET(SPICA_MCU_RESET__READ(die))
#  define SPICA_MCU_RESET__RSRVD1__WRITE(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<5, 0xffe0)
#  define SPICA_MCU_RESET__RSRVD1__RMW(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<5, 0xffe0)
#  define SPICA_MCU_RESET__RSRVD1__MASK                       0x7ff
#  define SPICA_MCU_RESET__RSRVD1__OFFSET                     5
#  define SPICA_MCU_RESET__PROCRST_HOLD__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MCU_RESET__PROCRST_HOLD__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MCU_RESET__PROCRST_HOLD__READ(die)                SPICA_MCU_RESET__PROCRST_HOLD__GET(SPICA_MCU_RESET__READ(die))
#  define SPICA_MCU_RESET__PROCRST_HOLD__WRITE(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MCU_RESET__PROCRST_HOLD__RMW(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MCU_RESET__PROCRST_HOLD__MASK                       0x1
#  define SPICA_MCU_RESET__PROCRST_HOLD__OFFSET                     4
#  define SPICA_MCU_RESET__PWRUPRST__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MCU_RESET__PWRUPRST__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MCU_RESET__PWRUPRST__READ(die)                SPICA_MCU_RESET__PWRUPRST__GET(SPICA_MCU_RESET__READ(die))
#  define SPICA_MCU_RESET__PWRUPRST__WRITE(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_RESET__PWRUPRST__RMW(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_RESET__PWRUPRST__MASK                       0x1
#  define SPICA_MCU_RESET__PWRUPRST__OFFSET                     3
#  define SPICA_MCU_RESET__SPIRST__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MCU_RESET__SPIRST__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MCU_RESET__SPIRST__READ(die)                SPICA_MCU_RESET__SPIRST__GET(SPICA_MCU_RESET__READ(die))
#  define SPICA_MCU_RESET__SPIRST__WRITE(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_RESET__SPIRST__RMW(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_RESET__SPIRST__MASK                       0x1
#  define SPICA_MCU_RESET__SPIRST__OFFSET                     2
#  define SPICA_MCU_RESET__IPRST__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_RESET__IPRST__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_RESET__IPRST__READ(die)                SPICA_MCU_RESET__IPRST__GET(SPICA_MCU_RESET__READ(die))
#  define SPICA_MCU_RESET__IPRST__WRITE(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_RESET__IPRST__RMW(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_RESET__IPRST__MASK                       0x1
#  define SPICA_MCU_RESET__IPRST__OFFSET                     1
#  define SPICA_MCU_RESET__PROCRST__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_RESET__PROCRST__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_RESET__PROCRST__READ(die)                SPICA_MCU_RESET__PROCRST__GET(SPICA_MCU_RESET__READ(die))
#  define SPICA_MCU_RESET__PROCRST__WRITE(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_RESET__PROCRST__RMW(die, fdata)           SPICA_MCU_RESET__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_RESET__PROCRST__MASK                       0x1
#  define SPICA_MCU_RESET__PROCRST__OFFSET                     0

#define SPICA_MCU_GEN_CFG__ADDRESS                      0x1ee001
#define SPICA_MCU_GEN_CFG__DEFAULT                      0xc000
#define SPICA_MCU_GEN_CFG__READ(die)                  spica_reg_read(die, SPICA_MCU_GEN_CFG__ADDRESS)
#define SPICA_MCU_GEN_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_GEN_CFG__ADDRESS, (data))
#define SPICA_MCU_GEN_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_GEN_CFG__ADDRESS, (data), (mask))
#  define SPICA_MCU_GEN_CFG__IRAM_SEC_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_GEN_CFG__IRAM_SEC_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_GEN_CFG__IRAM_SEC_EN__READ(die)                SPICA_MCU_GEN_CFG__IRAM_SEC_EN__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__IRAM_SEC_EN__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_GEN_CFG__IRAM_SEC_EN__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_GEN_CFG__IRAM_SEC_EN__MASK                       0x1
#  define SPICA_MCU_GEN_CFG__IRAM_SEC_EN__OFFSET                     15
#  define SPICA_MCU_GEN_CFG__DRAM_SEC_EN__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MCU_GEN_CFG__DRAM_SEC_EN__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MCU_GEN_CFG__DRAM_SEC_EN__READ(die)                SPICA_MCU_GEN_CFG__DRAM_SEC_EN__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__DRAM_SEC_EN__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_GEN_CFG__DRAM_SEC_EN__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_GEN_CFG__DRAM_SEC_EN__MASK                       0x1
#  define SPICA_MCU_GEN_CFG__DRAM_SEC_EN__OFFSET                     14
#  define SPICA_MCU_GEN_CFG__PDEBUG_EN__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MCU_GEN_CFG__PDEBUG_EN__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MCU_GEN_CFG__PDEBUG_EN__READ(die)                SPICA_MCU_GEN_CFG__PDEBUG_EN__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__PDEBUG_EN__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_GEN_CFG__PDEBUG_EN__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_GEN_CFG__PDEBUG_EN__MASK                       0x1
#  define SPICA_MCU_GEN_CFG__PDEBUG_EN__OFFSET                     13
#  define SPICA_MCU_GEN_CFG__STATVECTOR_SEL__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MCU_GEN_CFG__STATVECTOR_SEL__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MCU_GEN_CFG__STATVECTOR_SEL__READ(die)                SPICA_MCU_GEN_CFG__STATVECTOR_SEL__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__STATVECTOR_SEL__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_GEN_CFG__STATVECTOR_SEL__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_GEN_CFG__STATVECTOR_SEL__MASK                       0x1
#  define SPICA_MCU_GEN_CFG__STATVECTOR_SEL__OFFSET                     12
#  define SPICA_MCU_GEN_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xf007) | (((uint32_t)(fdata) << 3) & 0xff8))
#  define SPICA_MCU_GEN_CFG__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1ff)
#  define SPICA_MCU_GEN_CFG__RSRVD1__READ(die)                SPICA_MCU_GEN_CFG__RSRVD1__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__RSRVD1__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<3, 0xff8)
#  define SPICA_MCU_GEN_CFG__RSRVD1__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<3, 0xff8)
#  define SPICA_MCU_GEN_CFG__RSRVD1__MASK                       0x1ff
#  define SPICA_MCU_GEN_CFG__RSRVD1__OFFSET                     3
#  define SPICA_MCU_GEN_CFG__INIT_IRAM__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MCU_GEN_CFG__INIT_IRAM__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MCU_GEN_CFG__INIT_IRAM__READ(die)                SPICA_MCU_GEN_CFG__INIT_IRAM__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__INIT_IRAM__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_GEN_CFG__INIT_IRAM__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_GEN_CFG__INIT_IRAM__MASK                       0x1
#  define SPICA_MCU_GEN_CFG__INIT_IRAM__OFFSET                     2
#  define SPICA_MCU_GEN_CFG__INIT_DRAM__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_GEN_CFG__INIT_DRAM__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_GEN_CFG__INIT_DRAM__READ(die)                SPICA_MCU_GEN_CFG__INIT_DRAM__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__INIT_DRAM__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_GEN_CFG__INIT_DRAM__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_GEN_CFG__INIT_DRAM__MASK                       0x1
#  define SPICA_MCU_GEN_CFG__INIT_DRAM__OFFSET                     1
#  define SPICA_MCU_GEN_CFG__RUNSTALL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_GEN_CFG__RUNSTALL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_GEN_CFG__RUNSTALL__READ(die)                SPICA_MCU_GEN_CFG__RUNSTALL__GET(SPICA_MCU_GEN_CFG__READ(die))
#  define SPICA_MCU_GEN_CFG__RUNSTALL__WRITE(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_GEN_CFG__RUNSTALL__RMW(die, fdata)           SPICA_MCU_GEN_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_GEN_CFG__RUNSTALL__MASK                       0x1
#  define SPICA_MCU_GEN_CFG__RUNSTALL__OFFSET                     0

#define SPICA_MCU_IRAM_INIT_CFG__ADDRESS                      0x1ee004
#define SPICA_MCU_IRAM_INIT_CFG__DEFAULT                      0x8000
#define SPICA_MCU_IRAM_INIT_CFG__READ(die)                  spica_reg_read(die, SPICA_MCU_IRAM_INIT_CFG__ADDRESS)
#define SPICA_MCU_IRAM_INIT_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_IRAM_INIT_CFG__ADDRESS, (data))
#define SPICA_MCU_IRAM_INIT_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_IRAM_INIT_CFG__ADDRESS, (data), (mask))
#  define SPICA_MCU_IRAM_INIT_CFG__CNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_IRAM_INIT_CFG__CNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_IRAM_INIT_CFG__CNT__READ(die)                SPICA_MCU_IRAM_INIT_CFG__CNT__GET(SPICA_MCU_IRAM_INIT_CFG__READ(die))
#  define SPICA_MCU_IRAM_INIT_CFG__CNT__WRITE(die, fdata)           SPICA_MCU_IRAM_INIT_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_IRAM_INIT_CFG__CNT__RMW(die, fdata)           SPICA_MCU_IRAM_INIT_CFG__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_IRAM_INIT_CFG__CNT__MASK                       0xffff
#  define SPICA_MCU_IRAM_INIT_CFG__CNT__OFFSET                     0

#define SPICA_MCU_DRAM_INIT_CFG__ADDRESS                      0x1ee005
#define SPICA_MCU_DRAM_INIT_CFG__DEFAULT                      0x2000
#define SPICA_MCU_DRAM_INIT_CFG__READ(die)                  spica_reg_read(die, SPICA_MCU_DRAM_INIT_CFG__ADDRESS)
#define SPICA_MCU_DRAM_INIT_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_DRAM_INIT_CFG__ADDRESS, (data))
#define SPICA_MCU_DRAM_INIT_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_DRAM_INIT_CFG__ADDRESS, (data), (mask))
#  define SPICA_MCU_DRAM_INIT_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_DRAM_INIT_CFG__RSRVD1__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_DRAM_INIT_CFG__RSRVD1__READ(die)                SPICA_MCU_DRAM_INIT_CFG__RSRVD1__GET(SPICA_MCU_DRAM_INIT_CFG__READ(die))
#  define SPICA_MCU_DRAM_INIT_CFG__RSRVD1__WRITE(die, fdata)           SPICA_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_DRAM_INIT_CFG__RSRVD1__RMW(die, fdata)           SPICA_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_DRAM_INIT_CFG__RSRVD1__MASK                       0x1
#  define SPICA_MCU_DRAM_INIT_CFG__RSRVD1__OFFSET                     15
#  define SPICA_MCU_DRAM_INIT_CFG__CNT__SET(rdata, fdata)         (((rdata) & 0x8000) | (((uint32_t)(fdata) << 0) & 0x7fff))
#  define SPICA_MCU_DRAM_INIT_CFG__CNT__GET(rdata)                (((rdata) >> 0) & 0x7fff)
#  define SPICA_MCU_DRAM_INIT_CFG__CNT__READ(die)                SPICA_MCU_DRAM_INIT_CFG__CNT__GET(SPICA_MCU_DRAM_INIT_CFG__READ(die))
#  define SPICA_MCU_DRAM_INIT_CFG__CNT__WRITE(die, fdata)           SPICA_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SPICA_MCU_DRAM_INIT_CFG__CNT__RMW(die, fdata)           SPICA_MCU_DRAM_INIT_CFG__RMW(die, (fdata)<<0, 0x7fff)
#  define SPICA_MCU_DRAM_INIT_CFG__CNT__MASK                       0x7fff
#  define SPICA_MCU_DRAM_INIT_CFG__CNT__OFFSET                     0

#define SPICA_MCU_MDIO_CFG__ADDRESS                      0x1ee006
#define SPICA_MCU_MDIO_CFG__DEFAULT                      0x0
#define SPICA_MCU_MDIO_CFG__READ(die)                  spica_reg_read(die, SPICA_MCU_MDIO_CFG__ADDRESS)
#define SPICA_MCU_MDIO_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_MDIO_CFG__ADDRESS, (data))
#define SPICA_MCU_MDIO_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_MDIO_CFG__ADDRESS, (data), (mask))
#  define SPICA_MCU_MDIO_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SPICA_MCU_MDIO_CFG__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SPICA_MCU_MDIO_CFG__RSRVD1__READ(die)                SPICA_MCU_MDIO_CFG__RSRVD1__GET(SPICA_MCU_MDIO_CFG__READ(die))
#  define SPICA_MCU_MDIO_CFG__RSRVD1__WRITE(die, fdata)           SPICA_MCU_MDIO_CFG__RMW(die, (fdata)<<2, 0xfffc)
#  define SPICA_MCU_MDIO_CFG__RSRVD1__RMW(die, fdata)           SPICA_MCU_MDIO_CFG__RMW(die, (fdata)<<2, 0xfffc)
#  define SPICA_MCU_MDIO_CFG__RSRVD1__MASK                       0x3fff
#  define SPICA_MCU_MDIO_CFG__RSRVD1__OFFSET                     2
#  define SPICA_MCU_MDIO_CFG__UWREN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_MDIO_CFG__UWREN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_MDIO_CFG__UWREN__READ(die)                SPICA_MCU_MDIO_CFG__UWREN__GET(SPICA_MCU_MDIO_CFG__READ(die))
#  define SPICA_MCU_MDIO_CFG__UWREN__WRITE(die, fdata)           SPICA_MCU_MDIO_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_MDIO_CFG__UWREN__RMW(die, fdata)           SPICA_MCU_MDIO_CFG__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_MDIO_CFG__UWREN__MASK                       0x1
#  define SPICA_MCU_MDIO_CFG__UWREN__OFFSET                     1
#  define SPICA_MCU_MDIO_CFG__WR_BURST__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_MDIO_CFG__WR_BURST__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_MDIO_CFG__WR_BURST__READ(die)                SPICA_MCU_MDIO_CFG__WR_BURST__GET(SPICA_MCU_MDIO_CFG__READ(die))
#  define SPICA_MCU_MDIO_CFG__WR_BURST__WRITE(die, fdata)           SPICA_MCU_MDIO_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_MDIO_CFG__WR_BURST__RMW(die, fdata)           SPICA_MCU_MDIO_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_MDIO_CFG__WR_BURST__MASK                       0x1
#  define SPICA_MCU_MDIO_CFG__WR_BURST__OFFSET                     0

#define SPICA_MCU_TAP_SELECT_CFG__ADDRESS                      0x1ee007
#define SPICA_MCU_TAP_SELECT_CFG__DEFAULT                      0x0
#define SPICA_MCU_TAP_SELECT_CFG__READ(die)                  spica_reg_read(die, SPICA_MCU_TAP_SELECT_CFG__ADDRESS)
#define SPICA_MCU_TAP_SELECT_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_TAP_SELECT_CFG__ADDRESS, (data))
#define SPICA_MCU_TAP_SELECT_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_TAP_SELECT_CFG__ADDRESS, (data), (mask))
#  define SPICA_MCU_TAP_SELECT_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_MCU_TAP_SELECT_CFG__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_MCU_TAP_SELECT_CFG__RSRVD1__READ(die)                SPICA_MCU_TAP_SELECT_CFG__RSRVD1__GET(SPICA_MCU_TAP_SELECT_CFG__READ(die))
#  define SPICA_MCU_TAP_SELECT_CFG__RSRVD1__WRITE(die, fdata)           SPICA_MCU_TAP_SELECT_CFG__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_MCU_TAP_SELECT_CFG__RSRVD1__RMW(die, fdata)           SPICA_MCU_TAP_SELECT_CFG__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_MCU_TAP_SELECT_CFG__RSRVD1__MASK                       0x7fff
#  define SPICA_MCU_TAP_SELECT_CFG__RSRVD1__OFFSET                     1
#  define SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__READ(die)                SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__GET(SPICA_MCU_TAP_SELECT_CFG__READ(die))
#  define SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__WRITE(die, fdata)           SPICA_MCU_TAP_SELECT_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__RMW(die, fdata)           SPICA_MCU_TAP_SELECT_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__MASK                       0x1
#  define SPICA_MCU_TAP_SELECT_CFG__TAP_SELECT__OFFSET                     0

#define SPICA_MCU_MBOX_CFG__ADDRESS                      0x1ee00a
#define SPICA_MCU_MBOX_CFG__DEFAULT                      0x0
#define SPICA_MCU_MBOX_CFG__READ(die)                  spica_reg_read(die, SPICA_MCU_MBOX_CFG__ADDRESS)
#define SPICA_MCU_MBOX_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_MBOX_CFG__ADDRESS, (data))
#define SPICA_MCU_MBOX_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_MBOX_CFG__ADDRESS, (data), (mask))
#  define SPICA_MCU_MBOX_CFG__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_MCU_MBOX_CFG__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_MCU_MBOX_CFG__RSRVD1__READ(die)                SPICA_MCU_MBOX_CFG__RSRVD1__GET(SPICA_MCU_MBOX_CFG__READ(die))
#  define SPICA_MCU_MBOX_CFG__RSRVD1__WRITE(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<13, 0xe000)
#  define SPICA_MCU_MBOX_CFG__RSRVD1__RMW(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<13, 0xe000)
#  define SPICA_MCU_MBOX_CFG__RSRVD1__MASK                       0x7
#  define SPICA_MCU_MBOX_CFG__RSRVD1__OFFSET                     13
#  define SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__READ(die)                SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__GET(SPICA_MCU_MBOX_CFG__READ(die))
#  define SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__WRITE(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__RMW(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<8, 0x1f00)
#  define SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__MASK                       0x1f
#  define SPICA_MCU_MBOX_CFG__TX_INT_THRESHOLD__OFFSET                     8
#  define SPICA_MCU_MBOX_CFG__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_MCU_MBOX_CFG__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_MCU_MBOX_CFG__RSRVD2__READ(die)                SPICA_MCU_MBOX_CFG__RSRVD2__GET(SPICA_MCU_MBOX_CFG__READ(die))
#  define SPICA_MCU_MBOX_CFG__RSRVD2__WRITE(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<5, 0xe0)
#  define SPICA_MCU_MBOX_CFG__RSRVD2__RMW(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<5, 0xe0)
#  define SPICA_MCU_MBOX_CFG__RSRVD2__MASK                       0x7
#  define SPICA_MCU_MBOX_CFG__RSRVD2__OFFSET                     5
#  define SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__READ(die)                SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__GET(SPICA_MCU_MBOX_CFG__READ(die))
#  define SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__WRITE(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__RMW(die, fdata)           SPICA_MCU_MBOX_CFG__RMW(die, (fdata)<<0, 0x1f)
#  define SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__MASK                       0x1f
#  define SPICA_MCU_MBOX_CFG__RX_INT_THRESHOLD__OFFSET                     0

#define SPICA_MCU_MBOX_STATUS__ADDRESS                      0x1ee00b
#define SPICA_MCU_MBOX_STATUS__DEFAULT                      0x0
#define SPICA_MCU_MBOX_STATUS__READ(die)                  spica_reg_read(die, SPICA_MCU_MBOX_STATUS__ADDRESS)
#define SPICA_MCU_MBOX_STATUS__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_MBOX_STATUS__ADDRESS, (data))
#define SPICA_MCU_MBOX_STATUS__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_MBOX_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MCU_MBOX_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_MCU_MBOX_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_MCU_MBOX_STATUS__RSRVD1__READ(die)                SPICA_MCU_MBOX_STATUS__RSRVD1__GET(SPICA_MCU_MBOX_STATUS__READ(die))
#  define SPICA_MCU_MBOX_STATUS__RSRVD1__WRITE(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<13, 0xe000)
#  define SPICA_MCU_MBOX_STATUS__RSRVD1__RMW(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<13, 0xe000)
#  define SPICA_MCU_MBOX_STATUS__RSRVD1__MASK                       0x7
#  define SPICA_MCU_MBOX_STATUS__RSRVD1__OFFSET                     13
#  define SPICA_MCU_MBOX_STATUS__TXCNT__SET(rdata, fdata)         (((rdata) & 0xe0ff) | (((uint32_t)(fdata) << 8) & 0x1f00))
#  define SPICA_MCU_MBOX_STATUS__TXCNT__GET(rdata)                (((rdata) >> 8) & 0x1f)
#  define SPICA_MCU_MBOX_STATUS__TXCNT__READ(die)                SPICA_MCU_MBOX_STATUS__TXCNT__GET(SPICA_MCU_MBOX_STATUS__READ(die))
#  define SPICA_MCU_MBOX_STATUS__TXCNT__WRITE(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<8, 0x1f00)
#  define SPICA_MCU_MBOX_STATUS__TXCNT__RMW(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<8, 0x1f00)
#  define SPICA_MCU_MBOX_STATUS__TXCNT__MASK                       0x1f
#  define SPICA_MCU_MBOX_STATUS__TXCNT__OFFSET                     8
#  define SPICA_MCU_MBOX_STATUS__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_MCU_MBOX_STATUS__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_MCU_MBOX_STATUS__RSRVD2__READ(die)                SPICA_MCU_MBOX_STATUS__RSRVD2__GET(SPICA_MCU_MBOX_STATUS__READ(die))
#  define SPICA_MCU_MBOX_STATUS__RSRVD2__WRITE(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<5, 0xe0)
#  define SPICA_MCU_MBOX_STATUS__RSRVD2__RMW(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<5, 0xe0)
#  define SPICA_MCU_MBOX_STATUS__RSRVD2__MASK                       0x7
#  define SPICA_MCU_MBOX_STATUS__RSRVD2__OFFSET                     5
#  define SPICA_MCU_MBOX_STATUS__RXCNT__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_MCU_MBOX_STATUS__RXCNT__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_MCU_MBOX_STATUS__RXCNT__READ(die)                SPICA_MCU_MBOX_STATUS__RXCNT__GET(SPICA_MCU_MBOX_STATUS__READ(die))
#  define SPICA_MCU_MBOX_STATUS__RXCNT__WRITE(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<0, 0x1f)
#  define SPICA_MCU_MBOX_STATUS__RXCNT__RMW(die, fdata)           SPICA_MCU_MBOX_STATUS__RMW(die, (fdata)<<0, 0x1f)
#  define SPICA_MCU_MBOX_STATUS__RXCNT__MASK                       0x1f
#  define SPICA_MCU_MBOX_STATUS__RXCNT__OFFSET                     0

#define SPICA_MCU_MBOX_INTE__ADDRESS                      0x1ee00d
#define SPICA_MCU_MBOX_INTE__DEFAULT                      0x0
#define SPICA_MCU_MBOX_INTE__READ(die)                  spica_reg_read(die, SPICA_MCU_MBOX_INTE__ADDRESS)
#define SPICA_MCU_MBOX_INTE__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_MBOX_INTE__ADDRESS, (data))
#define SPICA_MCU_MBOX_INTE__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_MBOX_INTE__ADDRESS, (data), (mask))
#  define SPICA_MCU_MBOX_INTE__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_MCU_MBOX_INTE__RSRVD1__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_MCU_MBOX_INTE__RSRVD1__READ(die)                SPICA_MCU_MBOX_INTE__RSRVD1__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__RSRVD1__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<13, 0xe000)
#  define SPICA_MCU_MBOX_INTE__RSRVD1__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<13, 0xe000)
#  define SPICA_MCU_MBOX_INTE__RSRVD1__MASK                       0x7
#  define SPICA_MCU_MBOX_INTE__RSRVD1__OFFSET                     13
#  define SPICA_MCU_MBOX_INTE__TX_OFLOWE__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MCU_MBOX_INTE__TX_OFLOWE__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MCU_MBOX_INTE__TX_OFLOWE__READ(die)                SPICA_MCU_MBOX_INTE__TX_OFLOWE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__TX_OFLOWE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_MBOX_INTE__TX_OFLOWE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_MBOX_INTE__TX_OFLOWE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__TX_OFLOWE__OFFSET                     12
#  define SPICA_MCU_MBOX_INTE__TX_UFLOWE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MCU_MBOX_INTE__TX_UFLOWE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MCU_MBOX_INTE__TX_UFLOWE__READ(die)                SPICA_MCU_MBOX_INTE__TX_UFLOWE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__TX_UFLOWE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MCU_MBOX_INTE__TX_UFLOWE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MCU_MBOX_INTE__TX_UFLOWE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__TX_UFLOWE__OFFSET                     11
#  define SPICA_MCU_MBOX_INTE__TX_FULLE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_MCU_MBOX_INTE__TX_FULLE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_MCU_MBOX_INTE__TX_FULLE__READ(die)                SPICA_MCU_MBOX_INTE__TX_FULLE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__TX_FULLE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_MCU_MBOX_INTE__TX_FULLE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_MCU_MBOX_INTE__TX_FULLE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__TX_FULLE__OFFSET                     10
#  define SPICA_MCU_MBOX_INTE__TX_EMPTYE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MCU_MBOX_INTE__TX_EMPTYE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MCU_MBOX_INTE__TX_EMPTYE__READ(die)                SPICA_MCU_MBOX_INTE__TX_EMPTYE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__TX_EMPTYE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_MCU_MBOX_INTE__TX_EMPTYE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_MCU_MBOX_INTE__TX_EMPTYE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__TX_EMPTYE__OFFSET                     9
#  define SPICA_MCU_MBOX_INTE__TX_CNTE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MCU_MBOX_INTE__TX_CNTE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MCU_MBOX_INTE__TX_CNTE__READ(die)                SPICA_MCU_MBOX_INTE__TX_CNTE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__TX_CNTE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MCU_MBOX_INTE__TX_CNTE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MCU_MBOX_INTE__TX_CNTE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__TX_CNTE__OFFSET                     8
#  define SPICA_MCU_MBOX_INTE__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xff1f) | (((uint32_t)(fdata) << 5) & 0xe0))
#  define SPICA_MCU_MBOX_INTE__RSRVD2__GET(rdata)                (((rdata) >> 5) & 0x7)
#  define SPICA_MCU_MBOX_INTE__RSRVD2__READ(die)                SPICA_MCU_MBOX_INTE__RSRVD2__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__RSRVD2__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<5, 0xe0)
#  define SPICA_MCU_MBOX_INTE__RSRVD2__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<5, 0xe0)
#  define SPICA_MCU_MBOX_INTE__RSRVD2__MASK                       0x7
#  define SPICA_MCU_MBOX_INTE__RSRVD2__OFFSET                     5
#  define SPICA_MCU_MBOX_INTE__RX_OFLOWE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MCU_MBOX_INTE__RX_OFLOWE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MCU_MBOX_INTE__RX_OFLOWE__READ(die)                SPICA_MCU_MBOX_INTE__RX_OFLOWE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__RX_OFLOWE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MCU_MBOX_INTE__RX_OFLOWE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MCU_MBOX_INTE__RX_OFLOWE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__RX_OFLOWE__OFFSET                     4
#  define SPICA_MCU_MBOX_INTE__RX_UFLOWE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MCU_MBOX_INTE__RX_UFLOWE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MCU_MBOX_INTE__RX_UFLOWE__READ(die)                SPICA_MCU_MBOX_INTE__RX_UFLOWE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__RX_UFLOWE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_MBOX_INTE__RX_UFLOWE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_MBOX_INTE__RX_UFLOWE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__RX_UFLOWE__OFFSET                     3
#  define SPICA_MCU_MBOX_INTE__RX_FULLE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MCU_MBOX_INTE__RX_FULLE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MCU_MBOX_INTE__RX_FULLE__READ(die)                SPICA_MCU_MBOX_INTE__RX_FULLE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__RX_FULLE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_MBOX_INTE__RX_FULLE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_MBOX_INTE__RX_FULLE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__RX_FULLE__OFFSET                     2
#  define SPICA_MCU_MBOX_INTE__RX_EMPTYE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_MBOX_INTE__RX_EMPTYE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_MBOX_INTE__RX_EMPTYE__READ(die)                SPICA_MCU_MBOX_INTE__RX_EMPTYE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__RX_EMPTYE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_MBOX_INTE__RX_EMPTYE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_MBOX_INTE__RX_EMPTYE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__RX_EMPTYE__OFFSET                     1
#  define SPICA_MCU_MBOX_INTE__RX_CNTE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_MBOX_INTE__RX_CNTE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_MBOX_INTE__RX_CNTE__READ(die)                SPICA_MCU_MBOX_INTE__RX_CNTE__GET(SPICA_MCU_MBOX_INTE__READ(die))
#  define SPICA_MCU_MBOX_INTE__RX_CNTE__WRITE(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_MBOX_INTE__RX_CNTE__RMW(die, fdata)           SPICA_MCU_MBOX_INTE__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_MBOX_INTE__RX_CNTE__MASK                       0x1
#  define SPICA_MCU_MBOX_INTE__RX_CNTE__OFFSET                     0

#define SPICA_MCU_MDIO_AERR_STATUS0__ADDRESS                      0x1ee02a
#define SPICA_MCU_MDIO_AERR_STATUS0__DEFAULT                      0x0
#define SPICA_MCU_MDIO_AERR_STATUS0__READ(die)                  spica_reg_read(die, SPICA_MCU_MDIO_AERR_STATUS0__ADDRESS)
#define SPICA_MCU_MDIO_AERR_STATUS0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_MDIO_AERR_STATUS0__ADDRESS, (data))
#define SPICA_MCU_MDIO_AERR_STATUS0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_MDIO_AERR_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_MCU_MDIO_AERR_STATUS0__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_MDIO_AERR_STATUS0__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_MDIO_AERR_STATUS0__ADDR__READ(die)                SPICA_MCU_MDIO_AERR_STATUS0__ADDR__GET(SPICA_MCU_MDIO_AERR_STATUS0__READ(die))
#  define SPICA_MCU_MDIO_AERR_STATUS0__ADDR__WRITE(die, fdata)           SPICA_MCU_MDIO_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_MDIO_AERR_STATUS0__ADDR__RMW(die, fdata)           SPICA_MCU_MDIO_AERR_STATUS0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_MDIO_AERR_STATUS0__ADDR__MASK                       0xffff
#  define SPICA_MCU_MDIO_AERR_STATUS0__ADDR__OFFSET                     0

#define SPICA_MCU_MDIO_AERR_STATUS1__ADDRESS                      0x1ee02b
#define SPICA_MCU_MDIO_AERR_STATUS1__DEFAULT                      0x0
#define SPICA_MCU_MDIO_AERR_STATUS1__READ(die)                  spica_reg_read(die, SPICA_MCU_MDIO_AERR_STATUS1__ADDRESS)
#define SPICA_MCU_MDIO_AERR_STATUS1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_MDIO_AERR_STATUS1__ADDRESS, (data))
#define SPICA_MCU_MDIO_AERR_STATUS1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_MDIO_AERR_STATUS1__ADDRESS, (data), (mask))
#  define SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__READ(die)                SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__GET(SPICA_MCU_MDIO_AERR_STATUS1__READ(die))
#  define SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__WRITE(die, fdata)           SPICA_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<2, 0xfffc)
#  define SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__RMW(die, fdata)           SPICA_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<2, 0xfffc)
#  define SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__MASK                       0x3fff
#  define SPICA_MCU_MDIO_AERR_STATUS1__RSRVD1__OFFSET                     2
#  define SPICA_MCU_MDIO_AERR_STATUS1__ADDR__SET(rdata, fdata)         (((rdata) & 0xfffc) | (((uint32_t)(fdata) << 0) & 0x3))
#  define SPICA_MCU_MDIO_AERR_STATUS1__ADDR__GET(rdata)                (((rdata) >> 0) & 0x3)
#  define SPICA_MCU_MDIO_AERR_STATUS1__ADDR__READ(die)                SPICA_MCU_MDIO_AERR_STATUS1__ADDR__GET(SPICA_MCU_MDIO_AERR_STATUS1__READ(die))
#  define SPICA_MCU_MDIO_AERR_STATUS1__ADDR__WRITE(die, fdata)           SPICA_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SPICA_MCU_MDIO_AERR_STATUS1__ADDR__RMW(die, fdata)           SPICA_MCU_MDIO_AERR_STATUS1__RMW(die, (fdata)<<0, 0x3)
#  define SPICA_MCU_MDIO_AERR_STATUS1__ADDR__MASK                       0x3
#  define SPICA_MCU_MDIO_AERR_STATUS1__ADDR__OFFSET                     0

#define SPICA_MCU_INBPIF_CFG0__ADDRESS                      0x1ee033
#define SPICA_MCU_INBPIF_CFG0__DEFAULT                      0x81
#define SPICA_MCU_INBPIF_CFG0__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_CFG0__ADDRESS)
#define SPICA_MCU_INBPIF_CFG0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_CFG0__ADDRESS, (data))
#define SPICA_MCU_INBPIF_CFG0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_CFG0__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_CFG0__PRIORITY__SET(rdata, fdata)         (((rdata) & 0x3fff) | (((uint32_t)(fdata) << 14) & 0xc000))
#  define SPICA_MCU_INBPIF_CFG0__PRIORITY__GET(rdata)                (((rdata) >> 14) & 0x3)
#  define SPICA_MCU_INBPIF_CFG0__PRIORITY__READ(die)                SPICA_MCU_INBPIF_CFG0__PRIORITY__GET(SPICA_MCU_INBPIF_CFG0__READ(die))
#  define SPICA_MCU_INBPIF_CFG0__PRIORITY__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG0__RMW(die, (fdata)<<14, 0xc000)
#  define SPICA_MCU_INBPIF_CFG0__PRIORITY__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG0__RMW(die, (fdata)<<14, 0xc000)
#  define SPICA_MCU_INBPIF_CFG0__PRIORITY__MASK                       0x3
#  define SPICA_MCU_INBPIF_CFG0__PRIORITY__OFFSET                     14
#  define SPICA_MCU_INBPIF_CFG0__ID__SET(rdata, fdata)         (((rdata) & 0xc0ff) | (((uint32_t)(fdata) << 8) & 0x3f00))
#  define SPICA_MCU_INBPIF_CFG0__ID__GET(rdata)                (((rdata) >> 8) & 0x3f)
#  define SPICA_MCU_INBPIF_CFG0__ID__READ(die)                SPICA_MCU_INBPIF_CFG0__ID__GET(SPICA_MCU_INBPIF_CFG0__READ(die))
#  define SPICA_MCU_INBPIF_CFG0__ID__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG0__RMW(die, (fdata)<<8, 0x3f00)
#  define SPICA_MCU_INBPIF_CFG0__ID__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG0__RMW(die, (fdata)<<8, 0x3f00)
#  define SPICA_MCU_INBPIF_CFG0__ID__MASK                       0x3f
#  define SPICA_MCU_INBPIF_CFG0__ID__OFFSET                     8
#  define SPICA_MCU_INBPIF_CFG0__CNTL__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MCU_INBPIF_CFG0__CNTL__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MCU_INBPIF_CFG0__CNTL__READ(die)                SPICA_MCU_INBPIF_CFG0__CNTL__GET(SPICA_MCU_INBPIF_CFG0__READ(die))
#  define SPICA_MCU_INBPIF_CFG0__CNTL__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG0__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_MCU_INBPIF_CFG0__CNTL__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG0__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_MCU_INBPIF_CFG0__CNTL__MASK                       0xff
#  define SPICA_MCU_INBPIF_CFG0__CNTL__OFFSET                     0

#define SPICA_MCU_INBPIF_CFG1__ADDRESS                      0x1ee034
#define SPICA_MCU_INBPIF_CFG1__DEFAULT                      0x400
#define SPICA_MCU_INBPIF_CFG1__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_CFG1__ADDRESS)
#define SPICA_MCU_INBPIF_CFG1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_CFG1__ADDRESS, (data))
#define SPICA_MCU_INBPIF_CFG1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_CFG1__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_CFG1__RDENA__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_INBPIF_CFG1__RDENA__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_INBPIF_CFG1__RDENA__READ(die)                SPICA_MCU_INBPIF_CFG1__RDENA__GET(SPICA_MCU_INBPIF_CFG1__READ(die))
#  define SPICA_MCU_INBPIF_CFG1__RDENA__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_INBPIF_CFG1__RDENA__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_INBPIF_CFG1__RDENA__MASK                       0x1
#  define SPICA_MCU_INBPIF_CFG1__RDENA__OFFSET                     15
#  define SPICA_MCU_INBPIF_CFG1__BEOVR__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MCU_INBPIF_CFG1__BEOVR__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MCU_INBPIF_CFG1__BEOVR__READ(die)                SPICA_MCU_INBPIF_CFG1__BEOVR__GET(SPICA_MCU_INBPIF_CFG1__READ(die))
#  define SPICA_MCU_INBPIF_CFG1__BEOVR__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_INBPIF_CFG1__BEOVR__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_INBPIF_CFG1__BEOVR__MASK                       0x1
#  define SPICA_MCU_INBPIF_CFG1__BEOVR__OFFSET                     14
#  define SPICA_MCU_INBPIF_CFG1__IDOVR__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MCU_INBPIF_CFG1__IDOVR__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MCU_INBPIF_CFG1__IDOVR__READ(die)                SPICA_MCU_INBPIF_CFG1__IDOVR__GET(SPICA_MCU_INBPIF_CFG1__READ(die))
#  define SPICA_MCU_INBPIF_CFG1__IDOVR__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_INBPIF_CFG1__IDOVR__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_INBPIF_CFG1__IDOVR__MASK                       0x1
#  define SPICA_MCU_INBPIF_CFG1__IDOVR__OFFSET                     13
#  define SPICA_MCU_INBPIF_CFG1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MCU_INBPIF_CFG1__RSRVD1__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MCU_INBPIF_CFG1__RSRVD1__READ(die)                SPICA_MCU_INBPIF_CFG1__RSRVD1__GET(SPICA_MCU_INBPIF_CFG1__READ(die))
#  define SPICA_MCU_INBPIF_CFG1__RSRVD1__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_INBPIF_CFG1__RSRVD1__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_INBPIF_CFG1__RSRVD1__MASK                       0x1
#  define SPICA_MCU_INBPIF_CFG1__RSRVD1__OFFSET                     12
#  define SPICA_MCU_INBPIF_CFG1__STRIDE__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_MCU_INBPIF_CFG1__STRIDE__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_MCU_INBPIF_CFG1__STRIDE__READ(die)                SPICA_MCU_INBPIF_CFG1__STRIDE__GET(SPICA_MCU_INBPIF_CFG1__READ(die))
#  define SPICA_MCU_INBPIF_CFG1__STRIDE__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<8, 0xf00)
#  define SPICA_MCU_INBPIF_CFG1__STRIDE__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<8, 0xf00)
#  define SPICA_MCU_INBPIF_CFG1__STRIDE__MASK                       0xf
#  define SPICA_MCU_INBPIF_CFG1__STRIDE__OFFSET                     8
#  define SPICA_MCU_INBPIF_CFG1__BE__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MCU_INBPIF_CFG1__BE__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MCU_INBPIF_CFG1__BE__READ(die)                SPICA_MCU_INBPIF_CFG1__BE__GET(SPICA_MCU_INBPIF_CFG1__READ(die))
#  define SPICA_MCU_INBPIF_CFG1__BE__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_INBPIF_CFG1__BE__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_INBPIF_CFG1__BE__MASK                       0xf
#  define SPICA_MCU_INBPIF_CFG1__BE__OFFSET                     4
#  define SPICA_MCU_INBPIF_CFG1__RSRVD2__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MCU_INBPIF_CFG1__RSRVD2__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MCU_INBPIF_CFG1__RSRVD2__READ(die)                SPICA_MCU_INBPIF_CFG1__RSRVD2__GET(SPICA_MCU_INBPIF_CFG1__READ(die))
#  define SPICA_MCU_INBPIF_CFG1__RSRVD2__WRITE(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_INBPIF_CFG1__RSRVD2__RMW(die, fdata)           SPICA_MCU_INBPIF_CFG1__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_INBPIF_CFG1__RSRVD2__MASK                       0xf
#  define SPICA_MCU_INBPIF_CFG1__RSRVD2__OFFSET                     0

#define SPICA_MCU_INBPIF_ADDR0__ADDRESS                      0x1ee035
#define SPICA_MCU_INBPIF_ADDR0__DEFAULT                      0x0
#define SPICA_MCU_INBPIF_ADDR0__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_ADDR0__ADDRESS)
#define SPICA_MCU_INBPIF_ADDR0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_ADDR0__ADDRESS, (data))
#define SPICA_MCU_INBPIF_ADDR0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_ADDR0__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_ADDR0__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_INBPIF_ADDR0__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_INBPIF_ADDR0__ADDR__READ(die)                SPICA_MCU_INBPIF_ADDR0__ADDR__GET(SPICA_MCU_INBPIF_ADDR0__READ(die))
#  define SPICA_MCU_INBPIF_ADDR0__ADDR__WRITE(die, fdata)           SPICA_MCU_INBPIF_ADDR0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_ADDR0__ADDR__RMW(die, fdata)           SPICA_MCU_INBPIF_ADDR0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_ADDR0__ADDR__MASK                       0xffff
#  define SPICA_MCU_INBPIF_ADDR0__ADDR__OFFSET                     0

#define SPICA_MCU_INBPIF_ADDR1__ADDRESS                      0x1ee036
#define SPICA_MCU_INBPIF_ADDR1__DEFAULT                      0x0
#define SPICA_MCU_INBPIF_ADDR1__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_ADDR1__ADDRESS)
#define SPICA_MCU_INBPIF_ADDR1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_ADDR1__ADDRESS, (data))
#define SPICA_MCU_INBPIF_ADDR1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_ADDR1__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_ADDR1__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_INBPIF_ADDR1__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_INBPIF_ADDR1__ADDR__READ(die)                SPICA_MCU_INBPIF_ADDR1__ADDR__GET(SPICA_MCU_INBPIF_ADDR1__READ(die))
#  define SPICA_MCU_INBPIF_ADDR1__ADDR__WRITE(die, fdata)           SPICA_MCU_INBPIF_ADDR1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_ADDR1__ADDR__RMW(die, fdata)           SPICA_MCU_INBPIF_ADDR1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_ADDR1__ADDR__MASK                       0xffff
#  define SPICA_MCU_INBPIF_ADDR1__ADDR__OFFSET                     0

#define SPICA_MCU_INBPIF_WDATA0__ADDRESS                      0x1ee037
#define SPICA_MCU_INBPIF_WDATA0__DEFAULT                      0x0
#define SPICA_MCU_INBPIF_WDATA0__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_WDATA0__ADDRESS)
#define SPICA_MCU_INBPIF_WDATA0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_WDATA0__ADDRESS, (data))
#define SPICA_MCU_INBPIF_WDATA0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_WDATA0__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_WDATA0__WDATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_INBPIF_WDATA0__WDATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_INBPIF_WDATA0__WDATA__READ(die)                SPICA_MCU_INBPIF_WDATA0__WDATA__GET(SPICA_MCU_INBPIF_WDATA0__READ(die))
#  define SPICA_MCU_INBPIF_WDATA0__WDATA__WRITE(die, fdata)           SPICA_MCU_INBPIF_WDATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_WDATA0__WDATA__RMW(die, fdata)           SPICA_MCU_INBPIF_WDATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_WDATA0__WDATA__MASK                       0xffff
#  define SPICA_MCU_INBPIF_WDATA0__WDATA__OFFSET                     0

#define SPICA_MCU_INBPIF_WDATA1__ADDRESS                      0x1ee038
#define SPICA_MCU_INBPIF_WDATA1__DEFAULT                      0x0
#define SPICA_MCU_INBPIF_WDATA1__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_WDATA1__ADDRESS)
#define SPICA_MCU_INBPIF_WDATA1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_WDATA1__ADDRESS, (data))
#define SPICA_MCU_INBPIF_WDATA1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_WDATA1__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_WDATA1__WDATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_INBPIF_WDATA1__WDATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_INBPIF_WDATA1__WDATA__READ(die)                SPICA_MCU_INBPIF_WDATA1__WDATA__GET(SPICA_MCU_INBPIF_WDATA1__READ(die))
#  define SPICA_MCU_INBPIF_WDATA1__WDATA__WRITE(die, fdata)           SPICA_MCU_INBPIF_WDATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_WDATA1__WDATA__RMW(die, fdata)           SPICA_MCU_INBPIF_WDATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_WDATA1__WDATA__MASK                       0xffff
#  define SPICA_MCU_INBPIF_WDATA1__WDATA__OFFSET                     0

#define SPICA_MCU_INBPIF_RDATA__ADDRESS                      0x1ee039
#define SPICA_MCU_INBPIF_RDATA__DEFAULT                      0x0
#define SPICA_MCU_INBPIF_RDATA__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_RDATA__ADDRESS)
#define SPICA_MCU_INBPIF_RDATA__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_RDATA__ADDRESS, (data))
#define SPICA_MCU_INBPIF_RDATA__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_RDATA__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_RDATA__RDATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_INBPIF_RDATA__RDATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_INBPIF_RDATA__RDATA__READ(die)                SPICA_MCU_INBPIF_RDATA__RDATA__GET(SPICA_MCU_INBPIF_RDATA__READ(die))
#  define SPICA_MCU_INBPIF_RDATA__RDATA__WRITE(die, fdata)           SPICA_MCU_INBPIF_RDATA__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_RDATA__RDATA__RMW(die, fdata)           SPICA_MCU_INBPIF_RDATA__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_INBPIF_RDATA__RDATA__MASK                       0xffff
#  define SPICA_MCU_INBPIF_RDATA__RDATA__OFFSET                     0

#define SPICA_MCU_INBPIF_RSTATUS1__ADDRESS                      0x1ee03b
#define SPICA_MCU_INBPIF_RSTATUS1__DEFAULT                      0x0
#define SPICA_MCU_INBPIF_RSTATUS1__READ(die)                  spica_reg_read(die, SPICA_MCU_INBPIF_RSTATUS1__ADDRESS)
#define SPICA_MCU_INBPIF_RSTATUS1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_INBPIF_RSTATUS1__ADDRESS, (data))
#define SPICA_MCU_INBPIF_RSTATUS1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_INBPIF_RSTATUS1__ADDRESS, (data), (mask))
#  define SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__READ(die)                SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__GET(SPICA_MCU_INBPIF_RSTATUS1__READ(die))
#  define SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__WRITE(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__RMW(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__MASK                       0x1
#  define SPICA_MCU_INBPIF_RSTATUS1__RD_PENDING__OFFSET                     15
#  define SPICA_MCU_INBPIF_RSTATUS1__REQRDY__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MCU_INBPIF_RSTATUS1__REQRDY__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MCU_INBPIF_RSTATUS1__REQRDY__READ(die)                SPICA_MCU_INBPIF_RSTATUS1__REQRDY__GET(SPICA_MCU_INBPIF_RSTATUS1__READ(die))
#  define SPICA_MCU_INBPIF_RSTATUS1__REQRDY__WRITE(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_INBPIF_RSTATUS1__REQRDY__RMW(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_INBPIF_RSTATUS1__REQRDY__MASK                       0x1
#  define SPICA_MCU_INBPIF_RSTATUS1__REQRDY__OFFSET                     14
#  define SPICA_MCU_INBPIF_RSTATUS1__STATE__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MCU_INBPIF_RSTATUS1__STATE__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MCU_INBPIF_RSTATUS1__STATE__READ(die)                SPICA_MCU_INBPIF_RSTATUS1__STATE__GET(SPICA_MCU_INBPIF_RSTATUS1__READ(die))
#  define SPICA_MCU_INBPIF_RSTATUS1__STATE__WRITE(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_INBPIF_RSTATUS1__STATE__RMW(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_INBPIF_RSTATUS1__STATE__MASK                       0x1
#  define SPICA_MCU_INBPIF_RSTATUS1__STATE__OFFSET                     13
#  define SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0xe000) | (((uint32_t)(fdata) << 0) & 0x1fff))
#  define SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__GET(rdata)                (((rdata) >> 0) & 0x1fff)
#  define SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__READ(die)                SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__GET(SPICA_MCU_INBPIF_RSTATUS1__READ(die))
#  define SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__WRITE(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<0, 0x1fff)
#  define SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__RMW(die, fdata)           SPICA_MCU_INBPIF_RSTATUS1__RMW(die, (fdata)<<0, 0x1fff)
#  define SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__MASK                       0x1fff
#  define SPICA_MCU_INBPIF_RSTATUS1__RSRVD1__OFFSET                     0

#define SPICA_MCU_EEPROM_STATUS__ADDRESS                      0x1ee04d
#define SPICA_MCU_EEPROM_STATUS__DEFAULT                      0x0
#define SPICA_MCU_EEPROM_STATUS__READ(die)                  spica_reg_read(die, SPICA_MCU_EEPROM_STATUS__ADDRESS)
#define SPICA_MCU_EEPROM_STATUS__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_EEPROM_STATUS__ADDRESS, (data))
#define SPICA_MCU_EEPROM_STATUS__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_EEPROM_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MCU_EEPROM_STATUS__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_MCU_EEPROM_STATUS__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_MCU_EEPROM_STATUS__RSRVD1__READ(die)                SPICA_MCU_EEPROM_STATUS__RSRVD1__GET(SPICA_MCU_EEPROM_STATUS__READ(die))
#  define SPICA_MCU_EEPROM_STATUS__RSRVD1__WRITE(die, fdata)           SPICA_MCU_EEPROM_STATUS__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_MCU_EEPROM_STATUS__RSRVD1__RMW(die, fdata)           SPICA_MCU_EEPROM_STATUS__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_MCU_EEPROM_STATUS__RSRVD1__MASK                       0x7fff
#  define SPICA_MCU_EEPROM_STATUS__RSRVD1__OFFSET                     1
#  define SPICA_MCU_EEPROM_STATUS__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_EEPROM_STATUS__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_EEPROM_STATUS__ENABLE__READ(die)                SPICA_MCU_EEPROM_STATUS__ENABLE__GET(SPICA_MCU_EEPROM_STATUS__READ(die))
#  define SPICA_MCU_EEPROM_STATUS__ENABLE__WRITE(die, fdata)           SPICA_MCU_EEPROM_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_EEPROM_STATUS__ENABLE__RMW(die, fdata)           SPICA_MCU_EEPROM_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_EEPROM_STATUS__ENABLE__MASK                       0x1
#  define SPICA_MCU_EEPROM_STATUS__ENABLE__OFFSET                     0

#define SPICA_MCU_EEPROM_ISIZE0__ADDRESS                      0x1ee056
#define SPICA_MCU_EEPROM_ISIZE0__DEFAULT                      0x0
#define SPICA_MCU_EEPROM_ISIZE0__READ(die)                  spica_reg_read(die, SPICA_MCU_EEPROM_ISIZE0__ADDRESS)
#define SPICA_MCU_EEPROM_ISIZE0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_EEPROM_ISIZE0__ADDRESS, (data))
#define SPICA_MCU_EEPROM_ISIZE0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_EEPROM_ISIZE0__ADDRESS, (data), (mask))
#  define SPICA_MCU_EEPROM_ISIZE0__SIZE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_EEPROM_ISIZE0__SIZE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_EEPROM_ISIZE0__SIZE__READ(die)                SPICA_MCU_EEPROM_ISIZE0__SIZE__GET(SPICA_MCU_EEPROM_ISIZE0__READ(die))
#  define SPICA_MCU_EEPROM_ISIZE0__SIZE__WRITE(die, fdata)           SPICA_MCU_EEPROM_ISIZE0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_ISIZE0__SIZE__RMW(die, fdata)           SPICA_MCU_EEPROM_ISIZE0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_ISIZE0__SIZE__MASK                       0xffff
#  define SPICA_MCU_EEPROM_ISIZE0__SIZE__OFFSET                     0

#define SPICA_MCU_EEPROM_ISIZE1__ADDRESS                      0x1ee057
#define SPICA_MCU_EEPROM_ISIZE1__DEFAULT                      0x0
#define SPICA_MCU_EEPROM_ISIZE1__READ(die)                  spica_reg_read(die, SPICA_MCU_EEPROM_ISIZE1__ADDRESS)
#define SPICA_MCU_EEPROM_ISIZE1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_EEPROM_ISIZE1__ADDRESS, (data))
#define SPICA_MCU_EEPROM_ISIZE1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_EEPROM_ISIZE1__ADDRESS, (data), (mask))
#  define SPICA_MCU_EEPROM_ISIZE1__SIZE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_EEPROM_ISIZE1__SIZE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_EEPROM_ISIZE1__SIZE__READ(die)                SPICA_MCU_EEPROM_ISIZE1__SIZE__GET(SPICA_MCU_EEPROM_ISIZE1__READ(die))
#  define SPICA_MCU_EEPROM_ISIZE1__SIZE__WRITE(die, fdata)           SPICA_MCU_EEPROM_ISIZE1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_ISIZE1__SIZE__RMW(die, fdata)           SPICA_MCU_EEPROM_ISIZE1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_ISIZE1__SIZE__MASK                       0xffff
#  define SPICA_MCU_EEPROM_ISIZE1__SIZE__OFFSET                     0

#define SPICA_MCU_EEPROM_DSIZE0__ADDRESS                      0x1ee058
#define SPICA_MCU_EEPROM_DSIZE0__DEFAULT                      0x0
#define SPICA_MCU_EEPROM_DSIZE0__READ(die)                  spica_reg_read(die, SPICA_MCU_EEPROM_DSIZE0__ADDRESS)
#define SPICA_MCU_EEPROM_DSIZE0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_EEPROM_DSIZE0__ADDRESS, (data))
#define SPICA_MCU_EEPROM_DSIZE0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_EEPROM_DSIZE0__ADDRESS, (data), (mask))
#  define SPICA_MCU_EEPROM_DSIZE0__SIZE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_EEPROM_DSIZE0__SIZE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_EEPROM_DSIZE0__SIZE__READ(die)                SPICA_MCU_EEPROM_DSIZE0__SIZE__GET(SPICA_MCU_EEPROM_DSIZE0__READ(die))
#  define SPICA_MCU_EEPROM_DSIZE0__SIZE__WRITE(die, fdata)           SPICA_MCU_EEPROM_DSIZE0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_DSIZE0__SIZE__RMW(die, fdata)           SPICA_MCU_EEPROM_DSIZE0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_DSIZE0__SIZE__MASK                       0xffff
#  define SPICA_MCU_EEPROM_DSIZE0__SIZE__OFFSET                     0

#define SPICA_MCU_EEPROM_DSIZE1__ADDRESS                      0x1ee059
#define SPICA_MCU_EEPROM_DSIZE1__DEFAULT                      0x0
#define SPICA_MCU_EEPROM_DSIZE1__READ(die)                  spica_reg_read(die, SPICA_MCU_EEPROM_DSIZE1__ADDRESS)
#define SPICA_MCU_EEPROM_DSIZE1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_EEPROM_DSIZE1__ADDRESS, (data))
#define SPICA_MCU_EEPROM_DSIZE1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_EEPROM_DSIZE1__ADDRESS, (data), (mask))
#  define SPICA_MCU_EEPROM_DSIZE1__SIZE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_EEPROM_DSIZE1__SIZE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_EEPROM_DSIZE1__SIZE__READ(die)                SPICA_MCU_EEPROM_DSIZE1__SIZE__GET(SPICA_MCU_EEPROM_DSIZE1__READ(die))
#  define SPICA_MCU_EEPROM_DSIZE1__SIZE__WRITE(die, fdata)           SPICA_MCU_EEPROM_DSIZE1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_DSIZE1__SIZE__RMW(die, fdata)           SPICA_MCU_EEPROM_DSIZE1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_EEPROM_DSIZE1__SIZE__MASK                       0xffff
#  define SPICA_MCU_EEPROM_DSIZE1__SIZE__OFFSET                     0

#define SPICA_MCU_CRC_EEPROM0__ADDRESS                      0x1ee05a
#define SPICA_MCU_CRC_EEPROM0__DEFAULT                      0x0
#define SPICA_MCU_CRC_EEPROM0__READ(die)                  spica_reg_read(die, SPICA_MCU_CRC_EEPROM0__ADDRESS)
#define SPICA_MCU_CRC_EEPROM0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_CRC_EEPROM0__ADDRESS, (data))
#define SPICA_MCU_CRC_EEPROM0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_CRC_EEPROM0__ADDRESS, (data), (mask))
#  define SPICA_MCU_CRC_EEPROM0__CRC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_CRC_EEPROM0__CRC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_CRC_EEPROM0__CRC__READ(die)                SPICA_MCU_CRC_EEPROM0__CRC__GET(SPICA_MCU_CRC_EEPROM0__READ(die))
#  define SPICA_MCU_CRC_EEPROM0__CRC__WRITE(die, fdata)           SPICA_MCU_CRC_EEPROM0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_EEPROM0__CRC__RMW(die, fdata)           SPICA_MCU_CRC_EEPROM0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_EEPROM0__CRC__MASK                       0xffff
#  define SPICA_MCU_CRC_EEPROM0__CRC__OFFSET                     0

#define SPICA_MCU_CRC_EEPROM1__ADDRESS                      0x1ee05b
#define SPICA_MCU_CRC_EEPROM1__DEFAULT                      0x0
#define SPICA_MCU_CRC_EEPROM1__READ(die)                  spica_reg_read(die, SPICA_MCU_CRC_EEPROM1__ADDRESS)
#define SPICA_MCU_CRC_EEPROM1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_CRC_EEPROM1__ADDRESS, (data))
#define SPICA_MCU_CRC_EEPROM1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_CRC_EEPROM1__ADDRESS, (data), (mask))
#  define SPICA_MCU_CRC_EEPROM1__CRC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_CRC_EEPROM1__CRC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_CRC_EEPROM1__CRC__READ(die)                SPICA_MCU_CRC_EEPROM1__CRC__GET(SPICA_MCU_CRC_EEPROM1__READ(die))
#  define SPICA_MCU_CRC_EEPROM1__CRC__WRITE(die, fdata)           SPICA_MCU_CRC_EEPROM1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_EEPROM1__CRC__RMW(die, fdata)           SPICA_MCU_CRC_EEPROM1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_EEPROM1__CRC__MASK                       0xffff
#  define SPICA_MCU_CRC_EEPROM1__CRC__OFFSET                     0

#define SPICA_MCU_CRC_CALC0__ADDRESS                      0x1ee05c
#define SPICA_MCU_CRC_CALC0__DEFAULT                      0x0
#define SPICA_MCU_CRC_CALC0__READ(die)                  spica_reg_read(die, SPICA_MCU_CRC_CALC0__ADDRESS)
#define SPICA_MCU_CRC_CALC0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_CRC_CALC0__ADDRESS, (data))
#define SPICA_MCU_CRC_CALC0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_CRC_CALC0__ADDRESS, (data), (mask))
#  define SPICA_MCU_CRC_CALC0__CRC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_CRC_CALC0__CRC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_CRC_CALC0__CRC__READ(die)                SPICA_MCU_CRC_CALC0__CRC__GET(SPICA_MCU_CRC_CALC0__READ(die))
#  define SPICA_MCU_CRC_CALC0__CRC__WRITE(die, fdata)           SPICA_MCU_CRC_CALC0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_CALC0__CRC__RMW(die, fdata)           SPICA_MCU_CRC_CALC0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_CALC0__CRC__MASK                       0xffff
#  define SPICA_MCU_CRC_CALC0__CRC__OFFSET                     0

#define SPICA_MCU_CRC_CALC1__ADDRESS                      0x1ee05d
#define SPICA_MCU_CRC_CALC1__DEFAULT                      0x0
#define SPICA_MCU_CRC_CALC1__READ(die)                  spica_reg_read(die, SPICA_MCU_CRC_CALC1__ADDRESS)
#define SPICA_MCU_CRC_CALC1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_CRC_CALC1__ADDRESS, (data))
#define SPICA_MCU_CRC_CALC1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_CRC_CALC1__ADDRESS, (data), (mask))
#  define SPICA_MCU_CRC_CALC1__CRC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_CRC_CALC1__CRC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_CRC_CALC1__CRC__READ(die)                SPICA_MCU_CRC_CALC1__CRC__GET(SPICA_MCU_CRC_CALC1__READ(die))
#  define SPICA_MCU_CRC_CALC1__CRC__WRITE(die, fdata)           SPICA_MCU_CRC_CALC1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_CALC1__CRC__RMW(die, fdata)           SPICA_MCU_CRC_CALC1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_CRC_CALC1__CRC__MASK                       0xffff
#  define SPICA_MCU_CRC_CALC1__CRC__OFFSET                     0

#define SPICA_MCU_BOOTVER__ADDRESS                      0x1ee060
#define SPICA_MCU_BOOTVER__DEFAULT                      0x0
#define SPICA_MCU_BOOTVER__READ(die)                  spica_reg_read(die, SPICA_MCU_BOOTVER__ADDRESS)
#define SPICA_MCU_BOOTVER__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_BOOTVER__ADDRESS, (data))
#define SPICA_MCU_BOOTVER__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_BOOTVER__ADDRESS, (data), (mask))
#  define SPICA_MCU_BOOTVER__BOOTVER__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_BOOTVER__BOOTVER__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_BOOTVER__BOOTVER__READ(die)                SPICA_MCU_BOOTVER__BOOTVER__GET(SPICA_MCU_BOOTVER__READ(die))
#  define SPICA_MCU_BOOTVER__BOOTVER__WRITE(die, fdata)           SPICA_MCU_BOOTVER__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_BOOTVER__BOOTVER__RMW(die, fdata)           SPICA_MCU_BOOTVER__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_BOOTVER__BOOTVER__MASK                       0xffff
#  define SPICA_MCU_BOOTVER__BOOTVER__OFFSET                     0

#define SPICA_MCU_FW_MODE__ADDRESS                      0x1ee061
#define SPICA_MCU_FW_MODE__DEFAULT                      0x0
#define SPICA_MCU_FW_MODE__READ(die)                  spica_reg_read(die, SPICA_MCU_FW_MODE__ADDRESS)
#define SPICA_MCU_FW_MODE__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_FW_MODE__ADDRESS, (data))
#define SPICA_MCU_FW_MODE__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_FW_MODE__ADDRESS, (data), (mask))
#  define SPICA_MCU_FW_MODE__FW_MODE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_FW_MODE__FW_MODE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_FW_MODE__FW_MODE__READ(die)                SPICA_MCU_FW_MODE__FW_MODE__GET(SPICA_MCU_FW_MODE__READ(die))
#  define SPICA_MCU_FW_MODE__FW_MODE__WRITE(die, fdata)           SPICA_MCU_FW_MODE__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_FW_MODE__FW_MODE__RMW(die, fdata)           SPICA_MCU_FW_MODE__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_FW_MODE__FW_MODE__MASK                       0xffff
#  define SPICA_MCU_FW_MODE__FW_MODE__OFFSET                     0

#define SPICA_MCU_SPARE0__ADDRESS                      0x1ee062
#define SPICA_MCU_SPARE0__DEFAULT                      0x0
#define SPICA_MCU_SPARE0__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE0__ADDRESS)
#define SPICA_MCU_SPARE0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE0__ADDRESS, (data))
#define SPICA_MCU_SPARE0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE0__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE0__DATA__READ(die)                SPICA_MCU_SPARE0__DATA__GET(SPICA_MCU_SPARE0__READ(die))
#  define SPICA_MCU_SPARE0__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE0__DATA__RMW(die, fdata)           SPICA_MCU_SPARE0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE0__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE0__DATA__OFFSET                     0

#define SPICA_MCU_SPARE1__ADDRESS                      0x1ee063
#define SPICA_MCU_SPARE1__DEFAULT                      0x0
#define SPICA_MCU_SPARE1__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE1__ADDRESS)
#define SPICA_MCU_SPARE1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE1__ADDRESS, (data))
#define SPICA_MCU_SPARE1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE1__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE1__DATA__READ(die)                SPICA_MCU_SPARE1__DATA__GET(SPICA_MCU_SPARE1__READ(die))
#  define SPICA_MCU_SPARE1__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE1__DATA__RMW(die, fdata)           SPICA_MCU_SPARE1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE1__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE1__DATA__OFFSET                     0

#define SPICA_MCU_SPARE2__ADDRESS                      0x1ee064
#define SPICA_MCU_SPARE2__DEFAULT                      0x0
#define SPICA_MCU_SPARE2__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE2__ADDRESS)
#define SPICA_MCU_SPARE2__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE2__ADDRESS, (data))
#define SPICA_MCU_SPARE2__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE2__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE2__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE2__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE2__DATA__READ(die)                SPICA_MCU_SPARE2__DATA__GET(SPICA_MCU_SPARE2__READ(die))
#  define SPICA_MCU_SPARE2__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE2__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE2__DATA__RMW(die, fdata)           SPICA_MCU_SPARE2__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE2__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE2__DATA__OFFSET                     0

#define SPICA_MCU_SPARE3__ADDRESS                      0x1ee065
#define SPICA_MCU_SPARE3__DEFAULT                      0x0
#define SPICA_MCU_SPARE3__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE3__ADDRESS)
#define SPICA_MCU_SPARE3__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE3__ADDRESS, (data))
#define SPICA_MCU_SPARE3__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE3__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE3__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE3__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE3__DATA__READ(die)                SPICA_MCU_SPARE3__DATA__GET(SPICA_MCU_SPARE3__READ(die))
#  define SPICA_MCU_SPARE3__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE3__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE3__DATA__RMW(die, fdata)           SPICA_MCU_SPARE3__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE3__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE3__DATA__OFFSET                     0

#define SPICA_MCU_SPARE4__ADDRESS                      0x1ee066
#define SPICA_MCU_SPARE4__DEFAULT                      0x0
#define SPICA_MCU_SPARE4__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE4__ADDRESS)
#define SPICA_MCU_SPARE4__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE4__ADDRESS, (data))
#define SPICA_MCU_SPARE4__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE4__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE4__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE4__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE4__DATA__READ(die)                SPICA_MCU_SPARE4__DATA__GET(SPICA_MCU_SPARE4__READ(die))
#  define SPICA_MCU_SPARE4__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE4__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE4__DATA__RMW(die, fdata)           SPICA_MCU_SPARE4__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE4__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE4__DATA__OFFSET                     0

#define SPICA_MCU_SPARE5__ADDRESS                      0x1ee067
#define SPICA_MCU_SPARE5__DEFAULT                      0x0
#define SPICA_MCU_SPARE5__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE5__ADDRESS)
#define SPICA_MCU_SPARE5__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE5__ADDRESS, (data))
#define SPICA_MCU_SPARE5__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE5__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE5__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE5__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE5__DATA__READ(die)                SPICA_MCU_SPARE5__DATA__GET(SPICA_MCU_SPARE5__READ(die))
#  define SPICA_MCU_SPARE5__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE5__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE5__DATA__RMW(die, fdata)           SPICA_MCU_SPARE5__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE5__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE5__DATA__OFFSET                     0

#define SPICA_MCU_SPARE6__ADDRESS                      0x1ee068
#define SPICA_MCU_SPARE6__DEFAULT                      0x0
#define SPICA_MCU_SPARE6__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE6__ADDRESS)
#define SPICA_MCU_SPARE6__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE6__ADDRESS, (data))
#define SPICA_MCU_SPARE6__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE6__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE6__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE6__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE6__DATA__READ(die)                SPICA_MCU_SPARE6__DATA__GET(SPICA_MCU_SPARE6__READ(die))
#  define SPICA_MCU_SPARE6__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE6__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE6__DATA__RMW(die, fdata)           SPICA_MCU_SPARE6__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE6__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE6__DATA__OFFSET                     0

#define SPICA_MCU_SPARE7__ADDRESS                      0x1ee069
#define SPICA_MCU_SPARE7__DEFAULT                      0x0
#define SPICA_MCU_SPARE7__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE7__ADDRESS)
#define SPICA_MCU_SPARE7__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE7__ADDRESS, (data))
#define SPICA_MCU_SPARE7__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE7__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE7__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE7__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE7__DATA__READ(die)                SPICA_MCU_SPARE7__DATA__GET(SPICA_MCU_SPARE7__READ(die))
#  define SPICA_MCU_SPARE7__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE7__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE7__DATA__RMW(die, fdata)           SPICA_MCU_SPARE7__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE7__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE7__DATA__OFFSET                     0

#define SPICA_MCU_SPARE8__ADDRESS                      0x1ee06a
#define SPICA_MCU_SPARE8__DEFAULT                      0x0
#define SPICA_MCU_SPARE8__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE8__ADDRESS)
#define SPICA_MCU_SPARE8__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE8__ADDRESS, (data))
#define SPICA_MCU_SPARE8__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE8__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE8__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE8__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE8__DATA__READ(die)                SPICA_MCU_SPARE8__DATA__GET(SPICA_MCU_SPARE8__READ(die))
#  define SPICA_MCU_SPARE8__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE8__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE8__DATA__RMW(die, fdata)           SPICA_MCU_SPARE8__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE8__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE8__DATA__OFFSET                     0

#define SPICA_MCU_SPARE9__ADDRESS                      0x1ee06b
#define SPICA_MCU_SPARE9__DEFAULT                      0x0
#define SPICA_MCU_SPARE9__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE9__ADDRESS)
#define SPICA_MCU_SPARE9__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE9__ADDRESS, (data))
#define SPICA_MCU_SPARE9__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE9__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE9__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE9__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE9__DATA__READ(die)                SPICA_MCU_SPARE9__DATA__GET(SPICA_MCU_SPARE9__READ(die))
#  define SPICA_MCU_SPARE9__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE9__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE9__DATA__RMW(die, fdata)           SPICA_MCU_SPARE9__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE9__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE9__DATA__OFFSET                     0

#define SPICA_MCU_SPARE10__ADDRESS                      0x1ee06c
#define SPICA_MCU_SPARE10__DEFAULT                      0x0
#define SPICA_MCU_SPARE10__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE10__ADDRESS)
#define SPICA_MCU_SPARE10__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE10__ADDRESS, (data))
#define SPICA_MCU_SPARE10__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE10__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE10__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE10__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE10__DATA__READ(die)                SPICA_MCU_SPARE10__DATA__GET(SPICA_MCU_SPARE10__READ(die))
#  define SPICA_MCU_SPARE10__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE10__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE10__DATA__RMW(die, fdata)           SPICA_MCU_SPARE10__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE10__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE10__DATA__OFFSET                     0

#define SPICA_MCU_SPARE11__ADDRESS                      0x1ee06d
#define SPICA_MCU_SPARE11__DEFAULT                      0x0
#define SPICA_MCU_SPARE11__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE11__ADDRESS)
#define SPICA_MCU_SPARE11__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE11__ADDRESS, (data))
#define SPICA_MCU_SPARE11__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE11__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE11__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE11__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE11__DATA__READ(die)                SPICA_MCU_SPARE11__DATA__GET(SPICA_MCU_SPARE11__READ(die))
#  define SPICA_MCU_SPARE11__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE11__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE11__DATA__RMW(die, fdata)           SPICA_MCU_SPARE11__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE11__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE11__DATA__OFFSET                     0

#define SPICA_MCU_SPARE12__ADDRESS                      0x1ee06e
#define SPICA_MCU_SPARE12__DEFAULT                      0x0
#define SPICA_MCU_SPARE12__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE12__ADDRESS)
#define SPICA_MCU_SPARE12__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE12__ADDRESS, (data))
#define SPICA_MCU_SPARE12__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE12__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE12__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE12__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE12__DATA__READ(die)                SPICA_MCU_SPARE12__DATA__GET(SPICA_MCU_SPARE12__READ(die))
#  define SPICA_MCU_SPARE12__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE12__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE12__DATA__RMW(die, fdata)           SPICA_MCU_SPARE12__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE12__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE12__DATA__OFFSET                     0

#define SPICA_MCU_SPARE13__ADDRESS                      0x1ee06f
#define SPICA_MCU_SPARE13__DEFAULT                      0x0
#define SPICA_MCU_SPARE13__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE13__ADDRESS)
#define SPICA_MCU_SPARE13__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE13__ADDRESS, (data))
#define SPICA_MCU_SPARE13__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE13__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE13__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE13__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE13__DATA__READ(die)                SPICA_MCU_SPARE13__DATA__GET(SPICA_MCU_SPARE13__READ(die))
#  define SPICA_MCU_SPARE13__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE13__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE13__DATA__RMW(die, fdata)           SPICA_MCU_SPARE13__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE13__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE13__DATA__OFFSET                     0

#define SPICA_MCU_SPARE14__ADDRESS                      0x1ee070
#define SPICA_MCU_SPARE14__DEFAULT                      0x0
#define SPICA_MCU_SPARE14__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE14__ADDRESS)
#define SPICA_MCU_SPARE14__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE14__ADDRESS, (data))
#define SPICA_MCU_SPARE14__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE14__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE14__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE14__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE14__DATA__READ(die)                SPICA_MCU_SPARE14__DATA__GET(SPICA_MCU_SPARE14__READ(die))
#  define SPICA_MCU_SPARE14__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE14__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE14__DATA__RMW(die, fdata)           SPICA_MCU_SPARE14__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE14__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE14__DATA__OFFSET                     0

#define SPICA_MCU_SPARE15__ADDRESS                      0x1ee071
#define SPICA_MCU_SPARE15__DEFAULT                      0x0
#define SPICA_MCU_SPARE15__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE15__ADDRESS)
#define SPICA_MCU_SPARE15__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE15__ADDRESS, (data))
#define SPICA_MCU_SPARE15__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE15__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE15__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE15__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE15__DATA__READ(die)                SPICA_MCU_SPARE15__DATA__GET(SPICA_MCU_SPARE15__READ(die))
#  define SPICA_MCU_SPARE15__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE15__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE15__DATA__RMW(die, fdata)           SPICA_MCU_SPARE15__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE15__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE15__DATA__OFFSET                     0

#define SPICA_MCU_SPARE16__ADDRESS                      0x1ee072
#define SPICA_MCU_SPARE16__DEFAULT                      0x0
#define SPICA_MCU_SPARE16__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE16__ADDRESS)
#define SPICA_MCU_SPARE16__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE16__ADDRESS, (data))
#define SPICA_MCU_SPARE16__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE16__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE16__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE16__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE16__DATA__READ(die)                SPICA_MCU_SPARE16__DATA__GET(SPICA_MCU_SPARE16__READ(die))
#  define SPICA_MCU_SPARE16__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE16__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE16__DATA__RMW(die, fdata)           SPICA_MCU_SPARE16__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE16__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE16__DATA__OFFSET                     0

#define SPICA_MCU_SPARE17__ADDRESS                      0x1ee073
#define SPICA_MCU_SPARE17__DEFAULT                      0x0
#define SPICA_MCU_SPARE17__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE17__ADDRESS)
#define SPICA_MCU_SPARE17__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE17__ADDRESS, (data))
#define SPICA_MCU_SPARE17__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE17__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE17__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE17__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE17__DATA__READ(die)                SPICA_MCU_SPARE17__DATA__GET(SPICA_MCU_SPARE17__READ(die))
#  define SPICA_MCU_SPARE17__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE17__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE17__DATA__RMW(die, fdata)           SPICA_MCU_SPARE17__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE17__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE17__DATA__OFFSET                     0

#define SPICA_MCU_SPARE18__ADDRESS                      0x1ee074
#define SPICA_MCU_SPARE18__DEFAULT                      0x0
#define SPICA_MCU_SPARE18__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE18__ADDRESS)
#define SPICA_MCU_SPARE18__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE18__ADDRESS, (data))
#define SPICA_MCU_SPARE18__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE18__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE18__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE18__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE18__DATA__READ(die)                SPICA_MCU_SPARE18__DATA__GET(SPICA_MCU_SPARE18__READ(die))
#  define SPICA_MCU_SPARE18__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE18__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE18__DATA__RMW(die, fdata)           SPICA_MCU_SPARE18__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE18__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE18__DATA__OFFSET                     0

#define SPICA_MCU_SPARE19__ADDRESS                      0x1ee075
#define SPICA_MCU_SPARE19__DEFAULT                      0x0
#define SPICA_MCU_SPARE19__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE19__ADDRESS)
#define SPICA_MCU_SPARE19__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE19__ADDRESS, (data))
#define SPICA_MCU_SPARE19__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE19__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE19__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE19__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE19__DATA__READ(die)                SPICA_MCU_SPARE19__DATA__GET(SPICA_MCU_SPARE19__READ(die))
#  define SPICA_MCU_SPARE19__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE19__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE19__DATA__RMW(die, fdata)           SPICA_MCU_SPARE19__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE19__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE19__DATA__OFFSET                     0

#define SPICA_MCU_SPARE20__ADDRESS                      0x1ee076
#define SPICA_MCU_SPARE20__DEFAULT                      0x0
#define SPICA_MCU_SPARE20__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE20__ADDRESS)
#define SPICA_MCU_SPARE20__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE20__ADDRESS, (data))
#define SPICA_MCU_SPARE20__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE20__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE20__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE20__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE20__DATA__READ(die)                SPICA_MCU_SPARE20__DATA__GET(SPICA_MCU_SPARE20__READ(die))
#  define SPICA_MCU_SPARE20__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE20__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE20__DATA__RMW(die, fdata)           SPICA_MCU_SPARE20__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE20__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE20__DATA__OFFSET                     0

#define SPICA_MCU_SPARE21__ADDRESS                      0x1ee077
#define SPICA_MCU_SPARE21__DEFAULT                      0x0
#define SPICA_MCU_SPARE21__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE21__ADDRESS)
#define SPICA_MCU_SPARE21__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE21__ADDRESS, (data))
#define SPICA_MCU_SPARE21__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE21__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE21__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE21__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE21__DATA__READ(die)                SPICA_MCU_SPARE21__DATA__GET(SPICA_MCU_SPARE21__READ(die))
#  define SPICA_MCU_SPARE21__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE21__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE21__DATA__RMW(die, fdata)           SPICA_MCU_SPARE21__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE21__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE21__DATA__OFFSET                     0

#define SPICA_MCU_SPARE22__ADDRESS                      0x1ee078
#define SPICA_MCU_SPARE22__DEFAULT                      0x0
#define SPICA_MCU_SPARE22__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE22__ADDRESS)
#define SPICA_MCU_SPARE22__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE22__ADDRESS, (data))
#define SPICA_MCU_SPARE22__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE22__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE22__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE22__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE22__DATA__READ(die)                SPICA_MCU_SPARE22__DATA__GET(SPICA_MCU_SPARE22__READ(die))
#  define SPICA_MCU_SPARE22__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE22__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE22__DATA__RMW(die, fdata)           SPICA_MCU_SPARE22__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE22__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE22__DATA__OFFSET                     0

#define SPICA_MCU_SPARE23__ADDRESS                      0x1ee079
#define SPICA_MCU_SPARE23__DEFAULT                      0x0
#define SPICA_MCU_SPARE23__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE23__ADDRESS)
#define SPICA_MCU_SPARE23__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE23__ADDRESS, (data))
#define SPICA_MCU_SPARE23__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE23__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE23__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE23__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE23__DATA__READ(die)                SPICA_MCU_SPARE23__DATA__GET(SPICA_MCU_SPARE23__READ(die))
#  define SPICA_MCU_SPARE23__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE23__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE23__DATA__RMW(die, fdata)           SPICA_MCU_SPARE23__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE23__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE23__DATA__OFFSET                     0

#define SPICA_MCU_SPARE24__ADDRESS                      0x1ee07a
#define SPICA_MCU_SPARE24__DEFAULT                      0x0
#define SPICA_MCU_SPARE24__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE24__ADDRESS)
#define SPICA_MCU_SPARE24__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE24__ADDRESS, (data))
#define SPICA_MCU_SPARE24__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE24__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE24__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE24__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE24__DATA__READ(die)                SPICA_MCU_SPARE24__DATA__GET(SPICA_MCU_SPARE24__READ(die))
#  define SPICA_MCU_SPARE24__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE24__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE24__DATA__RMW(die, fdata)           SPICA_MCU_SPARE24__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE24__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE24__DATA__OFFSET                     0

#define SPICA_MCU_SPARE25__ADDRESS                      0x1ee07b
#define SPICA_MCU_SPARE25__DEFAULT                      0x0
#define SPICA_MCU_SPARE25__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE25__ADDRESS)
#define SPICA_MCU_SPARE25__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE25__ADDRESS, (data))
#define SPICA_MCU_SPARE25__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE25__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE25__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE25__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE25__DATA__READ(die)                SPICA_MCU_SPARE25__DATA__GET(SPICA_MCU_SPARE25__READ(die))
#  define SPICA_MCU_SPARE25__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE25__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE25__DATA__RMW(die, fdata)           SPICA_MCU_SPARE25__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE25__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE25__DATA__OFFSET                     0

#define SPICA_MCU_SPARE26__ADDRESS                      0x1ee07c
#define SPICA_MCU_SPARE26__DEFAULT                      0x0
#define SPICA_MCU_SPARE26__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE26__ADDRESS)
#define SPICA_MCU_SPARE26__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE26__ADDRESS, (data))
#define SPICA_MCU_SPARE26__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE26__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE26__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE26__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE26__DATA__READ(die)                SPICA_MCU_SPARE26__DATA__GET(SPICA_MCU_SPARE26__READ(die))
#  define SPICA_MCU_SPARE26__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE26__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE26__DATA__RMW(die, fdata)           SPICA_MCU_SPARE26__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE26__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE26__DATA__OFFSET                     0

#define SPICA_MCU_SPARE27__ADDRESS                      0x1ee07d
#define SPICA_MCU_SPARE27__DEFAULT                      0x0
#define SPICA_MCU_SPARE27__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE27__ADDRESS)
#define SPICA_MCU_SPARE27__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE27__ADDRESS, (data))
#define SPICA_MCU_SPARE27__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE27__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE27__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE27__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE27__DATA__READ(die)                SPICA_MCU_SPARE27__DATA__GET(SPICA_MCU_SPARE27__READ(die))
#  define SPICA_MCU_SPARE27__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE27__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE27__DATA__RMW(die, fdata)           SPICA_MCU_SPARE27__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE27__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE27__DATA__OFFSET                     0

#define SPICA_MCU_SPARE28__ADDRESS                      0x1ee07e
#define SPICA_MCU_SPARE28__DEFAULT                      0x0
#define SPICA_MCU_SPARE28__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE28__ADDRESS)
#define SPICA_MCU_SPARE28__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE28__ADDRESS, (data))
#define SPICA_MCU_SPARE28__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE28__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE28__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE28__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE28__DATA__READ(die)                SPICA_MCU_SPARE28__DATA__GET(SPICA_MCU_SPARE28__READ(die))
#  define SPICA_MCU_SPARE28__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE28__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE28__DATA__RMW(die, fdata)           SPICA_MCU_SPARE28__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE28__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE28__DATA__OFFSET                     0

#define SPICA_MCU_SPARE29__ADDRESS                      0x1ee07f
#define SPICA_MCU_SPARE29__DEFAULT                      0x0
#define SPICA_MCU_SPARE29__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE29__ADDRESS)
#define SPICA_MCU_SPARE29__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE29__ADDRESS, (data))
#define SPICA_MCU_SPARE29__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE29__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE29__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE29__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE29__DATA__READ(die)                SPICA_MCU_SPARE29__DATA__GET(SPICA_MCU_SPARE29__READ(die))
#  define SPICA_MCU_SPARE29__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE29__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE29__DATA__RMW(die, fdata)           SPICA_MCU_SPARE29__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE29__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE29__DATA__OFFSET                     0

#define SPICA_MCU_SPARE30__ADDRESS                      0x1ee080
#define SPICA_MCU_SPARE30__DEFAULT                      0x0
#define SPICA_MCU_SPARE30__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE30__ADDRESS)
#define SPICA_MCU_SPARE30__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE30__ADDRESS, (data))
#define SPICA_MCU_SPARE30__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE30__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE30__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE30__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE30__DATA__READ(die)                SPICA_MCU_SPARE30__DATA__GET(SPICA_MCU_SPARE30__READ(die))
#  define SPICA_MCU_SPARE30__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE30__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE30__DATA__RMW(die, fdata)           SPICA_MCU_SPARE30__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE30__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE30__DATA__OFFSET                     0

#define SPICA_MCU_SPARE31__ADDRESS                      0x1ee081
#define SPICA_MCU_SPARE31__DEFAULT                      0x0
#define SPICA_MCU_SPARE31__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE31__ADDRESS)
#define SPICA_MCU_SPARE31__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE31__ADDRESS, (data))
#define SPICA_MCU_SPARE31__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE31__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE31__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE31__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE31__DATA__READ(die)                SPICA_MCU_SPARE31__DATA__GET(SPICA_MCU_SPARE31__READ(die))
#  define SPICA_MCU_SPARE31__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE31__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE31__DATA__RMW(die, fdata)           SPICA_MCU_SPARE31__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE31__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE31__DATA__OFFSET                     0

#define SPICA_MCU_SPARE32__ADDRESS                      0x1ee082
#define SPICA_MCU_SPARE32__DEFAULT                      0x0
#define SPICA_MCU_SPARE32__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE32__ADDRESS)
#define SPICA_MCU_SPARE32__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE32__ADDRESS, (data))
#define SPICA_MCU_SPARE32__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE32__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE32__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE32__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE32__DATA__READ(die)                SPICA_MCU_SPARE32__DATA__GET(SPICA_MCU_SPARE32__READ(die))
#  define SPICA_MCU_SPARE32__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE32__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE32__DATA__RMW(die, fdata)           SPICA_MCU_SPARE32__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE32__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE32__DATA__OFFSET                     0

#define SPICA_MCU_SPARE33__ADDRESS                      0x1ee083
#define SPICA_MCU_SPARE33__DEFAULT                      0x0
#define SPICA_MCU_SPARE33__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE33__ADDRESS)
#define SPICA_MCU_SPARE33__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE33__ADDRESS, (data))
#define SPICA_MCU_SPARE33__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE33__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE33__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE33__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE33__DATA__READ(die)                SPICA_MCU_SPARE33__DATA__GET(SPICA_MCU_SPARE33__READ(die))
#  define SPICA_MCU_SPARE33__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE33__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE33__DATA__RMW(die, fdata)           SPICA_MCU_SPARE33__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE33__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE33__DATA__OFFSET                     0

#define SPICA_MCU_SPARE34__ADDRESS                      0x1ee084
#define SPICA_MCU_SPARE34__DEFAULT                      0x0
#define SPICA_MCU_SPARE34__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE34__ADDRESS)
#define SPICA_MCU_SPARE34__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE34__ADDRESS, (data))
#define SPICA_MCU_SPARE34__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE34__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE34__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE34__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE34__DATA__READ(die)                SPICA_MCU_SPARE34__DATA__GET(SPICA_MCU_SPARE34__READ(die))
#  define SPICA_MCU_SPARE34__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE34__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE34__DATA__RMW(die, fdata)           SPICA_MCU_SPARE34__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE34__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE34__DATA__OFFSET                     0

#define SPICA_MCU_SPARE35__ADDRESS                      0x1ee085
#define SPICA_MCU_SPARE35__DEFAULT                      0x0
#define SPICA_MCU_SPARE35__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE35__ADDRESS)
#define SPICA_MCU_SPARE35__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE35__ADDRESS, (data))
#define SPICA_MCU_SPARE35__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE35__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE35__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE35__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE35__DATA__READ(die)                SPICA_MCU_SPARE35__DATA__GET(SPICA_MCU_SPARE35__READ(die))
#  define SPICA_MCU_SPARE35__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE35__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE35__DATA__RMW(die, fdata)           SPICA_MCU_SPARE35__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE35__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE35__DATA__OFFSET                     0

#define SPICA_MCU_SPARE36__ADDRESS                      0x1ee086
#define SPICA_MCU_SPARE36__DEFAULT                      0x0
#define SPICA_MCU_SPARE36__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE36__ADDRESS)
#define SPICA_MCU_SPARE36__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE36__ADDRESS, (data))
#define SPICA_MCU_SPARE36__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE36__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE36__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE36__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE36__DATA__READ(die)                SPICA_MCU_SPARE36__DATA__GET(SPICA_MCU_SPARE36__READ(die))
#  define SPICA_MCU_SPARE36__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE36__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE36__DATA__RMW(die, fdata)           SPICA_MCU_SPARE36__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE36__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE36__DATA__OFFSET                     0

#define SPICA_MCU_SPARE37__ADDRESS                      0x1ee087
#define SPICA_MCU_SPARE37__DEFAULT                      0x0
#define SPICA_MCU_SPARE37__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE37__ADDRESS)
#define SPICA_MCU_SPARE37__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE37__ADDRESS, (data))
#define SPICA_MCU_SPARE37__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE37__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE37__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE37__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE37__DATA__READ(die)                SPICA_MCU_SPARE37__DATA__GET(SPICA_MCU_SPARE37__READ(die))
#  define SPICA_MCU_SPARE37__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE37__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE37__DATA__RMW(die, fdata)           SPICA_MCU_SPARE37__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE37__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE37__DATA__OFFSET                     0

#define SPICA_MCU_SPARE38__ADDRESS                      0x1ee088
#define SPICA_MCU_SPARE38__DEFAULT                      0x0
#define SPICA_MCU_SPARE38__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE38__ADDRESS)
#define SPICA_MCU_SPARE38__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE38__ADDRESS, (data))
#define SPICA_MCU_SPARE38__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE38__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE38__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE38__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE38__DATA__READ(die)                SPICA_MCU_SPARE38__DATA__GET(SPICA_MCU_SPARE38__READ(die))
#  define SPICA_MCU_SPARE38__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE38__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE38__DATA__RMW(die, fdata)           SPICA_MCU_SPARE38__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE38__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE38__DATA__OFFSET                     0

#define SPICA_MCU_SPARE39__ADDRESS                      0x1ee089
#define SPICA_MCU_SPARE39__DEFAULT                      0x0
#define SPICA_MCU_SPARE39__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE39__ADDRESS)
#define SPICA_MCU_SPARE39__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE39__ADDRESS, (data))
#define SPICA_MCU_SPARE39__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE39__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE39__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE39__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE39__DATA__READ(die)                SPICA_MCU_SPARE39__DATA__GET(SPICA_MCU_SPARE39__READ(die))
#  define SPICA_MCU_SPARE39__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE39__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE39__DATA__RMW(die, fdata)           SPICA_MCU_SPARE39__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE39__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE39__DATA__OFFSET                     0

#define SPICA_MCU_SPARE40__ADDRESS                      0x1ee08a
#define SPICA_MCU_SPARE40__DEFAULT                      0x0
#define SPICA_MCU_SPARE40__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE40__ADDRESS)
#define SPICA_MCU_SPARE40__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE40__ADDRESS, (data))
#define SPICA_MCU_SPARE40__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE40__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE40__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE40__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE40__DATA__READ(die)                SPICA_MCU_SPARE40__DATA__GET(SPICA_MCU_SPARE40__READ(die))
#  define SPICA_MCU_SPARE40__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE40__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE40__DATA__RMW(die, fdata)           SPICA_MCU_SPARE40__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE40__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE40__DATA__OFFSET                     0

#define SPICA_MCU_SPARE41__ADDRESS                      0x1ee08b
#define SPICA_MCU_SPARE41__DEFAULT                      0x0
#define SPICA_MCU_SPARE41__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE41__ADDRESS)
#define SPICA_MCU_SPARE41__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE41__ADDRESS, (data))
#define SPICA_MCU_SPARE41__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE41__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE41__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE41__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE41__DATA__READ(die)                SPICA_MCU_SPARE41__DATA__GET(SPICA_MCU_SPARE41__READ(die))
#  define SPICA_MCU_SPARE41__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE41__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE41__DATA__RMW(die, fdata)           SPICA_MCU_SPARE41__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE41__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE41__DATA__OFFSET                     0

#define SPICA_MCU_SPARE42__ADDRESS                      0x1ee08c
#define SPICA_MCU_SPARE42__DEFAULT                      0x0
#define SPICA_MCU_SPARE42__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE42__ADDRESS)
#define SPICA_MCU_SPARE42__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE42__ADDRESS, (data))
#define SPICA_MCU_SPARE42__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE42__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE42__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE42__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE42__DATA__READ(die)                SPICA_MCU_SPARE42__DATA__GET(SPICA_MCU_SPARE42__READ(die))
#  define SPICA_MCU_SPARE42__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE42__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE42__DATA__RMW(die, fdata)           SPICA_MCU_SPARE42__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE42__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE42__DATA__OFFSET                     0

#define SPICA_MCU_SPARE43__ADDRESS                      0x1ee08d
#define SPICA_MCU_SPARE43__DEFAULT                      0x0
#define SPICA_MCU_SPARE43__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE43__ADDRESS)
#define SPICA_MCU_SPARE43__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE43__ADDRESS, (data))
#define SPICA_MCU_SPARE43__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE43__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE43__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE43__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE43__DATA__READ(die)                SPICA_MCU_SPARE43__DATA__GET(SPICA_MCU_SPARE43__READ(die))
#  define SPICA_MCU_SPARE43__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE43__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE43__DATA__RMW(die, fdata)           SPICA_MCU_SPARE43__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE43__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE43__DATA__OFFSET                     0

#define SPICA_MCU_SPARE44__ADDRESS                      0x1ee08e
#define SPICA_MCU_SPARE44__DEFAULT                      0x0
#define SPICA_MCU_SPARE44__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE44__ADDRESS)
#define SPICA_MCU_SPARE44__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE44__ADDRESS, (data))
#define SPICA_MCU_SPARE44__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE44__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE44__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE44__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE44__DATA__READ(die)                SPICA_MCU_SPARE44__DATA__GET(SPICA_MCU_SPARE44__READ(die))
#  define SPICA_MCU_SPARE44__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE44__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE44__DATA__RMW(die, fdata)           SPICA_MCU_SPARE44__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE44__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE44__DATA__OFFSET                     0

#define SPICA_MCU_SPARE45__ADDRESS                      0x1ee08f
#define SPICA_MCU_SPARE45__DEFAULT                      0x0
#define SPICA_MCU_SPARE45__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE45__ADDRESS)
#define SPICA_MCU_SPARE45__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE45__ADDRESS, (data))
#define SPICA_MCU_SPARE45__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE45__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE45__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE45__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE45__DATA__READ(die)                SPICA_MCU_SPARE45__DATA__GET(SPICA_MCU_SPARE45__READ(die))
#  define SPICA_MCU_SPARE45__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE45__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE45__DATA__RMW(die, fdata)           SPICA_MCU_SPARE45__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE45__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE45__DATA__OFFSET                     0

#define SPICA_MCU_SPARE46__ADDRESS                      0x1ee090
#define SPICA_MCU_SPARE46__DEFAULT                      0x0
#define SPICA_MCU_SPARE46__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE46__ADDRESS)
#define SPICA_MCU_SPARE46__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE46__ADDRESS, (data))
#define SPICA_MCU_SPARE46__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE46__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE46__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE46__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE46__DATA__READ(die)                SPICA_MCU_SPARE46__DATA__GET(SPICA_MCU_SPARE46__READ(die))
#  define SPICA_MCU_SPARE46__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE46__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE46__DATA__RMW(die, fdata)           SPICA_MCU_SPARE46__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE46__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE46__DATA__OFFSET                     0

#define SPICA_MCU_SPARE47__ADDRESS                      0x1ee091
#define SPICA_MCU_SPARE47__DEFAULT                      0x0
#define SPICA_MCU_SPARE47__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE47__ADDRESS)
#define SPICA_MCU_SPARE47__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE47__ADDRESS, (data))
#define SPICA_MCU_SPARE47__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE47__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE47__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE47__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE47__DATA__READ(die)                SPICA_MCU_SPARE47__DATA__GET(SPICA_MCU_SPARE47__READ(die))
#  define SPICA_MCU_SPARE47__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE47__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE47__DATA__RMW(die, fdata)           SPICA_MCU_SPARE47__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE47__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE47__DATA__OFFSET                     0

#define SPICA_MCU_SPARE48__ADDRESS                      0x1ee092
#define SPICA_MCU_SPARE48__DEFAULT                      0x0
#define SPICA_MCU_SPARE48__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE48__ADDRESS)
#define SPICA_MCU_SPARE48__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE48__ADDRESS, (data))
#define SPICA_MCU_SPARE48__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE48__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE48__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE48__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE48__DATA__READ(die)                SPICA_MCU_SPARE48__DATA__GET(SPICA_MCU_SPARE48__READ(die))
#  define SPICA_MCU_SPARE48__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE48__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE48__DATA__RMW(die, fdata)           SPICA_MCU_SPARE48__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE48__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE48__DATA__OFFSET                     0

#define SPICA_MCU_SPARE49__ADDRESS                      0x1ee093
#define SPICA_MCU_SPARE49__DEFAULT                      0x0
#define SPICA_MCU_SPARE49__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE49__ADDRESS)
#define SPICA_MCU_SPARE49__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE49__ADDRESS, (data))
#define SPICA_MCU_SPARE49__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE49__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE49__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE49__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE49__DATA__READ(die)                SPICA_MCU_SPARE49__DATA__GET(SPICA_MCU_SPARE49__READ(die))
#  define SPICA_MCU_SPARE49__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE49__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE49__DATA__RMW(die, fdata)           SPICA_MCU_SPARE49__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE49__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE49__DATA__OFFSET                     0

#define SPICA_MCU_SPARE50__ADDRESS                      0x1ee094
#define SPICA_MCU_SPARE50__DEFAULT                      0x0
#define SPICA_MCU_SPARE50__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE50__ADDRESS)
#define SPICA_MCU_SPARE50__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE50__ADDRESS, (data))
#define SPICA_MCU_SPARE50__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE50__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE50__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE50__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE50__DATA__READ(die)                SPICA_MCU_SPARE50__DATA__GET(SPICA_MCU_SPARE50__READ(die))
#  define SPICA_MCU_SPARE50__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE50__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE50__DATA__RMW(die, fdata)           SPICA_MCU_SPARE50__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE50__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE50__DATA__OFFSET                     0

#define SPICA_MCU_SPARE51__ADDRESS                      0x1ee095
#define SPICA_MCU_SPARE51__DEFAULT                      0x0
#define SPICA_MCU_SPARE51__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE51__ADDRESS)
#define SPICA_MCU_SPARE51__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE51__ADDRESS, (data))
#define SPICA_MCU_SPARE51__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE51__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE51__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE51__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE51__DATA__READ(die)                SPICA_MCU_SPARE51__DATA__GET(SPICA_MCU_SPARE51__READ(die))
#  define SPICA_MCU_SPARE51__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE51__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE51__DATA__RMW(die, fdata)           SPICA_MCU_SPARE51__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE51__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE51__DATA__OFFSET                     0

#define SPICA_MCU_SPARE52__ADDRESS                      0x1ee096
#define SPICA_MCU_SPARE52__DEFAULT                      0x0
#define SPICA_MCU_SPARE52__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE52__ADDRESS)
#define SPICA_MCU_SPARE52__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE52__ADDRESS, (data))
#define SPICA_MCU_SPARE52__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE52__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE52__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE52__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE52__DATA__READ(die)                SPICA_MCU_SPARE52__DATA__GET(SPICA_MCU_SPARE52__READ(die))
#  define SPICA_MCU_SPARE52__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE52__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE52__DATA__RMW(die, fdata)           SPICA_MCU_SPARE52__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE52__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE52__DATA__OFFSET                     0

#define SPICA_MCU_SPARE53__ADDRESS                      0x1ee097
#define SPICA_MCU_SPARE53__DEFAULT                      0x0
#define SPICA_MCU_SPARE53__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE53__ADDRESS)
#define SPICA_MCU_SPARE53__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE53__ADDRESS, (data))
#define SPICA_MCU_SPARE53__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE53__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE53__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE53__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE53__DATA__READ(die)                SPICA_MCU_SPARE53__DATA__GET(SPICA_MCU_SPARE53__READ(die))
#  define SPICA_MCU_SPARE53__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE53__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE53__DATA__RMW(die, fdata)           SPICA_MCU_SPARE53__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE53__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE53__DATA__OFFSET                     0

#define SPICA_MCU_SPARE54__ADDRESS                      0x1ee098
#define SPICA_MCU_SPARE54__DEFAULT                      0x0
#define SPICA_MCU_SPARE54__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE54__ADDRESS)
#define SPICA_MCU_SPARE54__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE54__ADDRESS, (data))
#define SPICA_MCU_SPARE54__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE54__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE54__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE54__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE54__DATA__READ(die)                SPICA_MCU_SPARE54__DATA__GET(SPICA_MCU_SPARE54__READ(die))
#  define SPICA_MCU_SPARE54__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE54__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE54__DATA__RMW(die, fdata)           SPICA_MCU_SPARE54__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE54__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE54__DATA__OFFSET                     0

#define SPICA_MCU_SPARE55__ADDRESS                      0x1ee099
#define SPICA_MCU_SPARE55__DEFAULT                      0x0
#define SPICA_MCU_SPARE55__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE55__ADDRESS)
#define SPICA_MCU_SPARE55__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE55__ADDRESS, (data))
#define SPICA_MCU_SPARE55__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE55__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE55__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE55__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE55__DATA__READ(die)                SPICA_MCU_SPARE55__DATA__GET(SPICA_MCU_SPARE55__READ(die))
#  define SPICA_MCU_SPARE55__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE55__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE55__DATA__RMW(die, fdata)           SPICA_MCU_SPARE55__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE55__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE55__DATA__OFFSET                     0

#define SPICA_MCU_SPARE56__ADDRESS                      0x1ee09a
#define SPICA_MCU_SPARE56__DEFAULT                      0x0
#define SPICA_MCU_SPARE56__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE56__ADDRESS)
#define SPICA_MCU_SPARE56__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE56__ADDRESS, (data))
#define SPICA_MCU_SPARE56__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE56__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE56__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE56__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE56__DATA__READ(die)                SPICA_MCU_SPARE56__DATA__GET(SPICA_MCU_SPARE56__READ(die))
#  define SPICA_MCU_SPARE56__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE56__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE56__DATA__RMW(die, fdata)           SPICA_MCU_SPARE56__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE56__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE56__DATA__OFFSET                     0

#define SPICA_MCU_SPARE57__ADDRESS                      0x1ee09b
#define SPICA_MCU_SPARE57__DEFAULT                      0x0
#define SPICA_MCU_SPARE57__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE57__ADDRESS)
#define SPICA_MCU_SPARE57__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE57__ADDRESS, (data))
#define SPICA_MCU_SPARE57__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE57__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE57__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE57__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE57__DATA__READ(die)                SPICA_MCU_SPARE57__DATA__GET(SPICA_MCU_SPARE57__READ(die))
#  define SPICA_MCU_SPARE57__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE57__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE57__DATA__RMW(die, fdata)           SPICA_MCU_SPARE57__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE57__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE57__DATA__OFFSET                     0

#define SPICA_MCU_SPARE58__ADDRESS                      0x1ee09c
#define SPICA_MCU_SPARE58__DEFAULT                      0x0
#define SPICA_MCU_SPARE58__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE58__ADDRESS)
#define SPICA_MCU_SPARE58__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE58__ADDRESS, (data))
#define SPICA_MCU_SPARE58__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE58__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE58__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE58__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE58__DATA__READ(die)                SPICA_MCU_SPARE58__DATA__GET(SPICA_MCU_SPARE58__READ(die))
#  define SPICA_MCU_SPARE58__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE58__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE58__DATA__RMW(die, fdata)           SPICA_MCU_SPARE58__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE58__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE58__DATA__OFFSET                     0

#define SPICA_MCU_SPARE59__ADDRESS                      0x1ee09d
#define SPICA_MCU_SPARE59__DEFAULT                      0x0
#define SPICA_MCU_SPARE59__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE59__ADDRESS)
#define SPICA_MCU_SPARE59__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE59__ADDRESS, (data))
#define SPICA_MCU_SPARE59__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE59__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE59__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE59__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE59__DATA__READ(die)                SPICA_MCU_SPARE59__DATA__GET(SPICA_MCU_SPARE59__READ(die))
#  define SPICA_MCU_SPARE59__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE59__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE59__DATA__RMW(die, fdata)           SPICA_MCU_SPARE59__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE59__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE59__DATA__OFFSET                     0

#define SPICA_MCU_SPARE60__ADDRESS                      0x1ee09e
#define SPICA_MCU_SPARE60__DEFAULT                      0x0
#define SPICA_MCU_SPARE60__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE60__ADDRESS)
#define SPICA_MCU_SPARE60__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE60__ADDRESS, (data))
#define SPICA_MCU_SPARE60__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE60__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE60__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE60__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE60__DATA__READ(die)                SPICA_MCU_SPARE60__DATA__GET(SPICA_MCU_SPARE60__READ(die))
#  define SPICA_MCU_SPARE60__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE60__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE60__DATA__RMW(die, fdata)           SPICA_MCU_SPARE60__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE60__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE60__DATA__OFFSET                     0

#define SPICA_MCU_SPARE61__ADDRESS                      0x1ee09f
#define SPICA_MCU_SPARE61__DEFAULT                      0x0
#define SPICA_MCU_SPARE61__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE61__ADDRESS)
#define SPICA_MCU_SPARE61__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE61__ADDRESS, (data))
#define SPICA_MCU_SPARE61__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE61__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE61__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE61__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE61__DATA__READ(die)                SPICA_MCU_SPARE61__DATA__GET(SPICA_MCU_SPARE61__READ(die))
#  define SPICA_MCU_SPARE61__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE61__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE61__DATA__RMW(die, fdata)           SPICA_MCU_SPARE61__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE61__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE61__DATA__OFFSET                     0

#define SPICA_MCU_SPARE62__ADDRESS                      0x1ee0a0
#define SPICA_MCU_SPARE62__DEFAULT                      0x0
#define SPICA_MCU_SPARE62__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE62__ADDRESS)
#define SPICA_MCU_SPARE62__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE62__ADDRESS, (data))
#define SPICA_MCU_SPARE62__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE62__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE62__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE62__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE62__DATA__READ(die)                SPICA_MCU_SPARE62__DATA__GET(SPICA_MCU_SPARE62__READ(die))
#  define SPICA_MCU_SPARE62__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE62__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE62__DATA__RMW(die, fdata)           SPICA_MCU_SPARE62__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE62__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE62__DATA__OFFSET                     0

#define SPICA_MCU_SPARE63__ADDRESS                      0x1ee0a1
#define SPICA_MCU_SPARE63__DEFAULT                      0x0
#define SPICA_MCU_SPARE63__READ(die)                  spica_reg_read(die, SPICA_MCU_SPARE63__ADDRESS)
#define SPICA_MCU_SPARE63__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SPARE63__ADDRESS, (data))
#define SPICA_MCU_SPARE63__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SPARE63__ADDRESS, (data), (mask))
#  define SPICA_MCU_SPARE63__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SPARE63__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SPARE63__DATA__READ(die)                SPICA_MCU_SPARE63__DATA__GET(SPICA_MCU_SPARE63__READ(die))
#  define SPICA_MCU_SPARE63__DATA__WRITE(die, fdata)           SPICA_MCU_SPARE63__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE63__DATA__RMW(die, fdata)           SPICA_MCU_SPARE63__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SPARE63__DATA__MASK                       0xffff
#  define SPICA_MCU_SPARE63__DATA__OFFSET                     0

#define SPICA_MCU_PDEBUG_PC0__ADDRESS                      0x1ee0a2
#define SPICA_MCU_PDEBUG_PC0__DEFAULT                      0x0
#define SPICA_MCU_PDEBUG_PC0__READ(die)                  spica_reg_read(die, SPICA_MCU_PDEBUG_PC0__ADDRESS)
#define SPICA_MCU_PDEBUG_PC0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_PDEBUG_PC0__ADDRESS, (data))
#define SPICA_MCU_PDEBUG_PC0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_PDEBUG_PC0__ADDRESS, (data), (mask))
#  define SPICA_MCU_PDEBUG_PC0__PC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_PDEBUG_PC0__PC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_PDEBUG_PC0__PC__READ(die)                SPICA_MCU_PDEBUG_PC0__PC__GET(SPICA_MCU_PDEBUG_PC0__READ(die))
#  define SPICA_MCU_PDEBUG_PC0__PC__WRITE(die, fdata)           SPICA_MCU_PDEBUG_PC0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_PDEBUG_PC0__PC__RMW(die, fdata)           SPICA_MCU_PDEBUG_PC0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_PDEBUG_PC0__PC__MASK                       0xffff
#  define SPICA_MCU_PDEBUG_PC0__PC__OFFSET                     0

#define SPICA_MCU_PDEBUG_PC1__ADDRESS                      0x1ee0a3
#define SPICA_MCU_PDEBUG_PC1__DEFAULT                      0x0
#define SPICA_MCU_PDEBUG_PC1__READ(die)                  spica_reg_read(die, SPICA_MCU_PDEBUG_PC1__ADDRESS)
#define SPICA_MCU_PDEBUG_PC1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_PDEBUG_PC1__ADDRESS, (data))
#define SPICA_MCU_PDEBUG_PC1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_PDEBUG_PC1__ADDRESS, (data), (mask))
#  define SPICA_MCU_PDEBUG_PC1__PC__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_PDEBUG_PC1__PC__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_PDEBUG_PC1__PC__READ(die)                SPICA_MCU_PDEBUG_PC1__PC__GET(SPICA_MCU_PDEBUG_PC1__READ(die))
#  define SPICA_MCU_PDEBUG_PC1__PC__WRITE(die, fdata)           SPICA_MCU_PDEBUG_PC1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_PDEBUG_PC1__PC__RMW(die, fdata)           SPICA_MCU_PDEBUG_PC1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_PDEBUG_PC1__PC__MASK                       0xffff
#  define SPICA_MCU_PDEBUG_PC1__PC__OFFSET                     0

#define SPICA_RXMBOX_RXMAILBOX__ADDRESS                      0x1ee400
#define SPICA_RXMBOX_RXMAILBOX__DEFAULT                      0x0
#define SPICA_RXMBOX_RXMAILBOX__READ(die)                  spica_reg_read(die, SPICA_RXMBOX_RXMAILBOX__ADDRESS)
#define SPICA_RXMBOX_RXMAILBOX__WRITE(die, data)             spica_reg_write(die, SPICA_RXMBOX_RXMAILBOX__ADDRESS, (data))
#define SPICA_RXMBOX_RXMAILBOX__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_RXMBOX_RXMAILBOX__ADDRESS, (data), (mask))
#  define SPICA_RXMBOX_RXMAILBOX__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_RXMBOX_RXMAILBOX__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_RXMBOX_RXMAILBOX__DATA__READ(die)                SPICA_RXMBOX_RXMAILBOX__DATA__GET(SPICA_RXMBOX_RXMAILBOX__READ(die))
#  define SPICA_RXMBOX_RXMAILBOX__DATA__WRITE(die, fdata)           SPICA_RXMBOX_RXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_RXMBOX_RXMAILBOX__DATA__RMW(die, fdata)           SPICA_RXMBOX_RXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_RXMBOX_RXMAILBOX__DATA__MASK                       0xffff
#  define SPICA_RXMBOX_RXMAILBOX__DATA__OFFSET                     0

#define SPICA_TXMBOX_TXMAILBOX__ADDRESS                      0x1ee800
#define SPICA_TXMBOX_TXMAILBOX__DEFAULT                      0x0
#define SPICA_TXMBOX_TXMAILBOX__READ(die)                  spica_reg_read(die, SPICA_TXMBOX_TXMAILBOX__ADDRESS)
#define SPICA_TXMBOX_TXMAILBOX__WRITE(die, data)             spica_reg_write(die, SPICA_TXMBOX_TXMAILBOX__ADDRESS, (data))
#define SPICA_TXMBOX_TXMAILBOX__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TXMBOX_TXMAILBOX__ADDRESS, (data), (mask))
#  define SPICA_TXMBOX_TXMAILBOX__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TXMBOX_TXMAILBOX__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TXMBOX_TXMAILBOX__DATA__READ(die)                SPICA_TXMBOX_TXMAILBOX__DATA__GET(SPICA_TXMBOX_TXMAILBOX__READ(die))
#  define SPICA_TXMBOX_TXMAILBOX__DATA__WRITE(die, fdata)           SPICA_TXMBOX_TXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TXMBOX_TXMAILBOX__DATA__RMW(die, fdata)           SPICA_TXMBOX_TXMAILBOX__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TXMBOX_TXMAILBOX__DATA__MASK                       0xffff
#  define SPICA_TXMBOX_TXMAILBOX__DATA__OFFSET                     0

#define SPICA_APB_SPI_CONFIG0__ADDRESS                      0x1ef800
#define SPICA_APB_SPI_CONFIG0__DEFAULT                      0x0
#define SPICA_APB_SPI_CONFIG0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_CONFIG0__ADDRESS)
#define SPICA_APB_SPI_CONFIG0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_CONFIG0__ADDRESS, (data))
#define SPICA_APB_SPI_CONFIG0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_CONFIG0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__READ(die)                SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG0__MANUAL_START_EN__OFFSET                     15
#  define SPICA_APB_SPI_CONFIG0__MANUAL_CS__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_APB_SPI_CONFIG0__MANUAL_CS__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_APB_SPI_CONFIG0__MANUAL_CS__READ(die)                SPICA_APB_SPI_CONFIG0__MANUAL_CS__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__MANUAL_CS__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_APB_SPI_CONFIG0__MANUAL_CS__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_APB_SPI_CONFIG0__MANUAL_CS__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG0__MANUAL_CS__OFFSET                     14
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__SET(rdata, fdata)         (((rdata) & 0xc3ff) | (((uint32_t)(fdata) << 10) & 0x3c00))
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__GET(rdata)                (((rdata) >> 10) & 0xf)
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__READ(die)                SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<10, 0x3c00)
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<10, 0x3c00)
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__MASK                       0xf
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_CS__OFFSET                     10
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__READ(die)                SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG0__PERIPHERAL_SEL_DECODE__OFFSET                     9
#  define SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__READ(die)                SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG0__REF_CLK_SEL__OFFSET                     8
#  define SPICA_APB_SPI_CONFIG0__WORD_SIZE__SET(rdata, fdata)         (((rdata) & 0xff3f) | (((uint32_t)(fdata) << 6) & 0xc0))
#  define SPICA_APB_SPI_CONFIG0__WORD_SIZE__GET(rdata)                (((rdata) >> 6) & 0x3)
#  define SPICA_APB_SPI_CONFIG0__WORD_SIZE__READ(die)                SPICA_APB_SPI_CONFIG0__WORD_SIZE__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__WORD_SIZE__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<6, 0xc0)
#  define SPICA_APB_SPI_CONFIG0__WORD_SIZE__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<6, 0xc0)
#  define SPICA_APB_SPI_CONFIG0__WORD_SIZE__MASK                       0x3
#  define SPICA_APB_SPI_CONFIG0__WORD_SIZE__OFFSET                     6
#  define SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__SET(rdata, fdata)         (((rdata) & 0xffc7) | (((uint32_t)(fdata) << 3) & 0x38))
#  define SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__GET(rdata)                (((rdata) >> 3) & 0x7)
#  define SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__READ(die)                SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<3, 0x38)
#  define SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<3, 0x38)
#  define SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__MASK                       0x7
#  define SPICA_APB_SPI_CONFIG0__BAUD_RATE_DIV__OFFSET                     3
#  define SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__READ(die)                SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG0__CLOCK_PHASE__OFFSET                     2
#  define SPICA_APB_SPI_CONFIG0__CLOCK_POL__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_APB_SPI_CONFIG0__CLOCK_POL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_APB_SPI_CONFIG0__CLOCK_POL__READ(die)                SPICA_APB_SPI_CONFIG0__CLOCK_POL__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__CLOCK_POL__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_APB_SPI_CONFIG0__CLOCK_POL__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_APB_SPI_CONFIG0__CLOCK_POL__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG0__CLOCK_POL__OFFSET                     1
#  define SPICA_APB_SPI_CONFIG0__MODE_SEL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_CONFIG0__MODE_SEL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_CONFIG0__MODE_SEL__READ(die)                SPICA_APB_SPI_CONFIG0__MODE_SEL__GET(SPICA_APB_SPI_CONFIG0__READ(die))
#  define SPICA_APB_SPI_CONFIG0__MODE_SEL__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_CONFIG0__MODE_SEL__RMW(die, fdata)           SPICA_APB_SPI_CONFIG0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_CONFIG0__MODE_SEL__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG0__MODE_SEL__OFFSET                     0

#define SPICA_APB_SPI_CONFIG1__ADDRESS                      0x1ef801
#define SPICA_APB_SPI_CONFIG1__DEFAULT                      0x0
#define SPICA_APB_SPI_CONFIG1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_CONFIG1__ADDRESS)
#define SPICA_APB_SPI_CONFIG1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_CONFIG1__ADDRESS, (data))
#define SPICA_APB_SPI_CONFIG1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_CONFIG1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_CONFIG1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x3) | (((uint32_t)(fdata) << 2) & 0xfffc))
#  define SPICA_APB_SPI_CONFIG1__RSRVD1__GET(rdata)                (((rdata) >> 2) & 0x3fff)
#  define SPICA_APB_SPI_CONFIG1__RSRVD1__READ(die)                SPICA_APB_SPI_CONFIG1__RSRVD1__GET(SPICA_APB_SPI_CONFIG1__READ(die))
#  define SPICA_APB_SPI_CONFIG1__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG1__RMW(die, (fdata)<<2, 0xfffc)
#  define SPICA_APB_SPI_CONFIG1__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_CONFIG1__RMW(die, (fdata)<<2, 0xfffc)
#  define SPICA_APB_SPI_CONFIG1__RSRVD1__MASK                       0x3fff
#  define SPICA_APB_SPI_CONFIG1__RSRVD1__OFFSET                     2
#  define SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__READ(die)                SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__GET(SPICA_APB_SPI_CONFIG1__READ(die))
#  define SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG1__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__RMW(die, fdata)           SPICA_APB_SPI_CONFIG1__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG1__MODEFAIL_GEN_EN__OFFSET                     1
#  define SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__READ(die)                SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__GET(SPICA_APB_SPI_CONFIG1__READ(die))
#  define SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__WRITE(die, fdata)           SPICA_APB_SPI_CONFIG1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__RMW(die, fdata)           SPICA_APB_SPI_CONFIG1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__MASK                       0x1
#  define SPICA_APB_SPI_CONFIG1__MANUAL_START_CMD__OFFSET                     0

#define SPICA_APB_SPI_INT_STATUS0__ADDRESS                      0x1ef802
#define SPICA_APB_SPI_INT_STATUS0__DEFAULT                      0x4
#define SPICA_APB_SPI_INT_STATUS0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_INT_STATUS0__ADDRESS)
#define SPICA_APB_SPI_INT_STATUS0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_INT_STATUS0__ADDRESS, (data))
#define SPICA_APB_SPI_INT_STATUS0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_INT_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_INT_STATUS0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7f) | (((uint32_t)(fdata) << 7) & 0xff80))
#  define SPICA_APB_SPI_INT_STATUS0__RSRVD1__GET(rdata)                (((rdata) >> 7) & 0x1ff)
#  define SPICA_APB_SPI_INT_STATUS0__RSRVD1__READ(die)                SPICA_APB_SPI_INT_STATUS0__RSRVD1__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<7, 0xff80)
#  define SPICA_APB_SPI_INT_STATUS0__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<7, 0xff80)
#  define SPICA_APB_SPI_INT_STATUS0__RSRVD1__MASK                       0x1ff
#  define SPICA_APB_SPI_INT_STATUS0__RSRVD1__OFFSET                     7
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__READ(die)                SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<6, 0x40)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<6, 0x40)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_UFLW__OFFSET                     6
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__READ(die)                SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_FULL__OFFSET                     5
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__READ(die)                SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS0__RX_FIFO_NOTEMPTY__OFFSET                     4
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__READ(die)                SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_FULL__OFFSET                     3
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__READ(die)                SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS0__TX_FIFO_NOTFULL__OFFSET                     2
#  define SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__READ(die)                SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS0__MODE_FAIL__OFFSET                     1
#  define SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__READ(die)                SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__GET(SPICA_APB_SPI_INT_STATUS0__READ(die))
#  define SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS0__RX_OVFLW__OFFSET                     0

#define SPICA_APB_SPI_INT_STATUS1__ADDRESS                      0x1ef803
#define SPICA_APB_SPI_INT_STATUS1__DEFAULT                      0x0
#define SPICA_APB_SPI_INT_STATUS1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_INT_STATUS1__ADDRESS)
#define SPICA_APB_SPI_INT_STATUS1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_INT_STATUS1__ADDRESS, (data))
#define SPICA_APB_SPI_INT_STATUS1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_INT_STATUS1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_INT_STATUS1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_APB_SPI_INT_STATUS1__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_APB_SPI_INT_STATUS1__RSRVD1__READ(die)                SPICA_APB_SPI_INT_STATUS1__RSRVD1__GET(SPICA_APB_SPI_INT_STATUS1__READ(die))
#  define SPICA_APB_SPI_INT_STATUS1__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_INT_STATUS1__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_INT_STATUS1__RSRVD1__MASK                       0x7fff
#  define SPICA_APB_SPI_INT_STATUS1__RSRVD1__OFFSET                     1
#  define SPICA_APB_SPI_INT_STATUS1__UNUSED__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_INT_STATUS1__UNUSED__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_INT_STATUS1__UNUSED__READ(die)                SPICA_APB_SPI_INT_STATUS1__UNUSED__GET(SPICA_APB_SPI_INT_STATUS1__READ(die))
#  define SPICA_APB_SPI_INT_STATUS1__UNUSED__WRITE(die, fdata)           SPICA_APB_SPI_INT_STATUS1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_INT_STATUS1__UNUSED__RMW(die, fdata)           SPICA_APB_SPI_INT_STATUS1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_INT_STATUS1__UNUSED__MASK                       0x1
#  define SPICA_APB_SPI_INT_STATUS1__UNUSED__OFFSET                     0

#define SPICA_APB_SPI_SPI_EN0__ADDRESS                      0x1ef80a
#define SPICA_APB_SPI_SPI_EN0__DEFAULT                      0x0
#define SPICA_APB_SPI_SPI_EN0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_SPI_EN0__ADDRESS)
#define SPICA_APB_SPI_SPI_EN0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_SPI_EN0__ADDRESS, (data))
#define SPICA_APB_SPI_SPI_EN0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_SPI_EN0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_SPI_EN0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_APB_SPI_SPI_EN0__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_APB_SPI_SPI_EN0__RSRVD1__READ(die)                SPICA_APB_SPI_SPI_EN0__RSRVD1__GET(SPICA_APB_SPI_SPI_EN0__READ(die))
#  define SPICA_APB_SPI_SPI_EN0__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_SPI_EN0__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_SPI_EN0__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_SPI_EN0__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_SPI_EN0__RSRVD1__MASK                       0x7fff
#  define SPICA_APB_SPI_SPI_EN0__RSRVD1__OFFSET                     1
#  define SPICA_APB_SPI_SPI_EN0__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_SPI_EN0__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_SPI_EN0__ENABLE__READ(die)                SPICA_APB_SPI_SPI_EN0__ENABLE__GET(SPICA_APB_SPI_SPI_EN0__READ(die))
#  define SPICA_APB_SPI_SPI_EN0__ENABLE__WRITE(die, fdata)           SPICA_APB_SPI_SPI_EN0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_SPI_EN0__ENABLE__RMW(die, fdata)           SPICA_APB_SPI_SPI_EN0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_SPI_EN0__ENABLE__MASK                       0x1
#  define SPICA_APB_SPI_SPI_EN0__ENABLE__OFFSET                     0

#define SPICA_APB_SPI_SPI_EN1__ADDRESS                      0x1ef80b
#define SPICA_APB_SPI_SPI_EN1__DEFAULT                      0x0
#define SPICA_APB_SPI_SPI_EN1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_SPI_EN1__ADDRESS)
#define SPICA_APB_SPI_SPI_EN1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_SPI_EN1__ADDRESS, (data))
#define SPICA_APB_SPI_SPI_EN1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_SPI_EN1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_SPI_EN1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_APB_SPI_SPI_EN1__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_APB_SPI_SPI_EN1__RSRVD1__READ(die)                SPICA_APB_SPI_SPI_EN1__RSRVD1__GET(SPICA_APB_SPI_SPI_EN1__READ(die))
#  define SPICA_APB_SPI_SPI_EN1__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_SPI_EN1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_SPI_EN1__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_SPI_EN1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_SPI_EN1__RSRVD1__MASK                       0x7fff
#  define SPICA_APB_SPI_SPI_EN1__RSRVD1__OFFSET                     1
#  define SPICA_APB_SPI_SPI_EN1__UNUSED__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_SPI_EN1__UNUSED__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_SPI_EN1__UNUSED__READ(die)                SPICA_APB_SPI_SPI_EN1__UNUSED__GET(SPICA_APB_SPI_SPI_EN1__READ(die))
#  define SPICA_APB_SPI_SPI_EN1__UNUSED__WRITE(die, fdata)           SPICA_APB_SPI_SPI_EN1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_SPI_EN1__UNUSED__RMW(die, fdata)           SPICA_APB_SPI_SPI_EN1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_SPI_EN1__UNUSED__MASK                       0x1
#  define SPICA_APB_SPI_SPI_EN1__UNUSED__OFFSET                     0

#define SPICA_APB_SPI_DELAY0__ADDRESS                      0x1ef80c
#define SPICA_APB_SPI_DELAY0__DEFAULT                      0x0
#define SPICA_APB_SPI_DELAY0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_DELAY0__ADDRESS)
#define SPICA_APB_SPI_DELAY0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_DELAY0__ADDRESS, (data))
#define SPICA_APB_SPI_DELAY0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_DELAY0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_DELAY0__D_AFTER__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_APB_SPI_DELAY0__D_AFTER__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_APB_SPI_DELAY0__D_AFTER__READ(die)                SPICA_APB_SPI_DELAY0__D_AFTER__GET(SPICA_APB_SPI_DELAY0__READ(die))
#  define SPICA_APB_SPI_DELAY0__D_AFTER__WRITE(die, fdata)           SPICA_APB_SPI_DELAY0__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_APB_SPI_DELAY0__D_AFTER__RMW(die, fdata)           SPICA_APB_SPI_DELAY0__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_APB_SPI_DELAY0__D_AFTER__MASK                       0xff
#  define SPICA_APB_SPI_DELAY0__D_AFTER__OFFSET                     8
#  define SPICA_APB_SPI_DELAY0__D_INIT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_APB_SPI_DELAY0__D_INIT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_APB_SPI_DELAY0__D_INIT__READ(die)                SPICA_APB_SPI_DELAY0__D_INIT__GET(SPICA_APB_SPI_DELAY0__READ(die))
#  define SPICA_APB_SPI_DELAY0__D_INIT__WRITE(die, fdata)           SPICA_APB_SPI_DELAY0__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_APB_SPI_DELAY0__D_INIT__RMW(die, fdata)           SPICA_APB_SPI_DELAY0__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_APB_SPI_DELAY0__D_INIT__MASK                       0xff
#  define SPICA_APB_SPI_DELAY0__D_INIT__OFFSET                     0

#define SPICA_APB_SPI_DELAY1__ADDRESS                      0x1ef80d
#define SPICA_APB_SPI_DELAY1__DEFAULT                      0x0
#define SPICA_APB_SPI_DELAY1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_DELAY1__ADDRESS)
#define SPICA_APB_SPI_DELAY1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_DELAY1__ADDRESS, (data))
#define SPICA_APB_SPI_DELAY1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_DELAY1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_DELAY1__D_NSS__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_APB_SPI_DELAY1__D_NSS__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_APB_SPI_DELAY1__D_NSS__READ(die)                SPICA_APB_SPI_DELAY1__D_NSS__GET(SPICA_APB_SPI_DELAY1__READ(die))
#  define SPICA_APB_SPI_DELAY1__D_NSS__WRITE(die, fdata)           SPICA_APB_SPI_DELAY1__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_APB_SPI_DELAY1__D_NSS__RMW(die, fdata)           SPICA_APB_SPI_DELAY1__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_APB_SPI_DELAY1__D_NSS__MASK                       0xff
#  define SPICA_APB_SPI_DELAY1__D_NSS__OFFSET                     8
#  define SPICA_APB_SPI_DELAY1__D_BTW__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_APB_SPI_DELAY1__D_BTW__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_APB_SPI_DELAY1__D_BTW__READ(die)                SPICA_APB_SPI_DELAY1__D_BTW__GET(SPICA_APB_SPI_DELAY1__READ(die))
#  define SPICA_APB_SPI_DELAY1__D_BTW__WRITE(die, fdata)           SPICA_APB_SPI_DELAY1__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_APB_SPI_DELAY1__D_BTW__RMW(die, fdata)           SPICA_APB_SPI_DELAY1__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_APB_SPI_DELAY1__D_BTW__MASK                       0xff
#  define SPICA_APB_SPI_DELAY1__D_BTW__OFFSET                     0

#define SPICA_APB_SPI_TX_DATA0__ADDRESS                      0x1ef80e
#define SPICA_APB_SPI_TX_DATA0__DEFAULT                      0x0
#define SPICA_APB_SPI_TX_DATA0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_TX_DATA0__ADDRESS)
#define SPICA_APB_SPI_TX_DATA0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_TX_DATA0__ADDRESS, (data))
#define SPICA_APB_SPI_TX_DATA0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_TX_DATA0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_TX_DATA0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_APB_SPI_TX_DATA0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_APB_SPI_TX_DATA0__DATA__READ(die)                SPICA_APB_SPI_TX_DATA0__DATA__GET(SPICA_APB_SPI_TX_DATA0__READ(die))
#  define SPICA_APB_SPI_TX_DATA0__DATA__WRITE(die, fdata)           SPICA_APB_SPI_TX_DATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_TX_DATA0__DATA__RMW(die, fdata)           SPICA_APB_SPI_TX_DATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_TX_DATA0__DATA__MASK                       0xffff
#  define SPICA_APB_SPI_TX_DATA0__DATA__OFFSET                     0

#define SPICA_APB_SPI_TX_DATA1__ADDRESS                      0x1ef80f
#define SPICA_APB_SPI_TX_DATA1__DEFAULT                      0x0
#define SPICA_APB_SPI_TX_DATA1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_TX_DATA1__ADDRESS)
#define SPICA_APB_SPI_TX_DATA1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_TX_DATA1__ADDRESS, (data))
#define SPICA_APB_SPI_TX_DATA1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_TX_DATA1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_TX_DATA1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_APB_SPI_TX_DATA1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_APB_SPI_TX_DATA1__DATA__READ(die)                SPICA_APB_SPI_TX_DATA1__DATA__GET(SPICA_APB_SPI_TX_DATA1__READ(die))
#  define SPICA_APB_SPI_TX_DATA1__DATA__WRITE(die, fdata)           SPICA_APB_SPI_TX_DATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_TX_DATA1__DATA__RMW(die, fdata)           SPICA_APB_SPI_TX_DATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_TX_DATA1__DATA__MASK                       0xffff
#  define SPICA_APB_SPI_TX_DATA1__DATA__OFFSET                     0

#define SPICA_APB_SPI_RX_DATA0__ADDRESS                      0x1ef810
#define SPICA_APB_SPI_RX_DATA0__DEFAULT                      0x0
#define SPICA_APB_SPI_RX_DATA0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_RX_DATA0__ADDRESS)
#define SPICA_APB_SPI_RX_DATA0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_RX_DATA0__ADDRESS, (data))
#define SPICA_APB_SPI_RX_DATA0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_RX_DATA0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_RX_DATA0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_APB_SPI_RX_DATA0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_APB_SPI_RX_DATA0__DATA__READ(die)                SPICA_APB_SPI_RX_DATA0__DATA__GET(SPICA_APB_SPI_RX_DATA0__READ(die))
#  define SPICA_APB_SPI_RX_DATA0__DATA__WRITE(die, fdata)           SPICA_APB_SPI_RX_DATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_RX_DATA0__DATA__RMW(die, fdata)           SPICA_APB_SPI_RX_DATA0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_RX_DATA0__DATA__MASK                       0xffff
#  define SPICA_APB_SPI_RX_DATA0__DATA__OFFSET                     0

#define SPICA_APB_SPI_RX_DATA1__ADDRESS                      0x1ef811
#define SPICA_APB_SPI_RX_DATA1__DEFAULT                      0x0
#define SPICA_APB_SPI_RX_DATA1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_RX_DATA1__ADDRESS)
#define SPICA_APB_SPI_RX_DATA1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_RX_DATA1__ADDRESS, (data))
#define SPICA_APB_SPI_RX_DATA1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_RX_DATA1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_RX_DATA1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_APB_SPI_RX_DATA1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_APB_SPI_RX_DATA1__DATA__READ(die)                SPICA_APB_SPI_RX_DATA1__DATA__GET(SPICA_APB_SPI_RX_DATA1__READ(die))
#  define SPICA_APB_SPI_RX_DATA1__DATA__WRITE(die, fdata)           SPICA_APB_SPI_RX_DATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_RX_DATA1__DATA__RMW(die, fdata)           SPICA_APB_SPI_RX_DATA1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_APB_SPI_RX_DATA1__DATA__MASK                       0xffff
#  define SPICA_APB_SPI_RX_DATA1__DATA__OFFSET                     0

#define SPICA_APB_SPI_TX_THRESHOLD0__ADDRESS                      0x1ef814
#define SPICA_APB_SPI_TX_THRESHOLD0__DEFAULT                      0x1
#define SPICA_APB_SPI_TX_THRESHOLD0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_TX_THRESHOLD0__ADDRESS)
#define SPICA_APB_SPI_TX_THRESHOLD0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_TX_THRESHOLD0__ADDRESS, (data))
#define SPICA_APB_SPI_TX_THRESHOLD0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_TX_THRESHOLD0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__READ(die)                SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__GET(SPICA_APB_SPI_TX_THRESHOLD0__READ(die))
#  define SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD0__RMW(die, (fdata)<<3, 0xfff8)
#  define SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD0__RMW(die, (fdata)<<3, 0xfff8)
#  define SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__MASK                       0x1fff
#  define SPICA_APB_SPI_TX_THRESHOLD0__RSRVD1__OFFSET                     3
#  define SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__READ(die)                SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__GET(SPICA_APB_SPI_TX_THRESHOLD0__READ(die))
#  define SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__WRITE(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD0__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__RMW(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD0__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__MASK                       0x7
#  define SPICA_APB_SPI_TX_THRESHOLD0__LEVEL__OFFSET                     0

#define SPICA_APB_SPI_TX_THRESHOLD1__ADDRESS                      0x1ef815
#define SPICA_APB_SPI_TX_THRESHOLD1__DEFAULT                      0x0
#define SPICA_APB_SPI_TX_THRESHOLD1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_TX_THRESHOLD1__ADDRESS)
#define SPICA_APB_SPI_TX_THRESHOLD1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_TX_THRESHOLD1__ADDRESS, (data))
#define SPICA_APB_SPI_TX_THRESHOLD1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_TX_THRESHOLD1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__READ(die)                SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__GET(SPICA_APB_SPI_TX_THRESHOLD1__READ(die))
#  define SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__MASK                       0x7fff
#  define SPICA_APB_SPI_TX_THRESHOLD1__RSRVD1__OFFSET                     1
#  define SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__READ(die)                SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__GET(SPICA_APB_SPI_TX_THRESHOLD1__READ(die))
#  define SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__WRITE(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__RMW(die, fdata)           SPICA_APB_SPI_TX_THRESHOLD1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__MASK                       0x1
#  define SPICA_APB_SPI_TX_THRESHOLD1__UNUSED__OFFSET                     0

#define SPICA_APB_SPI_RX_THRESHOLD0__ADDRESS                      0x1ef816
#define SPICA_APB_SPI_RX_THRESHOLD0__DEFAULT                      0x1
#define SPICA_APB_SPI_RX_THRESHOLD0__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_RX_THRESHOLD0__ADDRESS)
#define SPICA_APB_SPI_RX_THRESHOLD0__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_RX_THRESHOLD0__ADDRESS, (data))
#define SPICA_APB_SPI_RX_THRESHOLD0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_RX_THRESHOLD0__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x7) | (((uint32_t)(fdata) << 3) & 0xfff8))
#  define SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__GET(rdata)                (((rdata) >> 3) & 0x1fff)
#  define SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__READ(die)                SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__GET(SPICA_APB_SPI_RX_THRESHOLD0__READ(die))
#  define SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD0__RMW(die, (fdata)<<3, 0xfff8)
#  define SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD0__RMW(die, (fdata)<<3, 0xfff8)
#  define SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__MASK                       0x1fff
#  define SPICA_APB_SPI_RX_THRESHOLD0__RSRVD1__OFFSET                     3
#  define SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__READ(die)                SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__GET(SPICA_APB_SPI_RX_THRESHOLD0__READ(die))
#  define SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__WRITE(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD0__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__RMW(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD0__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__MASK                       0x7
#  define SPICA_APB_SPI_RX_THRESHOLD0__LEVEL__OFFSET                     0

#define SPICA_APB_SPI_RX_THRESHOLD1__ADDRESS                      0x1ef817
#define SPICA_APB_SPI_RX_THRESHOLD1__DEFAULT                      0x0
#define SPICA_APB_SPI_RX_THRESHOLD1__READ(die)                  spica_reg_read(die, SPICA_APB_SPI_RX_THRESHOLD1__ADDRESS)
#define SPICA_APB_SPI_RX_THRESHOLD1__WRITE(die, data)             spica_reg_write(die, SPICA_APB_SPI_RX_THRESHOLD1__ADDRESS, (data))
#define SPICA_APB_SPI_RX_THRESHOLD1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_APB_SPI_RX_THRESHOLD1__ADDRESS, (data), (mask))
#  define SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__SET(rdata, fdata)         (((rdata) & 0x1) | (((uint32_t)(fdata) << 1) & 0xfffe))
#  define SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__GET(rdata)                (((rdata) >> 1) & 0x7fff)
#  define SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__READ(die)                SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__GET(SPICA_APB_SPI_RX_THRESHOLD1__READ(die))
#  define SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__WRITE(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__RMW(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD1__RMW(die, (fdata)<<1, 0xfffe)
#  define SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__MASK                       0x7fff
#  define SPICA_APB_SPI_RX_THRESHOLD1__RSRVD1__OFFSET                     1
#  define SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__READ(die)                SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__GET(SPICA_APB_SPI_RX_THRESHOLD1__READ(die))
#  define SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__WRITE(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__RMW(die, fdata)           SPICA_APB_SPI_RX_THRESHOLD1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__MASK                       0x1
#  define SPICA_APB_SPI_RX_THRESHOLD1__UNUSED__OFFSET                     0

#define SPICA_MCU_SP1_UID__ADDRESS                      0x1ee063
#define SPICA_MCU_SP1_UID__DEFAULT                      0x0
#define SPICA_MCU_SP1_UID__READ(die)                  spica_reg_read(die, SPICA_MCU_SP1_UID__ADDRESS)
#define SPICA_MCU_SP1_UID__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP1_UID__ADDRESS, (data))
#define SPICA_MCU_SP1_UID__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP1_UID__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP1_UID__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SP1_UID__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SP1_UID__VALUE__READ(die)                SPICA_MCU_SP1_UID__VALUE__GET(SPICA_MCU_SP1_UID__READ(die))
#  define SPICA_MCU_SP1_UID__VALUE__WRITE(die, fdata)           SPICA_MCU_SP1_UID__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP1_UID__VALUE__RMW(die, fdata)           SPICA_MCU_SP1_UID__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP1_UID__VALUE__MASK                       0xffff
#  define SPICA_MCU_SP1_UID__VALUE__OFFSET                     0

#define SPICA_MCU_SP2_LOOP_COUNT__ADDRESS                      0x1ee064
#define SPICA_MCU_SP2_LOOP_COUNT__DEFAULT                      0x0
#define SPICA_MCU_SP2_LOOP_COUNT__READ(die)                  spica_reg_read(die, SPICA_MCU_SP2_LOOP_COUNT__ADDRESS)
#define SPICA_MCU_SP2_LOOP_COUNT__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP2_LOOP_COUNT__ADDRESS, (data))
#define SPICA_MCU_SP2_LOOP_COUNT__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP2_LOOP_COUNT__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP2_LOOP_COUNT__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SP2_LOOP_COUNT__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SP2_LOOP_COUNT__COUNT__READ(die)                SPICA_MCU_SP2_LOOP_COUNT__COUNT__GET(SPICA_MCU_SP2_LOOP_COUNT__READ(die))
#  define SPICA_MCU_SP2_LOOP_COUNT__COUNT__WRITE(die, fdata)           SPICA_MCU_SP2_LOOP_COUNT__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP2_LOOP_COUNT__COUNT__RMW(die, fdata)           SPICA_MCU_SP2_LOOP_COUNT__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP2_LOOP_COUNT__COUNT__MASK                       0xffff
#  define SPICA_MCU_SP2_LOOP_COUNT__COUNT__OFFSET                     0

#define SPICA_MCU_SP3_FW_INFO__ADDRESS                      0x1ee065
#define SPICA_MCU_SP3_FW_INFO__DEFAULT                      0x0
#define SPICA_MCU_SP3_FW_INFO__READ(die)                  spica_reg_read(die, SPICA_MCU_SP3_FW_INFO__ADDRESS)
#define SPICA_MCU_SP3_FW_INFO__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP3_FW_INFO__ADDRESS, (data))
#define SPICA_MCU_SP3_FW_INFO__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP3_FW_INFO__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP3_FW_INFO__ADDRESS__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SP3_FW_INFO__ADDRESS__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SP3_FW_INFO__ADDRESS__READ(die)                SPICA_MCU_SP3_FW_INFO__ADDRESS__GET(SPICA_MCU_SP3_FW_INFO__READ(die))
#  define SPICA_MCU_SP3_FW_INFO__ADDRESS__WRITE(die, fdata)           SPICA_MCU_SP3_FW_INFO__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP3_FW_INFO__ADDRESS__RMW(die, fdata)           SPICA_MCU_SP3_FW_INFO__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP3_FW_INFO__ADDRESS__MASK                       0xffff
#  define SPICA_MCU_SP3_FW_INFO__ADDRESS__OFFSET                     0

#define SPICA_MCU_SP4_FW_CFG0__ADDRESS                      0x1ee066
#define SPICA_MCU_SP4_FW_CFG0__DEFAULT                      0x0
#define SPICA_MCU_SP4_FW_CFG0__READ(die)                  spica_reg_read(die, SPICA_MCU_SP4_FW_CFG0__ADDRESS)
#define SPICA_MCU_SP4_FW_CFG0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP4_FW_CFG0__ADDRESS, (data))
#define SPICA_MCU_SP4_FW_CFG0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP4_FW_CFG0__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__READ(die)                SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__GET(SPICA_MCU_SP4_FW_CFG0__READ(die))
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__WRITE(die, fdata)           SPICA_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__RMW(die, fdata)           SPICA_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<7, 0x80)
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__MASK                       0x1
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_OVERRIDE__OFFSET                     7
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__SET(rdata, fdata)         (((rdata) & 0xff80) | (((uint32_t)(fdata) << 0) & 0x7f))
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__GET(rdata)                (((rdata) >> 0) & 0x7f)
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__READ(die)                SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__GET(SPICA_MCU_SP4_FW_CFG0__READ(die))
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__WRITE(die, fdata)           SPICA_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<0, 0x7f)
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__RMW(die, fdata)           SPICA_MCU_SP4_FW_CFG0__RMW(die, (fdata)<<0, 0x7f)
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__MASK                       0x7f
#  define SPICA_MCU_SP4_FW_CFG0__PACKAGE_TYPE_VALUE__OFFSET                     0

#define SPICA_MCU_SP5_TOP_STATE__ADDRESS                      0x1ee067
#define SPICA_MCU_SP5_TOP_STATE__DEFAULT                      0x0
#define SPICA_MCU_SP5_TOP_STATE__READ(die)                  spica_reg_read(die, SPICA_MCU_SP5_TOP_STATE__ADDRESS)
#define SPICA_MCU_SP5_TOP_STATE__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP5_TOP_STATE__ADDRESS, (data))
#define SPICA_MCU_SP5_TOP_STATE__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP5_TOP_STATE__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP5_TOP_STATE__STATE__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MCU_SP5_TOP_STATE__STATE__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MCU_SP5_TOP_STATE__STATE__READ(die)                SPICA_MCU_SP5_TOP_STATE__STATE__GET(SPICA_MCU_SP5_TOP_STATE__READ(die))
#  define SPICA_MCU_SP5_TOP_STATE__STATE__WRITE(die, fdata)           SPICA_MCU_SP5_TOP_STATE__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_MCU_SP5_TOP_STATE__STATE__RMW(die, fdata)           SPICA_MCU_SP5_TOP_STATE__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_MCU_SP5_TOP_STATE__STATE__MASK                       0xff
#  define SPICA_MCU_SP5_TOP_STATE__STATE__OFFSET                     0

#define SPICA_MCU_SP6_FW_STATUS__ADDRESS                      0x1ee068
#define SPICA_MCU_SP6_FW_STATUS__DEFAULT                      0x0
#define SPICA_MCU_SP6_FW_STATUS__READ(die)                  spica_reg_read(die, SPICA_MCU_SP6_FW_STATUS__ADDRESS)
#define SPICA_MCU_SP6_FW_STATUS__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP6_FW_STATUS__ADDRESS, (data))
#define SPICA_MCU_SP6_FW_STATUS__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP6_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__READ(die)                SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__GET(SPICA_MCU_SP6_FW_STATUS__READ(die))
#  define SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__WRITE(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__RMW(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__MASK                       0xf
#  define SPICA_MCU_SP6_FW_STATUS__RULES_VERSION__OFFSET                     12
#  define SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__SET(rdata, fdata)         (((rdata) & 0xfc0f) | (((uint32_t)(fdata) << 4) & 0x3f0))
#  define SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__GET(rdata)                (((rdata) >> 4) & 0x3f)
#  define SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__READ(die)                SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__GET(SPICA_MCU_SP6_FW_STATUS__READ(die))
#  define SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__WRITE(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<4, 0x3f0)
#  define SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__RMW(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<4, 0x3f0)
#  define SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__MASK                       0x3f
#  define SPICA_MCU_SP6_FW_STATUS__PACKAGE_TYPE__OFFSET                     4
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__READ(die)                SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__GET(SPICA_MCU_SP6_FW_STATUS__READ(die))
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__WRITE(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__RMW(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__MASK                       0x1
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT_PAUSE__OFFSET                     3
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT__READ(die)                SPICA_MCU_SP6_FW_STATUS__INTERRUPT__GET(SPICA_MCU_SP6_FW_STATUS__READ(die))
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT__WRITE(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT__RMW(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT__MASK                       0x1
#  define SPICA_MCU_SP6_FW_STATUS__INTERRUPT__OFFSET                     2
#  define SPICA_MCU_SP6_FW_STATUS__EXCEPTION__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_SP6_FW_STATUS__EXCEPTION__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_SP6_FW_STATUS__EXCEPTION__READ(die)                SPICA_MCU_SP6_FW_STATUS__EXCEPTION__GET(SPICA_MCU_SP6_FW_STATUS__READ(die))
#  define SPICA_MCU_SP6_FW_STATUS__EXCEPTION__WRITE(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_SP6_FW_STATUS__EXCEPTION__RMW(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_SP6_FW_STATUS__EXCEPTION__MASK                       0x1
#  define SPICA_MCU_SP6_FW_STATUS__EXCEPTION__OFFSET                     1
#  define SPICA_MCU_SP6_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_SP6_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_SP6_FW_STATUS__LOCKED__READ(die)                SPICA_MCU_SP6_FW_STATUS__LOCKED__GET(SPICA_MCU_SP6_FW_STATUS__READ(die))
#  define SPICA_MCU_SP6_FW_STATUS__LOCKED__WRITE(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SP6_FW_STATUS__LOCKED__RMW(die, fdata)           SPICA_MCU_SP6_FW_STATUS__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SP6_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_MCU_SP6_FW_STATUS__LOCKED__OFFSET                     0

#define SPICA_TMON_STATUS__ADDRESS                      0x1ee06a
#define SPICA_TMON_STATUS__DEFAULT                      0x0
#define SPICA_TMON_STATUS__READ(die)                  spica_reg_read(die, SPICA_TMON_STATUS__ADDRESS)
#define SPICA_TMON_STATUS__WRITE(die, data)             spica_reg_write(die, SPICA_TMON_STATUS__ADDRESS, (data))
#define SPICA_TMON_STATUS__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TMON_STATUS__ADDRESS, (data), (mask))
#  define SPICA_TMON_STATUS__TEMPERATURE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TMON_STATUS__TEMPERATURE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TMON_STATUS__TEMPERATURE__READ(die)                SPICA_TMON_STATUS__TEMPERATURE__GET(SPICA_TMON_STATUS__READ(die))
#  define SPICA_TMON_STATUS__TEMPERATURE__WRITE(die, fdata)           SPICA_TMON_STATUS__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TMON_STATUS__TEMPERATURE__RMW(die, fdata)           SPICA_TMON_STATUS__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TMON_STATUS__TEMPERATURE__MASK                       0xffff
#  define SPICA_TMON_STATUS__TEMPERATURE__OFFSET                     0

#define SPICA_MCU_SYNC_API__ADDRESS                      0x1ee06b
#define SPICA_MCU_SYNC_API__DEFAULT                      0x0
#define SPICA_MCU_SYNC_API__READ(die)                  spica_reg_read(die, SPICA_MCU_SYNC_API__ADDRESS)
#define SPICA_MCU_SYNC_API__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SYNC_API__ADDRESS, (data))
#define SPICA_MCU_SYNC_API__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SYNC_API__ADDRESS, (data), (mask))
#  define SPICA_MCU_SYNC_API__MSG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_SYNC_API__MSG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_SYNC_API__MSG__READ(die)                SPICA_MCU_SYNC_API__MSG__GET(SPICA_MCU_SYNC_API__READ(die))
#  define SPICA_MCU_SYNC_API__MSG__WRITE(die, fdata)           SPICA_MCU_SYNC_API__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SYNC_API__MSG__RMW(die, fdata)           SPICA_MCU_SYNC_API__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SYNC_API__MSG__MASK                       0x1
#  define SPICA_MCU_SYNC_API__MSG__OFFSET                     0

#define SPICA_MCU_SYNC_FW__ADDRESS                      0x1ee06c
#define SPICA_MCU_SYNC_FW__DEFAULT                      0x0
#define SPICA_MCU_SYNC_FW__READ(die)                  spica_reg_read(die, SPICA_MCU_SYNC_FW__ADDRESS)
#define SPICA_MCU_SYNC_FW__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SYNC_FW__ADDRESS, (data))
#define SPICA_MCU_SYNC_FW__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SYNC_FW__ADDRESS, (data), (mask))
#  define SPICA_MCU_SYNC_FW__MSG__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_SYNC_FW__MSG__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_SYNC_FW__MSG__READ(die)                SPICA_MCU_SYNC_FW__MSG__GET(SPICA_MCU_SYNC_FW__READ(die))
#  define SPICA_MCU_SYNC_FW__MSG__WRITE(die, fdata)           SPICA_MCU_SYNC_FW__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SYNC_FW__MSG__RMW(die, fdata)           SPICA_MCU_SYNC_FW__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SYNC_FW__MSG__MASK                       0x1
#  define SPICA_MCU_SYNC_FW__MSG__OFFSET                     0

#define SPICA_MCU_SYNC_MSG_TURN__ADDRESS                      0x1ee06d
#define SPICA_MCU_SYNC_MSG_TURN__DEFAULT                      0x0
#define SPICA_MCU_SYNC_MSG_TURN__READ(die)                  spica_reg_read(die, SPICA_MCU_SYNC_MSG_TURN__ADDRESS)
#define SPICA_MCU_SYNC_MSG_TURN__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SYNC_MSG_TURN__ADDRESS, (data))
#define SPICA_MCU_SYNC_MSG_TURN__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SYNC_MSG_TURN__ADDRESS, (data), (mask))
#  define SPICA_MCU_SYNC_MSG_TURN__TURN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_SYNC_MSG_TURN__TURN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_SYNC_MSG_TURN__TURN__READ(die)                SPICA_MCU_SYNC_MSG_TURN__TURN__GET(SPICA_MCU_SYNC_MSG_TURN__READ(die))
#  define SPICA_MCU_SYNC_MSG_TURN__TURN__WRITE(die, fdata)           SPICA_MCU_SYNC_MSG_TURN__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SYNC_MSG_TURN__TURN__RMW(die, fdata)           SPICA_MCU_SYNC_MSG_TURN__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SYNC_MSG_TURN__TURN__MASK                       0x1
#  define SPICA_MCU_SYNC_MSG_TURN__TURN__OFFSET                     0

#define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS                      0x1ee06e
#define SPICA_MCU_SP12_MSG2_BUFF_ADDR__DEFAULT                      0x0
#define SPICA_MCU_SP12_MSG2_BUFF_ADDR__READ(die)                  spica_reg_read(die, SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS)
#define SPICA_MCU_SP12_MSG2_BUFF_ADDR__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS, (data))
#define SPICA_MCU_SP12_MSG2_BUFF_ADDR__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__READ(die)                SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__GET(SPICA_MCU_SP12_MSG2_BUFF_ADDR__READ(die))
#  define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__WRITE(die, fdata)           SPICA_MCU_SP12_MSG2_BUFF_ADDR__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__RMW(die, fdata)           SPICA_MCU_SP12_MSG2_BUFF_ADDR__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__MASK                       0xffff
#  define SPICA_MCU_SP12_MSG2_BUFF_ADDR__ADDR__OFFSET                     0

#define SPICA_TMON_CTRL__ADDRESS                      0x1ee071
#define SPICA_TMON_CTRL__DEFAULT                      0x0
#define SPICA_TMON_CTRL__READ(die)                  spica_reg_read(die, SPICA_TMON_CTRL__ADDRESS)
#define SPICA_TMON_CTRL__WRITE(die, data)             spica_reg_write(die, SPICA_TMON_CTRL__ADDRESS, (data))
#define SPICA_TMON_CTRL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TMON_CTRL__ADDRESS, (data), (mask))
#  define SPICA_TMON_CTRL__DISABLE_FW_READING__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_TMON_CTRL__DISABLE_FW_READING__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_TMON_CTRL__DISABLE_FW_READING__READ(die)                SPICA_TMON_CTRL__DISABLE_FW_READING__GET(SPICA_TMON_CTRL__READ(die))
#  define SPICA_TMON_CTRL__DISABLE_FW_READING__WRITE(die, fdata)           SPICA_TMON_CTRL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TMON_CTRL__DISABLE_FW_READING__RMW(die, fdata)           SPICA_TMON_CTRL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TMON_CTRL__DISABLE_FW_READING__MASK                       0x1
#  define SPICA_TMON_CTRL__DISABLE_FW_READING__OFFSET                     0

#define SPICA_MCU_FW_INTH__ADDRESS                      0x1ee073
#define SPICA_MCU_FW_INTH__DEFAULT                      0x0
#define SPICA_MCU_FW_INTH__READ(die)                  spica_reg_read(die, SPICA_MCU_FW_INTH__ADDRESS)
#define SPICA_MCU_FW_INTH__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_FW_INTH__ADDRESS, (data))
#define SPICA_MCU_FW_INTH__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_FW_INTH__ADDRESS, (data), (mask))
#  define SPICA_MCU_FW_INTH__FW__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_FW_INTH__FW__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_FW_INTH__FW__READ(die)                SPICA_MCU_FW_INTH__FW__GET(SPICA_MCU_FW_INTH__READ(die))
#  define SPICA_MCU_FW_INTH__FW__WRITE(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_FW_INTH__FW__RMW(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_FW_INTH__FW__MASK                       0x1
#  define SPICA_MCU_FW_INTH__FW__OFFSET                     15
#  define SPICA_MCU_FW_INTH__STX__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MCU_FW_INTH__STX__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MCU_FW_INTH__STX__READ(die)                SPICA_MCU_FW_INTH__STX__GET(SPICA_MCU_FW_INTH__READ(die))
#  define SPICA_MCU_FW_INTH__STX__WRITE(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_MCU_FW_INTH__STX__RMW(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_MCU_FW_INTH__STX__MASK                       0x1
#  define SPICA_MCU_FW_INTH__STX__OFFSET                     5
#  define SPICA_MCU_FW_INTH__MTX__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MCU_FW_INTH__MTX__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MCU_FW_INTH__MTX__READ(die)                SPICA_MCU_FW_INTH__MTX__GET(SPICA_MCU_FW_INTH__READ(die))
#  define SPICA_MCU_FW_INTH__MTX__WRITE(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MCU_FW_INTH__MTX__RMW(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_MCU_FW_INTH__MTX__MASK                       0x1
#  define SPICA_MCU_FW_INTH__MTX__OFFSET                     4
#  define SPICA_MCU_FW_INTH__OTX__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MCU_FW_INTH__OTX__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MCU_FW_INTH__OTX__READ(die)                SPICA_MCU_FW_INTH__OTX__GET(SPICA_MCU_FW_INTH__READ(die))
#  define SPICA_MCU_FW_INTH__OTX__WRITE(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_FW_INTH__OTX__RMW(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_FW_INTH__OTX__MASK                       0x1
#  define SPICA_MCU_FW_INTH__OTX__OFFSET                     3
#  define SPICA_MCU_FW_INTH__SRX__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MCU_FW_INTH__SRX__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MCU_FW_INTH__SRX__READ(die)                SPICA_MCU_FW_INTH__SRX__GET(SPICA_MCU_FW_INTH__READ(die))
#  define SPICA_MCU_FW_INTH__SRX__WRITE(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_FW_INTH__SRX__RMW(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_FW_INTH__SRX__MASK                       0x1
#  define SPICA_MCU_FW_INTH__SRX__OFFSET                     2
#  define SPICA_MCU_FW_INTH__MRX__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_FW_INTH__MRX__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_FW_INTH__MRX__READ(die)                SPICA_MCU_FW_INTH__MRX__GET(SPICA_MCU_FW_INTH__READ(die))
#  define SPICA_MCU_FW_INTH__MRX__WRITE(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_FW_INTH__MRX__RMW(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_FW_INTH__MRX__MASK                       0x1
#  define SPICA_MCU_FW_INTH__MRX__OFFSET                     1
#  define SPICA_MCU_FW_INTH__ORX__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_FW_INTH__ORX__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_FW_INTH__ORX__READ(die)                SPICA_MCU_FW_INTH__ORX__GET(SPICA_MCU_FW_INTH__READ(die))
#  define SPICA_MCU_FW_INTH__ORX__WRITE(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_FW_INTH__ORX__RMW(die, fdata)           SPICA_MCU_FW_INTH__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_FW_INTH__ORX__MASK                       0x1
#  define SPICA_MCU_FW_INTH__ORX__OFFSET                     0

#define SPICA_CLOCK_GROUP_ENABLE_CFG__ADDRESS                      0x1ee074
#define SPICA_CLOCK_GROUP_ENABLE_CFG__DEFAULT                      0x0
#define SPICA_CLOCK_GROUP_ENABLE_CFG__READ(die)                  spica_reg_read(die, SPICA_CLOCK_GROUP_ENABLE_CFG__ADDRESS)
#define SPICA_CLOCK_GROUP_ENABLE_CFG__WRITE(die, data)             spica_reg_write(die, SPICA_CLOCK_GROUP_ENABLE_CFG__ADDRESS, (data))
#define SPICA_CLOCK_GROUP_ENABLE_CFG__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_CLOCK_GROUP_ENABLE_CFG__ADDRESS, (data), (mask))
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__READ(die)                SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__GET(SPICA_CLOCK_GROUP_ENABLE_CFG__READ(die))
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__WRITE(die, fdata)           SPICA_CLOCK_GROUP_ENABLE_CFG__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__RMW(die, fdata)           SPICA_CLOCK_GROUP_ENABLE_CFG__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__MASK                       0xff
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__INTF__OFFSET                     8
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__SET(rdata, fdata)         (((rdata) & 0xffc1) | (((uint32_t)(fdata) << 1) & 0x3e))
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__GET(rdata)                (((rdata) >> 1) & 0x1f)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__READ(die)                SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__GET(SPICA_CLOCK_GROUP_ENABLE_CFG__READ(die))
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__WRITE(die, fdata)           SPICA_CLOCK_GROUP_ENABLE_CFG__RMW(die, (fdata)<<1, 0x3e)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__RMW(die, fdata)           SPICA_CLOCK_GROUP_ENABLE_CFG__RMW(die, (fdata)<<1, 0x3e)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__MASK                       0x1f
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__CHANNEL__OFFSET                     1
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__READ(die)                SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__GET(SPICA_CLOCK_GROUP_ENABLE_CFG__READ(die))
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__WRITE(die, fdata)           SPICA_CLOCK_GROUP_ENABLE_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__RMW(die, fdata)           SPICA_CLOCK_GROUP_ENABLE_CFG__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__MASK                       0x1
#  define SPICA_CLOCK_GROUP_ENABLE_CFG__ENABLE__OFFSET                     0

#define SPICA_GENERIC_REQ__ADDRESS                      0x1ee075
#define SPICA_GENERIC_REQ__DEFAULT                      0x0
#define SPICA_GENERIC_REQ__READ(die)                  spica_reg_read(die, SPICA_GENERIC_REQ__ADDRESS)
#define SPICA_GENERIC_REQ__WRITE(die, data)             spica_reg_write(die, SPICA_GENERIC_REQ__ADDRESS, (data))
#define SPICA_GENERIC_REQ__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_GENERIC_REQ__ADDRESS, (data), (mask))
#  define SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__READ(die)                SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__GET(SPICA_GENERIC_REQ__READ(die))
#  define SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__WRITE(die, fdata)           SPICA_GENERIC_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__RMW(die, fdata)           SPICA_GENERIC_REQ__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__MASK                       0x1
#  define SPICA_GENERIC_REQ__CLK_GRP_EN_REQ__OFFSET                     0

#define SPICA_GENERIC_ACK__ADDRESS                      0x1ee076
#define SPICA_GENERIC_ACK__DEFAULT                      0x0
#define SPICA_GENERIC_ACK__READ(die)                  spica_reg_read(die, SPICA_GENERIC_ACK__ADDRESS)
#define SPICA_GENERIC_ACK__WRITE(die, data)             spica_reg_write(die, SPICA_GENERIC_ACK__ADDRESS, (data))
#define SPICA_GENERIC_ACK__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_GENERIC_ACK__ADDRESS, (data), (mask))
#  define SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__READ(die)                SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__GET(SPICA_GENERIC_ACK__READ(die))
#  define SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__WRITE(die, fdata)           SPICA_GENERIC_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__RMW(die, fdata)           SPICA_GENERIC_ACK__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__MASK                       0x1
#  define SPICA_GENERIC_ACK__CLK_GRP_EN_ACK__OFFSET                     0

#define SPICA_TMON_STATUS_1__ADDRESS                      0x1ee077
#define SPICA_TMON_STATUS_1__DEFAULT                      0x0
#define SPICA_TMON_STATUS_1__READ(die)                  spica_reg_read(die, SPICA_TMON_STATUS_1__ADDRESS)
#define SPICA_TMON_STATUS_1__WRITE(die, data)             spica_reg_write(die, SPICA_TMON_STATUS_1__ADDRESS, (data))
#define SPICA_TMON_STATUS_1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TMON_STATUS_1__ADDRESS, (data), (mask))
#  define SPICA_TMON_STATUS_1__IS_VALID__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_TMON_STATUS_1__IS_VALID__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_TMON_STATUS_1__IS_VALID__READ(die)                SPICA_TMON_STATUS_1__IS_VALID__GET(SPICA_TMON_STATUS_1__READ(die))
#  define SPICA_TMON_STATUS_1__IS_VALID__WRITE(die, fdata)           SPICA_TMON_STATUS_1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TMON_STATUS_1__IS_VALID__RMW(die, fdata)           SPICA_TMON_STATUS_1__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TMON_STATUS_1__IS_VALID__MASK                       0x1
#  define SPICA_TMON_STATUS_1__IS_VALID__OFFSET                     0

#define SPICA_TOP_RULES_24__ADDRESS                      0x1ee078
#define SPICA_TOP_RULES_24__DEFAULT                      0x9
#define SPICA_TOP_RULES_24__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_24__ADDRESS)
#define SPICA_TOP_RULES_24__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_24__ADDRESS, (data))
#define SPICA_TOP_RULES_24__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_24__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__READ(die)                SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__GET(SPICA_TOP_RULES_24__READ(die))
#  define SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__WRITE(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<6, 0x40)
#  define SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__RMW(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<6, 0x40)
#  define SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__MASK                       0x1
#  define SPICA_TOP_RULES_24__POR_CID_LOSD_DET_EN__OFFSET                     6
#  define SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__READ(die)                SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__GET(SPICA_TOP_RULES_24__READ(die))
#  define SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__WRITE(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__RMW(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<5, 0x20)
#  define SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__MASK                       0x1
#  define SPICA_TOP_RULES_24__PMR_CID_LOSD_DET_EN__OFFSET                     5
#  define SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__READ(die)                SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__GET(SPICA_TOP_RULES_24__READ(die))
#  define SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__WRITE(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__RMW(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<4, 0x10)
#  define SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__MASK                       0x1
#  define SPICA_TOP_RULES_24__POR_DOUBLE_RESTART_DIS__OFFSET                     4
#  define SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__READ(die)                SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__GET(SPICA_TOP_RULES_24__READ(die))
#  define SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__WRITE(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__RMW(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__MASK                       0x1
#  define SPICA_TOP_RULES_24__PMR_LOW_LOSS_DET_EN__OFFSET                     3
#  define SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__READ(die)                SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__GET(SPICA_TOP_RULES_24__READ(die))
#  define SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__WRITE(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__RMW(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__MASK                       0x1
#  define SPICA_TOP_RULES_24__POR_LOW_LOSS_DET_EN__OFFSET                     2
#  define SPICA_TOP_RULES_24__PMR_DDLF_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_TOP_RULES_24__PMR_DDLF_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_TOP_RULES_24__PMR_DDLF_EN__READ(die)                SPICA_TOP_RULES_24__PMR_DDLF_EN__GET(SPICA_TOP_RULES_24__READ(die))
#  define SPICA_TOP_RULES_24__PMR_DDLF_EN__WRITE(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_TOP_RULES_24__PMR_DDLF_EN__RMW(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_TOP_RULES_24__PMR_DDLF_EN__MASK                       0x1
#  define SPICA_TOP_RULES_24__PMR_DDLF_EN__OFFSET                     1
#  define SPICA_TOP_RULES_24__POR_DDLF_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_TOP_RULES_24__POR_DDLF_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_TOP_RULES_24__POR_DDLF_EN__READ(die)                SPICA_TOP_RULES_24__POR_DDLF_EN__GET(SPICA_TOP_RULES_24__READ(die))
#  define SPICA_TOP_RULES_24__POR_DDLF_EN__WRITE(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TOP_RULES_24__POR_DDLF_EN__RMW(die, fdata)           SPICA_TOP_RULES_24__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TOP_RULES_24__POR_DDLF_EN__MASK                       0x1
#  define SPICA_TOP_RULES_24__POR_DDLF_EN__OFFSET                     0

#define SPICA_TOP_RULES_25__ADDRESS                      0x1ee079
#define SPICA_TOP_RULES_25__DEFAULT                      0x0
#define SPICA_TOP_RULES_25__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_25__ADDRESS)
#define SPICA_TOP_RULES_25__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_25__ADDRESS, (data))
#define SPICA_TOP_RULES_25__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_25__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__READ(die)                SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__GET(SPICA_TOP_RULES_25__READ(die))
#  define SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__WRITE(die, fdata)           SPICA_TOP_RULES_25__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__RMW(die, fdata)           SPICA_TOP_RULES_25__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__MASK                       0xff
#  define SPICA_TOP_RULES_25__LRX_QC_SLC_ERR_LIMIT__OFFSET                     8
#  define SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__READ(die)                SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__GET(SPICA_TOP_RULES_25__READ(die))
#  define SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__WRITE(die, fdata)           SPICA_TOP_RULES_25__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__RMW(die, fdata)           SPICA_TOP_RULES_25__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__MASK                       0xff
#  define SPICA_TOP_RULES_25__HRX_QC_SLC_ERR_LIMIT__OFFSET                     0

#define SPICA_TOP_RULES_8__ADDRESS                      0x1ee084
#define SPICA_TOP_RULES_8__DEFAULT                      0x0
#define SPICA_TOP_RULES_8__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_8__ADDRESS)
#define SPICA_TOP_RULES_8__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_8__ADDRESS, (data))
#define SPICA_TOP_RULES_8__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_8__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__READ(die)                SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__GET(SPICA_TOP_RULES_8__READ(die))
#  define SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__WRITE(die, fdata)           SPICA_TOP_RULES_8__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__RMW(die, fdata)           SPICA_TOP_RULES_8__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__MASK                       0xffff
#  define SPICA_TOP_RULES_8__BAUD_RATE_1_LSW__OFFSET                     0

#define SPICA_TOP_RULES_9__ADDRESS                      0x1ee085
#define SPICA_TOP_RULES_9__DEFAULT                      0x0
#define SPICA_TOP_RULES_9__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_9__ADDRESS)
#define SPICA_TOP_RULES_9__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_9__ADDRESS, (data))
#define SPICA_TOP_RULES_9__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_9__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__READ(die)                SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__GET(SPICA_TOP_RULES_9__READ(die))
#  define SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__WRITE(die, fdata)           SPICA_TOP_RULES_9__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__RMW(die, fdata)           SPICA_TOP_RULES_9__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__MASK                       0xffff
#  define SPICA_TOP_RULES_9__BAUD_RATE_1_MSW__OFFSET                     0

#define SPICA_TOP_RULES_10__ADDRESS                      0x1ee086
#define SPICA_TOP_RULES_10__DEFAULT                      0x0
#define SPICA_TOP_RULES_10__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_10__ADDRESS)
#define SPICA_TOP_RULES_10__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_10__ADDRESS, (data))
#define SPICA_TOP_RULES_10__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_10__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__READ(die)                SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__GET(SPICA_TOP_RULES_10__READ(die))
#  define SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__WRITE(die, fdata)           SPICA_TOP_RULES_10__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__RMW(die, fdata)           SPICA_TOP_RULES_10__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__MASK                       0xffff
#  define SPICA_TOP_RULES_10__BAUD_RATE_2_LSW__OFFSET                     0

#define SPICA_TOP_RULES_11__ADDRESS                      0x1ee087
#define SPICA_TOP_RULES_11__DEFAULT                      0x0
#define SPICA_TOP_RULES_11__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_11__ADDRESS)
#define SPICA_TOP_RULES_11__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_11__ADDRESS, (data))
#define SPICA_TOP_RULES_11__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_11__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__READ(die)                SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__GET(SPICA_TOP_RULES_11__READ(die))
#  define SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__WRITE(die, fdata)           SPICA_TOP_RULES_11__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__RMW(die, fdata)           SPICA_TOP_RULES_11__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__MASK                       0xffff
#  define SPICA_TOP_RULES_11__BAUD_RATE_2_MSW__OFFSET                     0

#define SPICA_TOP_RULES_12__ADDRESS                      0x1ee088
#define SPICA_TOP_RULES_12__DEFAULT                      0x0
#define SPICA_TOP_RULES_12__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_12__ADDRESS)
#define SPICA_TOP_RULES_12__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_12__ADDRESS, (data))
#define SPICA_TOP_RULES_12__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_12__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__READ(die)                SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__GET(SPICA_TOP_RULES_12__READ(die))
#  define SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__WRITE(die, fdata)           SPICA_TOP_RULES_12__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__RMW(die, fdata)           SPICA_TOP_RULES_12__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__MASK                       0xffff
#  define SPICA_TOP_RULES_12__BAUD_RATE_3_LSW__OFFSET                     0

#define SPICA_TOP_RULES_13__ADDRESS                      0x1ee089
#define SPICA_TOP_RULES_13__DEFAULT                      0x0
#define SPICA_TOP_RULES_13__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_13__ADDRESS)
#define SPICA_TOP_RULES_13__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_13__ADDRESS, (data))
#define SPICA_TOP_RULES_13__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_13__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__READ(die)                SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__GET(SPICA_TOP_RULES_13__READ(die))
#  define SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__WRITE(die, fdata)           SPICA_TOP_RULES_13__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__RMW(die, fdata)           SPICA_TOP_RULES_13__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__MASK                       0xffff
#  define SPICA_TOP_RULES_13__BAUD_RATE_3_MSW__OFFSET                     0

#define SPICA_TOP_RULES_14__ADDRESS                      0x1ee08a
#define SPICA_TOP_RULES_14__DEFAULT                      0x0
#define SPICA_TOP_RULES_14__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_14__ADDRESS)
#define SPICA_TOP_RULES_14__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_14__ADDRESS, (data))
#define SPICA_TOP_RULES_14__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_14__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__READ(die)                SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__GET(SPICA_TOP_RULES_14__READ(die))
#  define SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__WRITE(die, fdata)           SPICA_TOP_RULES_14__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__RMW(die, fdata)           SPICA_TOP_RULES_14__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__MASK                       0xffff
#  define SPICA_TOP_RULES_14__BAUD_RATE_4_LSW__OFFSET                     0

#define SPICA_TOP_RULES_15__ADDRESS                      0x1ee08b
#define SPICA_TOP_RULES_15__DEFAULT                      0x0
#define SPICA_TOP_RULES_15__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_15__ADDRESS)
#define SPICA_TOP_RULES_15__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_15__ADDRESS, (data))
#define SPICA_TOP_RULES_15__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_15__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__READ(die)                SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__GET(SPICA_TOP_RULES_15__READ(die))
#  define SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__WRITE(die, fdata)           SPICA_TOP_RULES_15__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__RMW(die, fdata)           SPICA_TOP_RULES_15__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__MASK                       0xffff
#  define SPICA_TOP_RULES_15__BAUD_RATE_4_MSW__OFFSET                     0

#define SPICA_TOP_RULES_16__ADDRESS                      0x1ee08c
#define SPICA_TOP_RULES_16__DEFAULT                      0x0
#define SPICA_TOP_RULES_16__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_16__ADDRESS)
#define SPICA_TOP_RULES_16__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_16__ADDRESS, (data))
#define SPICA_TOP_RULES_16__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_16__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__READ(die)                SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__GET(SPICA_TOP_RULES_16__READ(die))
#  define SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__WRITE(die, fdata)           SPICA_TOP_RULES_16__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__RMW(die, fdata)           SPICA_TOP_RULES_16__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__MASK                       0xffff
#  define SPICA_TOP_RULES_16__BAUD_RATE_5_LSW__OFFSET                     0

#define SPICA_TOP_RULES_17__ADDRESS                      0x1ee08d
#define SPICA_TOP_RULES_17__DEFAULT                      0x0
#define SPICA_TOP_RULES_17__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_17__ADDRESS)
#define SPICA_TOP_RULES_17__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_17__ADDRESS, (data))
#define SPICA_TOP_RULES_17__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_17__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__READ(die)                SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__GET(SPICA_TOP_RULES_17__READ(die))
#  define SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__WRITE(die, fdata)           SPICA_TOP_RULES_17__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__RMW(die, fdata)           SPICA_TOP_RULES_17__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__MASK                       0xffff
#  define SPICA_TOP_RULES_17__BAUD_RATE_5_MSW__OFFSET                     0

#define SPICA_TOP_RULES_18__ADDRESS                      0x1ee08e
#define SPICA_TOP_RULES_18__DEFAULT                      0x0
#define SPICA_TOP_RULES_18__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_18__ADDRESS)
#define SPICA_TOP_RULES_18__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_18__ADDRESS, (data))
#define SPICA_TOP_RULES_18__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_18__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__READ(die)                SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__GET(SPICA_TOP_RULES_18__READ(die))
#  define SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__WRITE(die, fdata)           SPICA_TOP_RULES_18__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__RMW(die, fdata)           SPICA_TOP_RULES_18__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__MASK                       0xffff
#  define SPICA_TOP_RULES_18__BAUD_RATE_6_LSW__OFFSET                     0

#define SPICA_TOP_RULES_19__ADDRESS                      0x1ee08f
#define SPICA_TOP_RULES_19__DEFAULT                      0x0
#define SPICA_TOP_RULES_19__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_19__ADDRESS)
#define SPICA_TOP_RULES_19__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_19__ADDRESS, (data))
#define SPICA_TOP_RULES_19__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_19__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__READ(die)                SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__GET(SPICA_TOP_RULES_19__READ(die))
#  define SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__WRITE(die, fdata)           SPICA_TOP_RULES_19__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__RMW(die, fdata)           SPICA_TOP_RULES_19__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__MASK                       0xffff
#  define SPICA_TOP_RULES_19__BAUD_RATE_6_MSW__OFFSET                     0

#define SPICA_TOP_RULES_20__ADDRESS                      0x1ee090
#define SPICA_TOP_RULES_20__DEFAULT                      0x0
#define SPICA_TOP_RULES_20__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_20__ADDRESS)
#define SPICA_TOP_RULES_20__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_20__ADDRESS, (data))
#define SPICA_TOP_RULES_20__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_20__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__READ(die)                SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__GET(SPICA_TOP_RULES_20__READ(die))
#  define SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__WRITE(die, fdata)           SPICA_TOP_RULES_20__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__RMW(die, fdata)           SPICA_TOP_RULES_20__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__MASK                       0xff
#  define SPICA_TOP_RULES_20__LRX_LOS_ASRT_STARTUP__OFFSET                     8
#  define SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__READ(die)                SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__GET(SPICA_TOP_RULES_20__READ(die))
#  define SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__WRITE(die, fdata)           SPICA_TOP_RULES_20__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__RMW(die, fdata)           SPICA_TOP_RULES_20__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__MASK                       0xff
#  define SPICA_TOP_RULES_20__LRX_LOS_DSRT_STARTUP__OFFSET                     0

#define SPICA_TOP_RULES_21__ADDRESS                      0x1ee091
#define SPICA_TOP_RULES_21__DEFAULT                      0x0
#define SPICA_TOP_RULES_21__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_21__ADDRESS)
#define SPICA_TOP_RULES_21__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_21__ADDRESS, (data))
#define SPICA_TOP_RULES_21__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_21__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__READ(die)                SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__GET(SPICA_TOP_RULES_21__READ(die))
#  define SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__WRITE(die, fdata)           SPICA_TOP_RULES_21__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__RMW(die, fdata)           SPICA_TOP_RULES_21__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__MASK                       0xff
#  define SPICA_TOP_RULES_21__LRX_LOS_ASRT_DATAMODE__OFFSET                     0

#define SPICA_TOP_RULES_22__ADDRESS                      0x1ee092
#define SPICA_TOP_RULES_22__DEFAULT                      0x0
#define SPICA_TOP_RULES_22__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_22__ADDRESS)
#define SPICA_TOP_RULES_22__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_22__ADDRESS, (data))
#define SPICA_TOP_RULES_22__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_22__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__READ(die)                SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__GET(SPICA_TOP_RULES_22__READ(die))
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__WRITE(die, fdata)           SPICA_TOP_RULES_22__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__RMW(die, fdata)           SPICA_TOP_RULES_22__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__MASK                       0xff
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_EXIT__OFFSET                     8
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__READ(die)                SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__GET(SPICA_TOP_RULES_22__READ(die))
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__WRITE(die, fdata)           SPICA_TOP_RULES_22__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__RMW(die, fdata)           SPICA_TOP_RULES_22__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__MASK                       0xff
#  define SPICA_TOP_RULES_22__LRX_QC_SNR_THRESHOLD_MM_ENTER__OFFSET                     0

#define SPICA_TOP_RULES_23__ADDRESS                      0x1ee093
#define SPICA_TOP_RULES_23__DEFAULT                      0x0
#define SPICA_TOP_RULES_23__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_23__ADDRESS)
#define SPICA_TOP_RULES_23__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_23__ADDRESS, (data))
#define SPICA_TOP_RULES_23__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_23__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__READ(die)                SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__GET(SPICA_TOP_RULES_23__READ(die))
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__WRITE(die, fdata)           SPICA_TOP_RULES_23__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__RMW(die, fdata)           SPICA_TOP_RULES_23__RMW(die, (fdata)<<8, 0xff00)
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__MASK                       0xff
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_EXIT__OFFSET                     8
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__READ(die)                SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__GET(SPICA_TOP_RULES_23__READ(die))
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__WRITE(die, fdata)           SPICA_TOP_RULES_23__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__RMW(die, fdata)           SPICA_TOP_RULES_23__RMW(die, (fdata)<<0, 0xff)
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__MASK                       0xff
#  define SPICA_TOP_RULES_23__HRX_QC_SNR_THRESHOLD_MM_ENTER__OFFSET                     0

#define SPICA_SW_DATA_XFER_0__ADDRESS                      0x1ee094
#define SPICA_SW_DATA_XFER_0__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_0__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_0__ADDRESS)
#define SPICA_SW_DATA_XFER_0__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_0__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_0__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_0__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_0__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_0__DATA__READ(die)                SPICA_SW_DATA_XFER_0__DATA__GET(SPICA_SW_DATA_XFER_0__READ(die))
#  define SPICA_SW_DATA_XFER_0__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_0__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_0__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_0__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_0__DATA__OFFSET                     0

#define SPICA_SW_DATA_XFER_1__ADDRESS                      0x1ee095
#define SPICA_SW_DATA_XFER_1__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_1__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_1__ADDRESS)
#define SPICA_SW_DATA_XFER_1__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_1__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_1__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_1__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_1__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_1__DATA__READ(die)                SPICA_SW_DATA_XFER_1__DATA__GET(SPICA_SW_DATA_XFER_1__READ(die))
#  define SPICA_SW_DATA_XFER_1__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_1__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_1__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_1__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_1__DATA__OFFSET                     0

#define SPICA_SW_DATA_XFER_2__ADDRESS                      0x1ee096
#define SPICA_SW_DATA_XFER_2__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_2__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_2__ADDRESS)
#define SPICA_SW_DATA_XFER_2__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_2__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_2__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_2__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_2__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_2__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_2__DATA__READ(die)                SPICA_SW_DATA_XFER_2__DATA__GET(SPICA_SW_DATA_XFER_2__READ(die))
#  define SPICA_SW_DATA_XFER_2__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_2__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_2__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_2__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_2__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_2__DATA__OFFSET                     0

#define SPICA_SW_DATA_XFER_3__ADDRESS                      0x1ee097
#define SPICA_SW_DATA_XFER_3__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_3__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_3__ADDRESS)
#define SPICA_SW_DATA_XFER_3__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_3__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_3__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_3__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_3__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_3__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_3__DATA__READ(die)                SPICA_SW_DATA_XFER_3__DATA__GET(SPICA_SW_DATA_XFER_3__READ(die))
#  define SPICA_SW_DATA_XFER_3__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_3__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_3__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_3__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_3__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_3__DATA__OFFSET                     0

#define SPICA_SW_DATA_XFER_4__ADDRESS                      0x1ee098
#define SPICA_SW_DATA_XFER_4__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_4__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_4__ADDRESS)
#define SPICA_SW_DATA_XFER_4__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_4__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_4__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_4__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_4__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_4__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_4__DATA__READ(die)                SPICA_SW_DATA_XFER_4__DATA__GET(SPICA_SW_DATA_XFER_4__READ(die))
#  define SPICA_SW_DATA_XFER_4__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_4__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_4__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_4__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_4__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_4__DATA__OFFSET                     0

#define SPICA_SW_DATA_XFER_5__ADDRESS                      0x1ee099
#define SPICA_SW_DATA_XFER_5__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_5__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_5__ADDRESS)
#define SPICA_SW_DATA_XFER_5__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_5__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_5__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_5__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_5__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_5__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_5__DATA__READ(die)                SPICA_SW_DATA_XFER_5__DATA__GET(SPICA_SW_DATA_XFER_5__READ(die))
#  define SPICA_SW_DATA_XFER_5__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_5__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_5__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_5__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_5__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_5__DATA__OFFSET                     0

#define SPICA_SW_DATA_XFER_6__ADDRESS                      0x1ee09a
#define SPICA_SW_DATA_XFER_6__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_6__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_6__ADDRESS)
#define SPICA_SW_DATA_XFER_6__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_6__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_6__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_6__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_6__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_6__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_6__DATA__READ(die)                SPICA_SW_DATA_XFER_6__DATA__GET(SPICA_SW_DATA_XFER_6__READ(die))
#  define SPICA_SW_DATA_XFER_6__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_6__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_6__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_6__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_6__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_6__DATA__OFFSET                     0

#define SPICA_SW_DATA_XFER_7__ADDRESS                      0x1ee09b
#define SPICA_SW_DATA_XFER_7__DEFAULT                      0x0
#define SPICA_SW_DATA_XFER_7__READ(die)                  spica_reg_read(die, SPICA_SW_DATA_XFER_7__ADDRESS)
#define SPICA_SW_DATA_XFER_7__WRITE(die, data)             spica_reg_write(die, SPICA_SW_DATA_XFER_7__ADDRESS, (data))
#define SPICA_SW_DATA_XFER_7__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_SW_DATA_XFER_7__ADDRESS, (data), (mask))
#  define SPICA_SW_DATA_XFER_7__DATA__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_SW_DATA_XFER_7__DATA__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_SW_DATA_XFER_7__DATA__READ(die)                SPICA_SW_DATA_XFER_7__DATA__GET(SPICA_SW_DATA_XFER_7__READ(die))
#  define SPICA_SW_DATA_XFER_7__DATA__WRITE(die, fdata)           SPICA_SW_DATA_XFER_7__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_7__DATA__RMW(die, fdata)           SPICA_SW_DATA_XFER_7__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_SW_DATA_XFER_7__DATA__MASK                       0xffff
#  define SPICA_SW_DATA_XFER_7__DATA__OFFSET                     0

#define SPICA_MCU_FIRMWARE_REV0_OVL__ADDRESS                      0x1ee052
#define SPICA_MCU_FIRMWARE_REV0_OVL__DEFAULT                      0x0
#define SPICA_MCU_FIRMWARE_REV0_OVL__READ(die)                  spica_reg_read(die, SPICA_MCU_FIRMWARE_REV0_OVL__ADDRESS)
#define SPICA_MCU_FIRMWARE_REV0_OVL__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_FIRMWARE_REV0_OVL__ADDRESS, (data))
#define SPICA_MCU_FIRMWARE_REV0_OVL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_FIRMWARE_REV0_OVL__ADDRESS, (data), (mask))
#  define SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__READ(die)                SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__GET(SPICA_MCU_FIRMWARE_REV0_OVL__READ(die))
#  define SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__WRITE(die, fdata)           SPICA_MCU_FIRMWARE_REV0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__RMW(die, fdata)           SPICA_MCU_FIRMWARE_REV0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__MASK                       0xffff
#  define SPICA_MCU_FIRMWARE_REV0_OVL__BUILD__OFFSET                     0

#define SPICA_MCU_FIRMWARE_REV1_OVL__ADDRESS                      0x1ee053
#define SPICA_MCU_FIRMWARE_REV1_OVL__DEFAULT                      0x0
#define SPICA_MCU_FIRMWARE_REV1_OVL__READ(die)                  spica_reg_read(die, SPICA_MCU_FIRMWARE_REV1_OVL__ADDRESS)
#define SPICA_MCU_FIRMWARE_REV1_OVL__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_FIRMWARE_REV1_OVL__ADDRESS, (data))
#define SPICA_MCU_FIRMWARE_REV1_OVL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_FIRMWARE_REV1_OVL__ADDRESS, (data), (mask))
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__READ(die)                SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__GET(SPICA_MCU_FIRMWARE_REV1_OVL__READ(die))
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__WRITE(die, fdata)           SPICA_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__RMW(die, fdata)           SPICA_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__MASK                       0xf
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MAJOR__OFFSET                     12
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__SET(rdata, fdata)         (((rdata) & 0xf00f) | (((uint32_t)(fdata) << 4) & 0xff0))
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__GET(rdata)                (((rdata) >> 4) & 0xff)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__READ(die)                SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__GET(SPICA_MCU_FIRMWARE_REV1_OVL__READ(die))
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__WRITE(die, fdata)           SPICA_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__RMW(die, fdata)           SPICA_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__MASK                       0xff
#  define SPICA_MCU_FIRMWARE_REV1_OVL__MINOR__OFFSET                     4
#  define SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__READ(die)                SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__GET(SPICA_MCU_FIRMWARE_REV1_OVL__READ(die))
#  define SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__WRITE(die, fdata)           SPICA_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__RMW(die, fdata)           SPICA_MCU_FIRMWARE_REV1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__MASK                       0xf
#  define SPICA_MCU_FIRMWARE_REV1_OVL__REVISION__OFFSET                     0

#define SPICA_MCU_API_INFO0_OVL__ADDRESS                      0x1ee05e
#define SPICA_MCU_API_INFO0_OVL__DEFAULT                      0x0
#define SPICA_MCU_API_INFO0_OVL__READ(die)                  spica_reg_read(die, SPICA_MCU_API_INFO0_OVL__ADDRESS)
#define SPICA_MCU_API_INFO0_OVL__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_API_INFO0_OVL__ADDRESS, (data))
#define SPICA_MCU_API_INFO0_OVL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_API_INFO0_OVL__ADDRESS, (data), (mask))
#  define SPICA_MCU_API_INFO0_OVL__BUILD__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_API_INFO0_OVL__BUILD__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_API_INFO0_OVL__BUILD__READ(die)                SPICA_MCU_API_INFO0_OVL__BUILD__GET(SPICA_MCU_API_INFO0_OVL__READ(die))
#  define SPICA_MCU_API_INFO0_OVL__BUILD__WRITE(die, fdata)           SPICA_MCU_API_INFO0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_API_INFO0_OVL__BUILD__RMW(die, fdata)           SPICA_MCU_API_INFO0_OVL__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_API_INFO0_OVL__BUILD__MASK                       0xffff
#  define SPICA_MCU_API_INFO0_OVL__BUILD__OFFSET                     0

#define SPICA_MCU_API_INFO1_OVL__ADDRESS                      0x1ee05f
#define SPICA_MCU_API_INFO1_OVL__DEFAULT                      0x0
#define SPICA_MCU_API_INFO1_OVL__READ(die)                  spica_reg_read(die, SPICA_MCU_API_INFO1_OVL__ADDRESS)
#define SPICA_MCU_API_INFO1_OVL__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_API_INFO1_OVL__ADDRESS, (data))
#define SPICA_MCU_API_INFO1_OVL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_API_INFO1_OVL__ADDRESS, (data), (mask))
#  define SPICA_MCU_API_INFO1_OVL__MAJOR__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_MCU_API_INFO1_OVL__MAJOR__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_MCU_API_INFO1_OVL__MAJOR__READ(die)                SPICA_MCU_API_INFO1_OVL__MAJOR__GET(SPICA_MCU_API_INFO1_OVL__READ(die))
#  define SPICA_MCU_API_INFO1_OVL__MAJOR__WRITE(die, fdata)           SPICA_MCU_API_INFO1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MCU_API_INFO1_OVL__MAJOR__RMW(die, fdata)           SPICA_MCU_API_INFO1_OVL__RMW(die, (fdata)<<12, 0xf000)
#  define SPICA_MCU_API_INFO1_OVL__MAJOR__MASK                       0xf
#  define SPICA_MCU_API_INFO1_OVL__MAJOR__OFFSET                     12
#  define SPICA_MCU_API_INFO1_OVL__MINOR__SET(rdata, fdata)         (((rdata) & 0xf00f) | (((uint32_t)(fdata) << 4) & 0xff0))
#  define SPICA_MCU_API_INFO1_OVL__MINOR__GET(rdata)                (((rdata) >> 4) & 0xff)
#  define SPICA_MCU_API_INFO1_OVL__MINOR__READ(die)                SPICA_MCU_API_INFO1_OVL__MINOR__GET(SPICA_MCU_API_INFO1_OVL__READ(die))
#  define SPICA_MCU_API_INFO1_OVL__MINOR__WRITE(die, fdata)           SPICA_MCU_API_INFO1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SPICA_MCU_API_INFO1_OVL__MINOR__RMW(die, fdata)           SPICA_MCU_API_INFO1_OVL__RMW(die, (fdata)<<4, 0xff0)
#  define SPICA_MCU_API_INFO1_OVL__MINOR__MASK                       0xff
#  define SPICA_MCU_API_INFO1_OVL__MINOR__OFFSET                     4
#  define SPICA_MCU_API_INFO1_OVL__REVISION__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MCU_API_INFO1_OVL__REVISION__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MCU_API_INFO1_OVL__REVISION__READ(die)                SPICA_MCU_API_INFO1_OVL__REVISION__GET(SPICA_MCU_API_INFO1_OVL__READ(die))
#  define SPICA_MCU_API_INFO1_OVL__REVISION__WRITE(die, fdata)           SPICA_MCU_API_INFO1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_API_INFO1_OVL__REVISION__RMW(die, fdata)           SPICA_MCU_API_INFO1_OVL__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_API_INFO1_OVL__REVISION__MASK                       0xf
#  define SPICA_MCU_API_INFO1_OVL__REVISION__OFFSET                     0

#define SPICA_MCU_SP61_RXA_OVERRIDE0__ADDRESS                      0x1ee09f
#define SPICA_MCU_SP61_RXA_OVERRIDE0__DEFAULT                      0x0
#define SPICA_MCU_SP61_RXA_OVERRIDE0__READ(die)                  spica_reg_read(die, SPICA_MCU_SP61_RXA_OVERRIDE0__ADDRESS)
#define SPICA_MCU_SP61_RXA_OVERRIDE0__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP61_RXA_OVERRIDE0__ADDRESS, (data))
#define SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP61_RXA_OVERRIDE0__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__READ(die)                SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__GET(SPICA_MCU_SP61_RXA_OVERRIDE0__READ(die))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__WRITE(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__RMW(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__MASK                       0x1
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__ENABLE__OFFSET                     15
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__READ(die)                SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__GET(SPICA_MCU_SP61_RXA_OVERRIDE0__READ(die))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__WRITE(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__RMW(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__MASK                       0x1
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_CM_RES__OFFSET                     1
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__SET(rdata, fdata)         (((rdata) & 0xfff3) | (((uint32_t)(fdata) << 2) & 0xc))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__GET(rdata)                (((rdata) >> 2) & 0x3)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__READ(die)                SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__GET(SPICA_MCU_SP61_RXA_OVERRIDE0__READ(die))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__WRITE(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<2, 0xc)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__RMW(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<2, 0xc)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__MASK                       0x3
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__TERM_TRIM__OFFSET                     2
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__READ(die)                SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__GET(SPICA_MCU_SP61_RXA_OVERRIDE0__READ(die))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__WRITE(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__RMW(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__MASK                       0x1
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__SHORT_AC_CAP__OFFSET                     1
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__READ(die)                SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__GET(SPICA_MCU_SP61_RXA_OVERRIDE0__READ(die))
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__WRITE(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__RMW(die, fdata)           SPICA_MCU_SP61_RXA_OVERRIDE0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__MASK                       0x1
#  define SPICA_MCU_SP61_RXA_OVERRIDE0__VCMI_EN__OFFSET                     0

#define SPICA_MCU_SP62_RXA_OVERRIDE1__ADDRESS                      0x1ee0a0
#define SPICA_MCU_SP62_RXA_OVERRIDE1__DEFAULT                      0x0
#define SPICA_MCU_SP62_RXA_OVERRIDE1__READ(die)                  spica_reg_read(die, SPICA_MCU_SP62_RXA_OVERRIDE1__ADDRESS)
#define SPICA_MCU_SP62_RXA_OVERRIDE1__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP62_RXA_OVERRIDE1__ADDRESS, (data))
#define SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP62_RXA_OVERRIDE1__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__READ(die)                SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__GET(SPICA_MCU_SP62_RXA_OVERRIDE1__READ(die))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__WRITE(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__RMW(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__MASK                       0x1
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__ENABLE__OFFSET                     15
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__READ(die)                SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__GET(SPICA_MCU_SP62_RXA_OVERRIDE1__READ(die))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__WRITE(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<8, 0xf00)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__RMW(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<8, 0xf00)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__MASK                       0xf
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__CTLE_TRIM__OFFSET                     8
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__SET(rdata, fdata)         (((rdata) & 0xff8f) | (((uint32_t)(fdata) << 4) & 0x70))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__GET(rdata)                (((rdata) >> 4) & 0x7)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__READ(die)                SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__GET(SPICA_MCU_SP62_RXA_OVERRIDE1__READ(die))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__WRITE(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<4, 0x70)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__RMW(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<4, 0x70)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__MASK                       0x7
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_COMMON_MODE__OFFSET                     4
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__READ(die)                SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__GET(SPICA_MCU_SP62_RXA_OVERRIDE1__READ(die))
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__WRITE(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__RMW(die, fdata)           SPICA_MCU_SP62_RXA_OVERRIDE1__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__MASK                       0x7
#  define SPICA_MCU_SP62_RXA_OVERRIDE1__VGA_TRIM__OFFSET                     0

#define SPICA_MCU_SP63_KP_KF_OVERRIDE__ADDRESS                      0x1ee0a1
#define SPICA_MCU_SP63_KP_KF_OVERRIDE__DEFAULT                      0x0
#define SPICA_MCU_SP63_KP_KF_OVERRIDE__READ(die)                  spica_reg_read(die, SPICA_MCU_SP63_KP_KF_OVERRIDE__ADDRESS)
#define SPICA_MCU_SP63_KP_KF_OVERRIDE__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_SP63_KP_KF_OVERRIDE__ADDRESS, (data))
#define SPICA_MCU_SP63_KP_KF_OVERRIDE__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_SP63_KP_KF_OVERRIDE__ADDRESS, (data), (mask))
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__READ(die)                SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__GET(SPICA_MCU_SP63_KP_KF_OVERRIDE__READ(die))
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__WRITE(die, fdata)           SPICA_MCU_SP63_KP_KF_OVERRIDE__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__RMW(die, fdata)           SPICA_MCU_SP63_KP_KF_OVERRIDE__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__MASK                       0x1
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__ENABLE__OFFSET                     15
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__READ(die)                SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__GET(SPICA_MCU_SP63_KP_KF_OVERRIDE__READ(die))
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__WRITE(die, fdata)           SPICA_MCU_SP63_KP_KF_OVERRIDE__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__RMW(die, fdata)           SPICA_MCU_SP63_KP_KF_OVERRIDE__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__MASK                       0xf
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KF__OFFSET                     4
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__READ(die)                SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__GET(SPICA_MCU_SP63_KP_KF_OVERRIDE__READ(die))
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__WRITE(die, fdata)           SPICA_MCU_SP63_KP_KF_OVERRIDE__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__RMW(die, fdata)           SPICA_MCU_SP63_KP_KF_OVERRIDE__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__MASK                       0xf
#  define SPICA_MCU_SP63_KP_KF_OVERRIDE__KP__OFFSET                     0

#define SPICA_ORX_FW_STATES__ADDRESS                      0x1e602c
#define SPICA_ORX_FW_STATES__DEFAULT                      0x0
#define SPICA_ORX_FW_STATES__ICOUNT                        5
#define SPICA_ORX_FW_STATES__ISPAN                         0x800
#define SPICA_ORX_FW_STATES__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_FW_STATES__ADDRESS)
#define SPICA_ORX_FW_STATES__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_FW_STATES__ADDRESS)
#define SPICA_ORX_FW_STATES__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_FW_STATES__ADDRESS, (data))
#define SPICA_ORX_FW_STATES__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_FW_STATES__ADDRESS, (data), (mask))
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__READ(die, channel)         SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__GET(SPICA_ORX_FW_STATES__READ(die, channel))
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__WRITE(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__RMW(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__MASK                       0x7
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PU__OFFSET                     13
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__SET(rdata, fdata)         (((rdata) & 0xe3ff) | (((uint32_t)(fdata) << 10) & 0x1c00))
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__GET(rdata)                (((rdata) >> 10) & 0x7)
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__READ(die, channel)         SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__GET(SPICA_ORX_FW_STATES__READ(die, channel))
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__WRITE(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<10, 0x1c00)
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__RMW(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<10, 0x1c00)
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__MASK                       0x7
#  define SPICA_ORX_FW_STATES__FSM_STATE_HW_PD__OFFSET                     10
#  define SPICA_ORX_FW_STATES__FSM_STATE_CALIB__SET(rdata, fdata)         (((rdata) & 0xfc1f) | (((uint32_t)(fdata) << 5) & 0x3e0))
#  define SPICA_ORX_FW_STATES__FSM_STATE_CALIB__GET(rdata)                (((rdata) >> 5) & 0x1f)
#  define SPICA_ORX_FW_STATES__FSM_STATE_CALIB__READ(die, channel)         SPICA_ORX_FW_STATES__FSM_STATE_CALIB__GET(SPICA_ORX_FW_STATES__READ(die, channel))
#  define SPICA_ORX_FW_STATES__FSM_STATE_CALIB__WRITE(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SPICA_ORX_FW_STATES__FSM_STATE_CALIB__RMW(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SPICA_ORX_FW_STATES__FSM_STATE_CALIB__MASK                       0x1f
#  define SPICA_ORX_FW_STATES__FSM_STATE_CALIB__OFFSET                     5
#  define SPICA_ORX_FW_STATES__FSM_STATE_TOP__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_ORX_FW_STATES__FSM_STATE_TOP__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_ORX_FW_STATES__FSM_STATE_TOP__READ(die, channel)         SPICA_ORX_FW_STATES__FSM_STATE_TOP__GET(SPICA_ORX_FW_STATES__READ(die, channel))
#  define SPICA_ORX_FW_STATES__FSM_STATE_TOP__WRITE(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_ORX_FW_STATES__FSM_STATE_TOP__RMW(die, channel, fdata) SPICA_ORX_FW_STATES__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_ORX_FW_STATES__FSM_STATE_TOP__MASK                       0x1f
#  define SPICA_ORX_FW_STATES__FSM_STATE_TOP__OFFSET                     0

#define SPICA_ORX_FW_CONTROL__ADDRESS                      0x1e602d
#define SPICA_ORX_FW_CONTROL__DEFAULT                      0x0
#define SPICA_ORX_FW_CONTROL__ICOUNT                        5
#define SPICA_ORX_FW_CONTROL__ISPAN                         0x800
#define SPICA_ORX_FW_CONTROL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_FW_CONTROL__ADDRESS)
#define SPICA_ORX_FW_CONTROL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_FW_CONTROL__ADDRESS)
#define SPICA_ORX_FW_CONTROL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_FW_CONTROL__ADDRESS, (data))
#define SPICA_ORX_FW_CONTROL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_FW_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__READ(die, channel)         SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__GET(SPICA_ORX_FW_CONTROL__READ(die, channel))
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__WRITE(die, channel, fdata) SPICA_ORX_FW_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__RMW(die, channel, fdata) SPICA_ORX_FW_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__MASK                       0x1
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__OFFSET                     2
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__READ(die, channel)         SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__GET(SPICA_ORX_FW_CONTROL__READ(die, channel))
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__WRITE(die, channel, fdata) SPICA_ORX_FW_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__RMW(die, channel, fdata) SPICA_ORX_FW_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__MASK                       0x1
#  define SPICA_ORX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__OFFSET                     1
#  define SPICA_ORX_FW_CONTROL__REACQUIRE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_FW_CONTROL__REACQUIRE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_FW_CONTROL__REACQUIRE__READ(die, channel)         SPICA_ORX_FW_CONTROL__REACQUIRE__GET(SPICA_ORX_FW_CONTROL__READ(die, channel))
#  define SPICA_ORX_FW_CONTROL__REACQUIRE__WRITE(die, channel, fdata) SPICA_ORX_FW_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_FW_CONTROL__REACQUIRE__RMW(die, channel, fdata) SPICA_ORX_FW_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_FW_CONTROL__REACQUIRE__MASK                       0x1
#  define SPICA_ORX_FW_CONTROL__REACQUIRE__OFFSET                     0

#define SPICA_ORX_FW_STATUS__ADDRESS                      0x1e602e
#define SPICA_ORX_FW_STATUS__DEFAULT                      0x0
#define SPICA_ORX_FW_STATUS__ICOUNT                        5
#define SPICA_ORX_FW_STATUS__ISPAN                         0x800
#define SPICA_ORX_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_FW_STATUS__ADDRESS)
#define SPICA_ORX_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_FW_STATUS__ADDRESS)
#define SPICA_ORX_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_FW_STATUS__ADDRESS, (data))
#define SPICA_ORX_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_ORX_FW_STATUS__SDT__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_ORX_FW_STATUS__SDT__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_ORX_FW_STATUS__SDT__READ(die, channel)         SPICA_ORX_FW_STATUS__SDT__GET(SPICA_ORX_FW_STATUS__READ(die, channel))
#  define SPICA_ORX_FW_STATUS__SDT__WRITE(die, channel, fdata) SPICA_ORX_FW_STATUS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_FW_STATUS__SDT__RMW(die, channel, fdata) SPICA_ORX_FW_STATUS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_ORX_FW_STATUS__SDT__MASK                       0x1
#  define SPICA_ORX_FW_STATUS__SDT__OFFSET                     9
#  define SPICA_ORX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_ORX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_ORX_FW_STATUS__LOCKED__READ(die, channel)         SPICA_ORX_FW_STATUS__LOCKED__GET(SPICA_ORX_FW_STATUS__READ(die, channel))
#  define SPICA_ORX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_ORX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_ORX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_ORX_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_ORX_FW_STATUS__LOCKED__OFFSET                     8
#  define SPICA_ORX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ORX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ORX_FW_STATUS__RESET_COUNT__READ(die, channel)         SPICA_ORX_FW_STATUS__RESET_COUNT__GET(SPICA_ORX_FW_STATUS__READ(die, channel))
#  define SPICA_ORX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SPICA_ORX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ORX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SPICA_ORX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ORX_FW_STATUS__RESET_COUNT__MASK                       0xff
#  define SPICA_ORX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SPICA_ORX_SNR_METRIC__ADDRESS                      0x1e602f
#define SPICA_ORX_SNR_METRIC__DEFAULT                      0xffff
#define SPICA_ORX_SNR_METRIC__ICOUNT                        5
#define SPICA_ORX_SNR_METRIC__ISPAN                         0x800
#define SPICA_ORX_SNR_METRIC__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_SNR_METRIC__ADDRESS)
#define SPICA_ORX_SNR_METRIC__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_SNR_METRIC__ADDRESS)
#define SPICA_ORX_SNR_METRIC__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_SNR_METRIC__ADDRESS, (data))
#define SPICA_ORX_SNR_METRIC__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_SNR_METRIC__ADDRESS, (data), (mask))
#  define SPICA_ORX_SNR_METRIC__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_SNR_METRIC__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_SNR_METRIC__VALUE__READ(die, channel)         SPICA_ORX_SNR_METRIC__VALUE__GET(SPICA_ORX_SNR_METRIC__READ(die, channel))
#  define SPICA_ORX_SNR_METRIC__VALUE__WRITE(die, channel, fdata) SPICA_ORX_SNR_METRIC__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_SNR_METRIC__VALUE__RMW(die, channel, fdata) SPICA_ORX_SNR_METRIC__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_SNR_METRIC__VALUE__MASK                       0xffff
#  define SPICA_ORX_SNR_METRIC__VALUE__OFFSET                     0

#define SPICA_ORX_FW_INT__ADDRESS                      0x1e6030
#define SPICA_ORX_FW_INT__DEFAULT                      0x0
#define SPICA_ORX_FW_INT__ICOUNT                        5
#define SPICA_ORX_FW_INT__ISPAN                         0x800
#define SPICA_ORX_FW_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_FW_INT__ADDRESS)
#define SPICA_ORX_FW_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_FW_INT__ADDRESS)
#define SPICA_ORX_FW_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_FW_INT__ADDRESS, (data))
#define SPICA_ORX_FW_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_FW_INT__ADDRESS, (data), (mask))
#  define SPICA_ORX_FW_INT__LOL__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_FW_INT__LOL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_FW_INT__LOL__READ(die, channel)         SPICA_ORX_FW_INT__LOL__GET(SPICA_ORX_FW_INT__READ(die, channel))
#  define SPICA_ORX_FW_INT__LOL__WRITE(die, channel, fdata) SPICA_ORX_FW_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_FW_INT__LOL__RMW(die, channel, fdata) SPICA_ORX_FW_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_FW_INT__LOL__MASK                       0x1
#  define SPICA_ORX_FW_INT__LOL__OFFSET                     1
#  define SPICA_ORX_FW_INT__LOS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_FW_INT__LOS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_FW_INT__LOS__READ(die, channel)         SPICA_ORX_FW_INT__LOS__GET(SPICA_ORX_FW_INT__READ(die, channel))
#  define SPICA_ORX_FW_INT__LOS__WRITE(die, channel, fdata) SPICA_ORX_FW_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_FW_INT__LOS__RMW(die, channel, fdata) SPICA_ORX_FW_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_FW_INT__LOS__MASK                       0x1
#  define SPICA_ORX_FW_INT__LOS__OFFSET                     0

#define SPICA_ORX_ALG_CTRL__ADDRESS                      0x1e6031
#define SPICA_ORX_ALG_CTRL__DEFAULT                      0x0
#define SPICA_ORX_ALG_CTRL__ICOUNT                        5
#define SPICA_ORX_ALG_CTRL__ISPAN                         0x800
#define SPICA_ORX_ALG_CTRL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_ALG_CTRL__ADDRESS)
#define SPICA_ORX_ALG_CTRL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_ALG_CTRL__ADDRESS)
#define SPICA_ORX_ALG_CTRL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_ALG_CTRL__ADDRESS, (data))
#define SPICA_ORX_ALG_CTRL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_ALG_CTRL__ADDRESS, (data), (mask))
#  define SPICA_ORX_ALG_CTRL__CTRL__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_ALG_CTRL__CTRL__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_ALG_CTRL__CTRL__READ(die, channel)         SPICA_ORX_ALG_CTRL__CTRL__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__CTRL__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_ALG_CTRL__CTRL__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_ALG_CTRL__CTRL__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__CTRL__OFFSET                     15
#  define SPICA_ORX_ALG_CTRL__DDSL__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_ORX_ALG_CTRL__DDSL__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_ORX_ALG_CTRL__DDSL__READ(die, channel)         SPICA_ORX_ALG_CTRL__DDSL__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__DDSL__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_ALG_CTRL__DDSL__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_ALG_CTRL__DDSL__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__DDSL__OFFSET                     14
#  define SPICA_ORX_ALG_CTRL__QC_ALL_DIS__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_ORX_ALG_CTRL__QC_ALL_DIS__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_ORX_ALG_CTRL__QC_ALL_DIS__READ(die, channel)         SPICA_ORX_ALG_CTRL__QC_ALL_DIS__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__QC_ALL_DIS__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_ALG_CTRL__QC_ALL_DIS__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_ORX_ALG_CTRL__QC_ALL_DIS__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__QC_ALL_DIS__OFFSET                     7
#  define SPICA_ORX_ALG_CTRL__QC_HIST_DIS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ORX_ALG_CTRL__QC_HIST_DIS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ORX_ALG_CTRL__QC_HIST_DIS__READ(die, channel)         SPICA_ORX_ALG_CTRL__QC_HIST_DIS__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__QC_HIST_DIS__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_ALG_CTRL__QC_HIST_DIS__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_ALG_CTRL__QC_HIST_DIS__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__QC_HIST_DIS__OFFSET                     6
#  define SPICA_ORX_ALG_CTRL__QC_SLC_DIS__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_ALG_CTRL__QC_SLC_DIS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_ALG_CTRL__QC_SLC_DIS__READ(die, channel)         SPICA_ORX_ALG_CTRL__QC_SLC_DIS__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__QC_SLC_DIS__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_ALG_CTRL__QC_SLC_DIS__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_ALG_CTRL__QC_SLC_DIS__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__QC_SLC_DIS__OFFSET                     5
#  define SPICA_ORX_ALG_CTRL__QC_SNR_DIS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_ALG_CTRL__QC_SNR_DIS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_ALG_CTRL__QC_SNR_DIS__READ(die, channel)         SPICA_ORX_ALG_CTRL__QC_SNR_DIS__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__QC_SNR_DIS__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_ALG_CTRL__QC_SNR_DIS__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_ALG_CTRL__QC_SNR_DIS__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__QC_SNR_DIS__OFFSET                     4
#  define SPICA_ORX_ALG_CTRL__ALG4_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_ALG_CTRL__ALG4_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_ALG_CTRL__ALG4_EN__READ(die, channel)         SPICA_ORX_ALG_CTRL__ALG4_EN__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__ALG4_EN__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_ALG_CTRL__ALG4_EN__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_ALG_CTRL__ALG4_EN__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__ALG4_EN__OFFSET                     3
#  define SPICA_ORX_ALG_CTRL__ALG3_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_ALG_CTRL__ALG3_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_ALG_CTRL__ALG3_EN__READ(die, channel)         SPICA_ORX_ALG_CTRL__ALG3_EN__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__ALG3_EN__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_ALG_CTRL__ALG3_EN__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_ALG_CTRL__ALG3_EN__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__ALG3_EN__OFFSET                     2
#  define SPICA_ORX_ALG_CTRL__ALG2_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_ALG_CTRL__ALG2_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_ALG_CTRL__ALG2_EN__READ(die, channel)         SPICA_ORX_ALG_CTRL__ALG2_EN__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__ALG2_EN__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_ALG_CTRL__ALG2_EN__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_ALG_CTRL__ALG2_EN__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__ALG2_EN__OFFSET                     1
#  define SPICA_ORX_ALG_CTRL__ALG1_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_ALG_CTRL__ALG1_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_ALG_CTRL__ALG1_EN__READ(die, channel)         SPICA_ORX_ALG_CTRL__ALG1_EN__GET(SPICA_ORX_ALG_CTRL__READ(die, channel))
#  define SPICA_ORX_ALG_CTRL__ALG1_EN__WRITE(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_ALG_CTRL__ALG1_EN__RMW(die, channel, fdata) SPICA_ORX_ALG_CTRL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_ALG_CTRL__ALG1_EN__MASK                       0x1
#  define SPICA_ORX_ALG_CTRL__ALG1_EN__OFFSET                     0

#define SPICA_ORX_ALG_STATUS__ADDRESS                      0x1e6032
#define SPICA_ORX_ALG_STATUS__DEFAULT                      0x0
#define SPICA_ORX_ALG_STATUS__ICOUNT                        5
#define SPICA_ORX_ALG_STATUS__ISPAN                         0x800
#define SPICA_ORX_ALG_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_ALG_STATUS__ADDRESS)
#define SPICA_ORX_ALG_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_ALG_STATUS__ADDRESS)
#define SPICA_ORX_ALG_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_ALG_STATUS__ADDRESS, (data))
#define SPICA_ORX_ALG_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_ALG_STATUS__ADDRESS, (data), (mask))
#  define SPICA_ORX_ALG_STATUS__RSP__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_ALG_STATUS__RSP__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_ALG_STATUS__RSP__READ(die, channel)         SPICA_ORX_ALG_STATUS__RSP__GET(SPICA_ORX_ALG_STATUS__READ(die, channel))
#  define SPICA_ORX_ALG_STATUS__RSP__WRITE(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_ALG_STATUS__RSP__RMW(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_ALG_STATUS__RSP__MASK                       0x1
#  define SPICA_ORX_ALG_STATUS__RSP__OFFSET                     15
#  define SPICA_ORX_ALG_STATUS__ALG4_STATUS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_ALG_STATUS__ALG4_STATUS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_ALG_STATUS__ALG4_STATUS__READ(die, channel)         SPICA_ORX_ALG_STATUS__ALG4_STATUS__GET(SPICA_ORX_ALG_STATUS__READ(die, channel))
#  define SPICA_ORX_ALG_STATUS__ALG4_STATUS__WRITE(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_ALG_STATUS__ALG4_STATUS__RMW(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_ALG_STATUS__ALG4_STATUS__MASK                       0x1
#  define SPICA_ORX_ALG_STATUS__ALG4_STATUS__OFFSET                     3
#  define SPICA_ORX_ALG_STATUS__ALG3_STATUS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_ALG_STATUS__ALG3_STATUS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_ALG_STATUS__ALG3_STATUS__READ(die, channel)         SPICA_ORX_ALG_STATUS__ALG3_STATUS__GET(SPICA_ORX_ALG_STATUS__READ(die, channel))
#  define SPICA_ORX_ALG_STATUS__ALG3_STATUS__WRITE(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_ALG_STATUS__ALG3_STATUS__RMW(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_ALG_STATUS__ALG3_STATUS__MASK                       0x1
#  define SPICA_ORX_ALG_STATUS__ALG3_STATUS__OFFSET                     2
#  define SPICA_ORX_ALG_STATUS__ALG2_STATUS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_ALG_STATUS__ALG2_STATUS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_ALG_STATUS__ALG2_STATUS__READ(die, channel)         SPICA_ORX_ALG_STATUS__ALG2_STATUS__GET(SPICA_ORX_ALG_STATUS__READ(die, channel))
#  define SPICA_ORX_ALG_STATUS__ALG2_STATUS__WRITE(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_ALG_STATUS__ALG2_STATUS__RMW(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_ALG_STATUS__ALG2_STATUS__MASK                       0x1
#  define SPICA_ORX_ALG_STATUS__ALG2_STATUS__OFFSET                     1
#  define SPICA_ORX_ALG_STATUS__ALG1_STATUS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_ALG_STATUS__ALG1_STATUS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_ALG_STATUS__ALG1_STATUS__READ(die, channel)         SPICA_ORX_ALG_STATUS__ALG1_STATUS__GET(SPICA_ORX_ALG_STATUS__READ(die, channel))
#  define SPICA_ORX_ALG_STATUS__ALG1_STATUS__WRITE(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_ALG_STATUS__ALG1_STATUS__RMW(die, channel, fdata) SPICA_ORX_ALG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_ALG_STATUS__ALG1_STATUS__MASK                       0x1
#  define SPICA_ORX_ALG_STATUS__ALG1_STATUS__OFFSET                     0

#define SPICA_ORX_RULES_0__ADDRESS                      0x1e6033
#define SPICA_ORX_RULES_0__DEFAULT                      0x0
#define SPICA_ORX_RULES_0__ICOUNT                        5
#define SPICA_ORX_RULES_0__ISPAN                         0x800
#define SPICA_ORX_RULES_0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_RULES_0__ADDRESS)
#define SPICA_ORX_RULES_0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_RULES_0__ADDRESS)
#define SPICA_ORX_RULES_0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_RULES_0__ADDRESS, (data))
#define SPICA_ORX_RULES_0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_RULES_0__ADDRESS, (data), (mask))
#  define SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__READ(die, channel)         SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__MASK                       0x1
#  define SPICA_ORX_RULES_0__RESTART_ON_LOS_DIS__OFFSET                     15
#  define SPICA_ORX_RULES_0__LOS_DSP_EN__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_ORX_RULES_0__LOS_DSP_EN__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_ORX_RULES_0__LOS_DSP_EN__READ(die, channel)         SPICA_ORX_RULES_0__LOS_DSP_EN__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__LOS_DSP_EN__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_RULES_0__LOS_DSP_EN__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_RULES_0__LOS_DSP_EN__MASK                       0x1
#  define SPICA_ORX_RULES_0__LOS_DSP_EN__OFFSET                     13
#  define SPICA_ORX_RULES_0__SDT_DSP_EN__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_ORX_RULES_0__SDT_DSP_EN__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_ORX_RULES_0__SDT_DSP_EN__READ(die, channel)         SPICA_ORX_RULES_0__SDT_DSP_EN__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__SDT_DSP_EN__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_RULES_0__SDT_DSP_EN__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_RULES_0__SDT_DSP_EN__MASK                       0x1
#  define SPICA_ORX_RULES_0__SDT_DSP_EN__OFFSET                     12
#  define SPICA_ORX_RULES_0__6BIT_MODE__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_ORX_RULES_0__6BIT_MODE__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_ORX_RULES_0__6BIT_MODE__READ(die, channel)         SPICA_ORX_RULES_0__6BIT_MODE__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__6BIT_MODE__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_ORX_RULES_0__6BIT_MODE__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_ORX_RULES_0__6BIT_MODE__MASK                       0x3
#  define SPICA_ORX_RULES_0__6BIT_MODE__OFFSET                     10
#  define SPICA_ORX_RULES_0__BAUD_RATE_SEL__SET(rdata, fdata)         (((rdata) & 0xfc7f) | (((uint32_t)(fdata) << 7) & 0x380))
#  define SPICA_ORX_RULES_0__BAUD_RATE_SEL__GET(rdata)                (((rdata) >> 7) & 0x7)
#  define SPICA_ORX_RULES_0__BAUD_RATE_SEL__READ(die, channel)         SPICA_ORX_RULES_0__BAUD_RATE_SEL__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__BAUD_RATE_SEL__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x380)
#  define SPICA_ORX_RULES_0__BAUD_RATE_SEL__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x380)
#  define SPICA_ORX_RULES_0__BAUD_RATE_SEL__MASK                       0x7
#  define SPICA_ORX_RULES_0__BAUD_RATE_SEL__OFFSET                     7
#  define SPICA_ORX_RULES_0__FORCE_MISSION_MODE__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_ORX_RULES_0__FORCE_MISSION_MODE__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_ORX_RULES_0__FORCE_MISSION_MODE__READ(die, channel)         SPICA_ORX_RULES_0__FORCE_MISSION_MODE__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__FORCE_MISSION_MODE__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_RULES_0__FORCE_MISSION_MODE__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_ORX_RULES_0__FORCE_MISSION_MODE__MASK                       0x1
#  define SPICA_ORX_RULES_0__FORCE_MISSION_MODE__OFFSET                     6
#  define SPICA_ORX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_RULES_0__SIGNALLING__READ(die, channel)         SPICA_ORX_RULES_0__SIGNALLING__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_RULES_0__SIGNALLING__MASK                       0x1
#  define SPICA_ORX_RULES_0__SIGNALLING__OFFSET                     5
#  define SPICA_ORX_RULES_0__CHANNEL_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_RULES_0__CHANNEL_ENABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_RULES_0__CHANNEL_ENABLE__READ(die, channel)         SPICA_ORX_RULES_0__CHANNEL_ENABLE__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__CHANNEL_ENABLE__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_RULES_0__CHANNEL_ENABLE__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_RULES_0__CHANNEL_ENABLE__MASK                       0x1
#  define SPICA_ORX_RULES_0__CHANNEL_ENABLE__OFFSET                     4
#  define SPICA_ORX_RULES_0__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_RULES_0__IEEE_DEMAP__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_RULES_0__IEEE_DEMAP__READ(die, channel)         SPICA_ORX_RULES_0__IEEE_DEMAP__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__IEEE_DEMAP__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_RULES_0__IEEE_DEMAP__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_RULES_0__IEEE_DEMAP__MASK                       0x1
#  define SPICA_ORX_RULES_0__IEEE_DEMAP__OFFSET                     3
#  define SPICA_ORX_RULES_0__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_ORX_RULES_0__INVERT_CHAN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_ORX_RULES_0__INVERT_CHAN__READ(die, channel)         SPICA_ORX_RULES_0__INVERT_CHAN__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__INVERT_CHAN__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_RULES_0__INVERT_CHAN__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_ORX_RULES_0__INVERT_CHAN__MASK                       0x1
#  define SPICA_ORX_RULES_0__INVERT_CHAN__OFFSET                     2
#  define SPICA_ORX_RULES_0__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_ORX_RULES_0__GRAY_MAPPING__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_ORX_RULES_0__GRAY_MAPPING__READ(die, channel)         SPICA_ORX_RULES_0__GRAY_MAPPING__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__GRAY_MAPPING__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_RULES_0__GRAY_MAPPING__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_ORX_RULES_0__GRAY_MAPPING__MASK                       0x1
#  define SPICA_ORX_RULES_0__GRAY_MAPPING__OFFSET                     1
#  define SPICA_ORX_RULES_0__UPDATE_ORX_RULES__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ORX_RULES_0__UPDATE_ORX_RULES__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ORX_RULES_0__UPDATE_ORX_RULES__READ(die, channel)         SPICA_ORX_RULES_0__UPDATE_ORX_RULES__GET(SPICA_ORX_RULES_0__READ(die, channel))
#  define SPICA_ORX_RULES_0__UPDATE_ORX_RULES__WRITE(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_RULES_0__UPDATE_ORX_RULES__RMW(die, channel, fdata) SPICA_ORX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ORX_RULES_0__UPDATE_ORX_RULES__MASK                       0x1
#  define SPICA_ORX_RULES_0__UPDATE_ORX_RULES__OFFSET                     0

#define SPICA_ORX_RULES_1__ADDRESS                      0x1e6035
#define SPICA_ORX_RULES_1__DEFAULT                      0x932
#define SPICA_ORX_RULES_1__ICOUNT                        5
#define SPICA_ORX_RULES_1__ISPAN                         0x800
#define SPICA_ORX_RULES_1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_RULES_1__ADDRESS)
#define SPICA_ORX_RULES_1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_RULES_1__ADDRESS)
#define SPICA_ORX_RULES_1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_RULES_1__ADDRESS, (data))
#define SPICA_ORX_RULES_1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_RULES_1__ADDRESS, (data), (mask))
#  define SPICA_ORX_RULES_1__ALG4_DIS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_ORX_RULES_1__ALG4_DIS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_ORX_RULES_1__ALG4_DIS__READ(die, channel)         SPICA_ORX_RULES_1__ALG4_DIS__GET(SPICA_ORX_RULES_1__READ(die, channel))
#  define SPICA_ORX_RULES_1__ALG4_DIS__WRITE(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_RULES_1__ALG4_DIS__RMW(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_ORX_RULES_1__ALG4_DIS__MASK                       0x1
#  define SPICA_ORX_RULES_1__ALG4_DIS__OFFSET                     15
#  define SPICA_ORX_RULES_1__ALG3_DIS__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_ORX_RULES_1__ALG3_DIS__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_ORX_RULES_1__ALG3_DIS__READ(die, channel)         SPICA_ORX_RULES_1__ALG3_DIS__GET(SPICA_ORX_RULES_1__READ(die, channel))
#  define SPICA_ORX_RULES_1__ALG3_DIS__WRITE(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_RULES_1__ALG3_DIS__RMW(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_ORX_RULES_1__ALG3_DIS__MASK                       0x1
#  define SPICA_ORX_RULES_1__ALG3_DIS__OFFSET                     14
#  define SPICA_ORX_RULES_1__ALG2_DIS__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_ORX_RULES_1__ALG2_DIS__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_ORX_RULES_1__ALG2_DIS__READ(die, channel)         SPICA_ORX_RULES_1__ALG2_DIS__GET(SPICA_ORX_RULES_1__READ(die, channel))
#  define SPICA_ORX_RULES_1__ALG2_DIS__WRITE(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_RULES_1__ALG2_DIS__RMW(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_ORX_RULES_1__ALG2_DIS__MASK                       0x1
#  define SPICA_ORX_RULES_1__ALG2_DIS__OFFSET                     13
#  define SPICA_ORX_RULES_1__ALG1_DIS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_ORX_RULES_1__ALG1_DIS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_ORX_RULES_1__ALG1_DIS__READ(die, channel)         SPICA_ORX_RULES_1__ALG1_DIS__GET(SPICA_ORX_RULES_1__READ(die, channel))
#  define SPICA_ORX_RULES_1__ALG1_DIS__WRITE(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_RULES_1__ALG1_DIS__RMW(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_ORX_RULES_1__ALG1_DIS__MASK                       0x1
#  define SPICA_ORX_RULES_1__ALG1_DIS__OFFSET                     12
#  define SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__READ(die, channel)         SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__GET(SPICA_ORX_RULES_1__READ(die, channel))
#  define SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__WRITE(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__RMW(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__MASK                       0x1
#  define SPICA_ORX_RULES_1__FFE_CONST_DIFF_EN__OFFSET                     11
#  define SPICA_ORX_RULES_1__BW_IDX_MAX__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_ORX_RULES_1__BW_IDX_MAX__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_ORX_RULES_1__BW_IDX_MAX__READ(die, channel)         SPICA_ORX_RULES_1__BW_IDX_MAX__GET(SPICA_ORX_RULES_1__READ(die, channel))
#  define SPICA_ORX_RULES_1__BW_IDX_MAX__WRITE(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_RULES_1__BW_IDX_MAX__RMW(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_ORX_RULES_1__BW_IDX_MAX__MASK                       0x7
#  define SPICA_ORX_RULES_1__BW_IDX_MAX__OFFSET                     8
#  define SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__READ(die, channel)         SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__GET(SPICA_ORX_RULES_1__READ(die, channel))
#  define SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__WRITE(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__RMW(die, channel, fdata) SPICA_ORX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__MASK                       0xff
#  define SPICA_ORX_RULES_1__VGA1_TRACKING_PERIOD__OFFSET                     0

#define SPICA_ORX_LTP__ADDRESS                      0x1e6036
#define SPICA_ORX_LTP__DEFAULT                      0x0
#define SPICA_ORX_LTP__ICOUNT                        5
#define SPICA_ORX_LTP__ISPAN                         0x800
#define SPICA_ORX_LTP__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_LTP__ADDRESS)
#define SPICA_ORX_LTP__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_LTP__ADDRESS)
#define SPICA_ORX_LTP__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_LTP__ADDRESS, (data))
#define SPICA_ORX_LTP__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_LTP__ADDRESS, (data), (mask))
#  define SPICA_ORX_LTP__LTP__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_ORX_LTP__LTP__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_ORX_LTP__LTP__READ(die, channel)         SPICA_ORX_LTP__LTP__GET(SPICA_ORX_LTP__READ(die, channel))
#  define SPICA_ORX_LTP__LTP__WRITE(die, channel, fdata) SPICA_ORX_LTP__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_LTP__LTP__RMW(die, channel, fdata) SPICA_ORX_LTP__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_ORX_LTP__LTP__MASK                       0xffff
#  define SPICA_ORX_LTP__LTP__OFFSET                     0

#define SPICA_ORX_PLL_FW_STATUS__ADDRESS                      0x1e6675
#define SPICA_ORX_PLL_FW_STATUS__DEFAULT                      0x0
#define SPICA_ORX_PLL_FW_STATUS__ICOUNT                        5
#define SPICA_ORX_PLL_FW_STATUS__ISPAN                         0x800
#define SPICA_ORX_PLL_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_PLL_FW_STATUS__ADDRESS)
#define SPICA_ORX_PLL_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_PLL_FW_STATUS__ADDRESS)
#define SPICA_ORX_PLL_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_PLL_FW_STATUS__ADDRESS, (data))
#define SPICA_ORX_PLL_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_PLL_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_ORX_PLL_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_PLL_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_PLL_FW_STATUS__LOCKED__READ(die, channel)         SPICA_ORX_PLL_FW_STATUS__LOCKED__GET(SPICA_ORX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_ORX_PLL_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_ORX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_PLL_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_ORX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_PLL_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_ORX_PLL_FW_STATUS__LOCKED__OFFSET                     5
#  define SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__SET(rdata, fdata)         (((rdata) & 0xe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__READ(die, channel)         SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__GET(SPICA_ORX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__WRITE(die, channel, fdata) SPICA_ORX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__RMW(die, channel, fdata) SPICA_ORX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__MASK                       0x1f
#  define SPICA_ORX_PLL_FW_STATUS__PLL_FSM_STATE__OFFSET                     0

#define SPICA_ORX_TMON_CTRL0__ADDRESS                      0x1e6754
#define SPICA_ORX_TMON_CTRL0__DEFAULT                      0x0
#define SPICA_ORX_TMON_CTRL0__ICOUNT                        5
#define SPICA_ORX_TMON_CTRL0__ISPAN                         0x800
#define SPICA_ORX_TMON_CTRL0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ORX_TMON_CTRL0__ADDRESS)
#define SPICA_ORX_TMON_CTRL0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ORX_TMON_CTRL0__ADDRESS)
#define SPICA_ORX_TMON_CTRL0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ORX_TMON_CTRL0__ADDRESS, (data))
#define SPICA_ORX_TMON_CTRL0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ORX_TMON_CTRL0__ADDRESS, (data), (mask))
#  define SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__READ(die, channel)         SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(SPICA_ORX_TMON_CTRL0__READ(die, channel))
#  define SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__WRITE(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__RMW(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__MASK                       0x1
#  define SPICA_ORX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__OFFSET                     5
#  define SPICA_ORX_TMON_CTRL0__DISABLE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_ORX_TMON_CTRL0__DISABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_ORX_TMON_CTRL0__DISABLE__READ(die, channel)         SPICA_ORX_TMON_CTRL0__DISABLE__GET(SPICA_ORX_TMON_CTRL0__READ(die, channel))
#  define SPICA_ORX_TMON_CTRL0__DISABLE__WRITE(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_TMON_CTRL0__DISABLE__RMW(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_ORX_TMON_CTRL0__DISABLE__MASK                       0x1
#  define SPICA_ORX_TMON_CTRL0__DISABLE__OFFSET                     4
#  define SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__READ(die, channel)         SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(SPICA_ORX_TMON_CTRL0__READ(die, channel))
#  define SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__WRITE(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__RMW(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__MASK                       0x1
#  define SPICA_ORX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__OFFSET                     3
#  define SPICA_ORX_TMON_CTRL0__IADC_VAL__SET(rdata, fdata)         (((rdata) & 0xf8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_ORX_TMON_CTRL0__IADC_VAL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_ORX_TMON_CTRL0__IADC_VAL__READ(die, channel)         SPICA_ORX_TMON_CTRL0__IADC_VAL__GET(SPICA_ORX_TMON_CTRL0__READ(die, channel))
#  define SPICA_ORX_TMON_CTRL0__IADC_VAL__WRITE(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_ORX_TMON_CTRL0__IADC_VAL__RMW(die, channel, fdata) SPICA_ORX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_ORX_TMON_CTRL0__IADC_VAL__MASK                       0x7
#  define SPICA_ORX_TMON_CTRL0__IADC_VAL__OFFSET                     0

#define SPICA_MRX_FW_STATES__ADDRESS                      0x1e382c
#define SPICA_MRX_FW_STATES__DEFAULT                      0x0
#define SPICA_MRX_FW_STATES__ICOUNT                        5
#define SPICA_MRX_FW_STATES__ISPAN                         0x800
#define SPICA_MRX_FW_STATES__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_FW_STATES__ADDRESS)
#define SPICA_MRX_FW_STATES__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_FW_STATES__ADDRESS)
#define SPICA_MRX_FW_STATES__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_FW_STATES__ADDRESS, (data))
#define SPICA_MRX_FW_STATES__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_FW_STATES__ADDRESS, (data), (mask))
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__READ(die, channel)         SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__GET(SPICA_MRX_FW_STATES__READ(die, channel))
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__WRITE(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__RMW(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__MASK                       0x7
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PU__OFFSET                     13
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__SET(rdata, fdata)         (((rdata) & 0xe3ff) | (((uint32_t)(fdata) << 10) & 0x1c00))
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__GET(rdata)                (((rdata) >> 10) & 0x7)
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__READ(die, channel)         SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__GET(SPICA_MRX_FW_STATES__READ(die, channel))
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__WRITE(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<10, 0x1c00)
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__RMW(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<10, 0x1c00)
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__MASK                       0x7
#  define SPICA_MRX_FW_STATES__FSM_STATE_HW_PD__OFFSET                     10
#  define SPICA_MRX_FW_STATES__FSM_STATE_CALIB__SET(rdata, fdata)         (((rdata) & 0xfc1f) | (((uint32_t)(fdata) << 5) & 0x3e0))
#  define SPICA_MRX_FW_STATES__FSM_STATE_CALIB__GET(rdata)                (((rdata) >> 5) & 0x1f)
#  define SPICA_MRX_FW_STATES__FSM_STATE_CALIB__READ(die, channel)         SPICA_MRX_FW_STATES__FSM_STATE_CALIB__GET(SPICA_MRX_FW_STATES__READ(die, channel))
#  define SPICA_MRX_FW_STATES__FSM_STATE_CALIB__WRITE(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SPICA_MRX_FW_STATES__FSM_STATE_CALIB__RMW(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<5, 0x3e0)
#  define SPICA_MRX_FW_STATES__FSM_STATE_CALIB__MASK                       0x1f
#  define SPICA_MRX_FW_STATES__FSM_STATE_CALIB__OFFSET                     5
#  define SPICA_MRX_FW_STATES__FSM_STATE_TOP__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_MRX_FW_STATES__FSM_STATE_TOP__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_MRX_FW_STATES__FSM_STATE_TOP__READ(die, channel)         SPICA_MRX_FW_STATES__FSM_STATE_TOP__GET(SPICA_MRX_FW_STATES__READ(die, channel))
#  define SPICA_MRX_FW_STATES__FSM_STATE_TOP__WRITE(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_MRX_FW_STATES__FSM_STATE_TOP__RMW(die, channel, fdata) SPICA_MRX_FW_STATES__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_MRX_FW_STATES__FSM_STATE_TOP__MASK                       0x1f
#  define SPICA_MRX_FW_STATES__FSM_STATE_TOP__OFFSET                     0

#define SPICA_MRX_FW_CONTROL__ADDRESS                      0x1e382d
#define SPICA_MRX_FW_CONTROL__DEFAULT                      0x0
#define SPICA_MRX_FW_CONTROL__ICOUNT                        5
#define SPICA_MRX_FW_CONTROL__ISPAN                         0x800
#define SPICA_MRX_FW_CONTROL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_FW_CONTROL__ADDRESS)
#define SPICA_MRX_FW_CONTROL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_FW_CONTROL__ADDRESS)
#define SPICA_MRX_FW_CONTROL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_FW_CONTROL__ADDRESS, (data))
#define SPICA_MRX_FW_CONTROL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_FW_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__READ(die, channel)         SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__GET(SPICA_MRX_FW_CONTROL__READ(die, channel))
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__WRITE(die, channel, fdata) SPICA_MRX_FW_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__RMW(die, channel, fdata) SPICA_MRX_FW_CONTROL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__MASK                       0x1
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__OFFSET                     2
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__READ(die, channel)         SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__GET(SPICA_MRX_FW_CONTROL__READ(die, channel))
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__WRITE(die, channel, fdata) SPICA_MRX_FW_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__RMW(die, channel, fdata) SPICA_MRX_FW_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__MASK                       0x1
#  define SPICA_MRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__OFFSET                     1
#  define SPICA_MRX_FW_CONTROL__REACQUIRE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_FW_CONTROL__REACQUIRE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_FW_CONTROL__REACQUIRE__READ(die, channel)         SPICA_MRX_FW_CONTROL__REACQUIRE__GET(SPICA_MRX_FW_CONTROL__READ(die, channel))
#  define SPICA_MRX_FW_CONTROL__REACQUIRE__WRITE(die, channel, fdata) SPICA_MRX_FW_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_FW_CONTROL__REACQUIRE__RMW(die, channel, fdata) SPICA_MRX_FW_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_FW_CONTROL__REACQUIRE__MASK                       0x1
#  define SPICA_MRX_FW_CONTROL__REACQUIRE__OFFSET                     0

#define SPICA_MRX_FW_STATUS__ADDRESS                      0x1e382e
#define SPICA_MRX_FW_STATUS__DEFAULT                      0x0
#define SPICA_MRX_FW_STATUS__ICOUNT                        5
#define SPICA_MRX_FW_STATUS__ISPAN                         0x800
#define SPICA_MRX_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_FW_STATUS__ADDRESS)
#define SPICA_MRX_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_FW_STATUS__ADDRESS)
#define SPICA_MRX_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_FW_STATUS__ADDRESS, (data))
#define SPICA_MRX_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MRX_FW_STATUS__SDT__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MRX_FW_STATUS__SDT__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MRX_FW_STATUS__SDT__READ(die, channel)         SPICA_MRX_FW_STATUS__SDT__GET(SPICA_MRX_FW_STATUS__READ(die, channel))
#  define SPICA_MRX_FW_STATUS__SDT__WRITE(die, channel, fdata) SPICA_MRX_FW_STATUS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_FW_STATUS__SDT__RMW(die, channel, fdata) SPICA_MRX_FW_STATUS__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_MRX_FW_STATUS__SDT__MASK                       0x1
#  define SPICA_MRX_FW_STATUS__SDT__OFFSET                     9
#  define SPICA_MRX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MRX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MRX_FW_STATUS__LOCKED__READ(die, channel)         SPICA_MRX_FW_STATUS__LOCKED__GET(SPICA_MRX_FW_STATUS__READ(die, channel))
#  define SPICA_MRX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_MRX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_MRX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_MRX_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_MRX_FW_STATUS__LOCKED__OFFSET                     8
#  define SPICA_MRX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_FW_STATUS__RESET_COUNT__READ(die, channel)         SPICA_MRX_FW_STATUS__RESET_COUNT__GET(SPICA_MRX_FW_STATUS__READ(die, channel))
#  define SPICA_MRX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SPICA_MRX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SPICA_MRX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_FW_STATUS__RESET_COUNT__MASK                       0xff
#  define SPICA_MRX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SPICA_MRX_SNR_METRIC__ADDRESS                      0x1e382f
#define SPICA_MRX_SNR_METRIC__DEFAULT                      0xffff
#define SPICA_MRX_SNR_METRIC__ICOUNT                        5
#define SPICA_MRX_SNR_METRIC__ISPAN                         0x800
#define SPICA_MRX_SNR_METRIC__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_SNR_METRIC__ADDRESS)
#define SPICA_MRX_SNR_METRIC__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_SNR_METRIC__ADDRESS)
#define SPICA_MRX_SNR_METRIC__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_SNR_METRIC__ADDRESS, (data))
#define SPICA_MRX_SNR_METRIC__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_SNR_METRIC__ADDRESS, (data), (mask))
#  define SPICA_MRX_SNR_METRIC__VALUE__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_SNR_METRIC__VALUE__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_SNR_METRIC__VALUE__READ(die, channel)         SPICA_MRX_SNR_METRIC__VALUE__GET(SPICA_MRX_SNR_METRIC__READ(die, channel))
#  define SPICA_MRX_SNR_METRIC__VALUE__WRITE(die, channel, fdata) SPICA_MRX_SNR_METRIC__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_SNR_METRIC__VALUE__RMW(die, channel, fdata) SPICA_MRX_SNR_METRIC__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_SNR_METRIC__VALUE__MASK                       0xffff
#  define SPICA_MRX_SNR_METRIC__VALUE__OFFSET                     0

#define SPICA_MRX_FW_INT__ADDRESS                      0x1e3830
#define SPICA_MRX_FW_INT__DEFAULT                      0x0
#define SPICA_MRX_FW_INT__ICOUNT                        5
#define SPICA_MRX_FW_INT__ISPAN                         0x800
#define SPICA_MRX_FW_INT__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_FW_INT__ADDRESS)
#define SPICA_MRX_FW_INT__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_FW_INT__ADDRESS)
#define SPICA_MRX_FW_INT__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_FW_INT__ADDRESS, (data))
#define SPICA_MRX_FW_INT__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_FW_INT__ADDRESS, (data), (mask))
#  define SPICA_MRX_FW_INT__LOL__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_FW_INT__LOL__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_FW_INT__LOL__READ(die, channel)         SPICA_MRX_FW_INT__LOL__GET(SPICA_MRX_FW_INT__READ(die, channel))
#  define SPICA_MRX_FW_INT__LOL__WRITE(die, channel, fdata) SPICA_MRX_FW_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_FW_INT__LOL__RMW(die, channel, fdata) SPICA_MRX_FW_INT__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_FW_INT__LOL__MASK                       0x1
#  define SPICA_MRX_FW_INT__LOL__OFFSET                     1
#  define SPICA_MRX_FW_INT__LOS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_FW_INT__LOS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_FW_INT__LOS__READ(die, channel)         SPICA_MRX_FW_INT__LOS__GET(SPICA_MRX_FW_INT__READ(die, channel))
#  define SPICA_MRX_FW_INT__LOS__WRITE(die, channel, fdata) SPICA_MRX_FW_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_FW_INT__LOS__RMW(die, channel, fdata) SPICA_MRX_FW_INT__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_FW_INT__LOS__MASK                       0x1
#  define SPICA_MRX_FW_INT__LOS__OFFSET                     0

#define SPICA_MRX_ALG_CTRL__ADDRESS                      0x1e3831
#define SPICA_MRX_ALG_CTRL__DEFAULT                      0x0
#define SPICA_MRX_ALG_CTRL__ICOUNT                        5
#define SPICA_MRX_ALG_CTRL__ISPAN                         0x800
#define SPICA_MRX_ALG_CTRL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_ALG_CTRL__ADDRESS)
#define SPICA_MRX_ALG_CTRL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_ALG_CTRL__ADDRESS)
#define SPICA_MRX_ALG_CTRL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_ALG_CTRL__ADDRESS, (data))
#define SPICA_MRX_ALG_CTRL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_ALG_CTRL__ADDRESS, (data), (mask))
#  define SPICA_MRX_ALG_CTRL__CTRL__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_ALG_CTRL__CTRL__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_ALG_CTRL__CTRL__READ(die, channel)         SPICA_MRX_ALG_CTRL__CTRL__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__CTRL__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_ALG_CTRL__CTRL__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_ALG_CTRL__CTRL__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__CTRL__OFFSET                     15
#  define SPICA_MRX_ALG_CTRL__DDSL__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MRX_ALG_CTRL__DDSL__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MRX_ALG_CTRL__DDSL__READ(die, channel)         SPICA_MRX_ALG_CTRL__DDSL__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__DDSL__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_ALG_CTRL__DDSL__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_ALG_CTRL__DDSL__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__DDSL__OFFSET                     14
#  define SPICA_MRX_ALG_CTRL__QC_ALL_DIS__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MRX_ALG_CTRL__QC_ALL_DIS__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MRX_ALG_CTRL__QC_ALL_DIS__READ(die, channel)         SPICA_MRX_ALG_CTRL__QC_ALL_DIS__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__QC_ALL_DIS__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_ALG_CTRL__QC_ALL_DIS__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MRX_ALG_CTRL__QC_ALL_DIS__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__QC_ALL_DIS__OFFSET                     7
#  define SPICA_MRX_ALG_CTRL__QC_HIST_DIS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_ALG_CTRL__QC_HIST_DIS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_ALG_CTRL__QC_HIST_DIS__READ(die, channel)         SPICA_MRX_ALG_CTRL__QC_HIST_DIS__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__QC_HIST_DIS__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_ALG_CTRL__QC_HIST_DIS__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_ALG_CTRL__QC_HIST_DIS__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__QC_HIST_DIS__OFFSET                     6
#  define SPICA_MRX_ALG_CTRL__QC_SLC_DIS__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_ALG_CTRL__QC_SLC_DIS__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_ALG_CTRL__QC_SLC_DIS__READ(die, channel)         SPICA_MRX_ALG_CTRL__QC_SLC_DIS__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__QC_SLC_DIS__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_ALG_CTRL__QC_SLC_DIS__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_ALG_CTRL__QC_SLC_DIS__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__QC_SLC_DIS__OFFSET                     5
#  define SPICA_MRX_ALG_CTRL__QC_SNR_DIS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_ALG_CTRL__QC_SNR_DIS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_ALG_CTRL__QC_SNR_DIS__READ(die, channel)         SPICA_MRX_ALG_CTRL__QC_SNR_DIS__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__QC_SNR_DIS__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_ALG_CTRL__QC_SNR_DIS__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_ALG_CTRL__QC_SNR_DIS__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__QC_SNR_DIS__OFFSET                     4
#  define SPICA_MRX_ALG_CTRL__ALG4_EN__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_ALG_CTRL__ALG4_EN__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_ALG_CTRL__ALG4_EN__READ(die, channel)         SPICA_MRX_ALG_CTRL__ALG4_EN__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__ALG4_EN__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_ALG_CTRL__ALG4_EN__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_ALG_CTRL__ALG4_EN__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__ALG4_EN__OFFSET                     3
#  define SPICA_MRX_ALG_CTRL__ALG3_EN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_ALG_CTRL__ALG3_EN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_ALG_CTRL__ALG3_EN__READ(die, channel)         SPICA_MRX_ALG_CTRL__ALG3_EN__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__ALG3_EN__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_ALG_CTRL__ALG3_EN__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_ALG_CTRL__ALG3_EN__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__ALG3_EN__OFFSET                     2
#  define SPICA_MRX_ALG_CTRL__ALG2_EN__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_ALG_CTRL__ALG2_EN__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_ALG_CTRL__ALG2_EN__READ(die, channel)         SPICA_MRX_ALG_CTRL__ALG2_EN__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__ALG2_EN__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_ALG_CTRL__ALG2_EN__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_ALG_CTRL__ALG2_EN__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__ALG2_EN__OFFSET                     1
#  define SPICA_MRX_ALG_CTRL__ALG1_EN__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_ALG_CTRL__ALG1_EN__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_ALG_CTRL__ALG1_EN__READ(die, channel)         SPICA_MRX_ALG_CTRL__ALG1_EN__GET(SPICA_MRX_ALG_CTRL__READ(die, channel))
#  define SPICA_MRX_ALG_CTRL__ALG1_EN__WRITE(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_ALG_CTRL__ALG1_EN__RMW(die, channel, fdata) SPICA_MRX_ALG_CTRL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_ALG_CTRL__ALG1_EN__MASK                       0x1
#  define SPICA_MRX_ALG_CTRL__ALG1_EN__OFFSET                     0

#define SPICA_MRX_ALG_STATUS__ADDRESS                      0x1e3832
#define SPICA_MRX_ALG_STATUS__DEFAULT                      0x0
#define SPICA_MRX_ALG_STATUS__ICOUNT                        5
#define SPICA_MRX_ALG_STATUS__ISPAN                         0x800
#define SPICA_MRX_ALG_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_ALG_STATUS__ADDRESS)
#define SPICA_MRX_ALG_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_ALG_STATUS__ADDRESS)
#define SPICA_MRX_ALG_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_ALG_STATUS__ADDRESS, (data))
#define SPICA_MRX_ALG_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_ALG_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MRX_ALG_STATUS__RSP__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_ALG_STATUS__RSP__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_ALG_STATUS__RSP__READ(die, channel)         SPICA_MRX_ALG_STATUS__RSP__GET(SPICA_MRX_ALG_STATUS__READ(die, channel))
#  define SPICA_MRX_ALG_STATUS__RSP__WRITE(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_ALG_STATUS__RSP__RMW(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_ALG_STATUS__RSP__MASK                       0x1
#  define SPICA_MRX_ALG_STATUS__RSP__OFFSET                     15
#  define SPICA_MRX_ALG_STATUS__ALG4_STATUS__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_ALG_STATUS__ALG4_STATUS__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_ALG_STATUS__ALG4_STATUS__READ(die, channel)         SPICA_MRX_ALG_STATUS__ALG4_STATUS__GET(SPICA_MRX_ALG_STATUS__READ(die, channel))
#  define SPICA_MRX_ALG_STATUS__ALG4_STATUS__WRITE(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_ALG_STATUS__ALG4_STATUS__RMW(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_ALG_STATUS__ALG4_STATUS__MASK                       0x1
#  define SPICA_MRX_ALG_STATUS__ALG4_STATUS__OFFSET                     3
#  define SPICA_MRX_ALG_STATUS__ALG3_STATUS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_ALG_STATUS__ALG3_STATUS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_ALG_STATUS__ALG3_STATUS__READ(die, channel)         SPICA_MRX_ALG_STATUS__ALG3_STATUS__GET(SPICA_MRX_ALG_STATUS__READ(die, channel))
#  define SPICA_MRX_ALG_STATUS__ALG3_STATUS__WRITE(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_ALG_STATUS__ALG3_STATUS__RMW(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_ALG_STATUS__ALG3_STATUS__MASK                       0x1
#  define SPICA_MRX_ALG_STATUS__ALG3_STATUS__OFFSET                     2
#  define SPICA_MRX_ALG_STATUS__ALG2_STATUS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_ALG_STATUS__ALG2_STATUS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_ALG_STATUS__ALG2_STATUS__READ(die, channel)         SPICA_MRX_ALG_STATUS__ALG2_STATUS__GET(SPICA_MRX_ALG_STATUS__READ(die, channel))
#  define SPICA_MRX_ALG_STATUS__ALG2_STATUS__WRITE(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_ALG_STATUS__ALG2_STATUS__RMW(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_ALG_STATUS__ALG2_STATUS__MASK                       0x1
#  define SPICA_MRX_ALG_STATUS__ALG2_STATUS__OFFSET                     1
#  define SPICA_MRX_ALG_STATUS__ALG1_STATUS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_ALG_STATUS__ALG1_STATUS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_ALG_STATUS__ALG1_STATUS__READ(die, channel)         SPICA_MRX_ALG_STATUS__ALG1_STATUS__GET(SPICA_MRX_ALG_STATUS__READ(die, channel))
#  define SPICA_MRX_ALG_STATUS__ALG1_STATUS__WRITE(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_ALG_STATUS__ALG1_STATUS__RMW(die, channel, fdata) SPICA_MRX_ALG_STATUS__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_ALG_STATUS__ALG1_STATUS__MASK                       0x1
#  define SPICA_MRX_ALG_STATUS__ALG1_STATUS__OFFSET                     0

#define SPICA_MRX_RULES_0__ADDRESS                      0x1e3833
#define SPICA_MRX_RULES_0__DEFAULT                      0x0
#define SPICA_MRX_RULES_0__ICOUNT                        5
#define SPICA_MRX_RULES_0__ISPAN                         0x800
#define SPICA_MRX_RULES_0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_RULES_0__ADDRESS)
#define SPICA_MRX_RULES_0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_RULES_0__ADDRESS)
#define SPICA_MRX_RULES_0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_RULES_0__ADDRESS, (data))
#define SPICA_MRX_RULES_0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_RULES_0__ADDRESS, (data), (mask))
#  define SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__READ(die, channel)         SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__MASK                       0x1
#  define SPICA_MRX_RULES_0__RESTART_ON_LOS_DIS__OFFSET                     15
#  define SPICA_MRX_RULES_0__LOS_DSP_EN__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MRX_RULES_0__LOS_DSP_EN__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MRX_RULES_0__LOS_DSP_EN__READ(die, channel)         SPICA_MRX_RULES_0__LOS_DSP_EN__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__LOS_DSP_EN__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_RULES_0__LOS_DSP_EN__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_RULES_0__LOS_DSP_EN__MASK                       0x1
#  define SPICA_MRX_RULES_0__LOS_DSP_EN__OFFSET                     13
#  define SPICA_MRX_RULES_0__SDT_DSP_EN__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MRX_RULES_0__SDT_DSP_EN__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MRX_RULES_0__SDT_DSP_EN__READ(die, channel)         SPICA_MRX_RULES_0__SDT_DSP_EN__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__SDT_DSP_EN__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_RULES_0__SDT_DSP_EN__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_RULES_0__SDT_DSP_EN__MASK                       0x1
#  define SPICA_MRX_RULES_0__SDT_DSP_EN__OFFSET                     12
#  define SPICA_MRX_RULES_0__6BIT_MODE__SET(rdata, fdata)         (((rdata) & 0xf3ff) | (((uint32_t)(fdata) << 10) & 0xc00))
#  define SPICA_MRX_RULES_0__6BIT_MODE__GET(rdata)                (((rdata) >> 10) & 0x3)
#  define SPICA_MRX_RULES_0__6BIT_MODE__READ(die, channel)         SPICA_MRX_RULES_0__6BIT_MODE__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__6BIT_MODE__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_MRX_RULES_0__6BIT_MODE__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<10, 0xc00)
#  define SPICA_MRX_RULES_0__6BIT_MODE__MASK                       0x3
#  define SPICA_MRX_RULES_0__6BIT_MODE__OFFSET                     10
#  define SPICA_MRX_RULES_0__BAUD_RATE_SEL__SET(rdata, fdata)         (((rdata) & 0xfc7f) | (((uint32_t)(fdata) << 7) & 0x380))
#  define SPICA_MRX_RULES_0__BAUD_RATE_SEL__GET(rdata)                (((rdata) >> 7) & 0x7)
#  define SPICA_MRX_RULES_0__BAUD_RATE_SEL__READ(die, channel)         SPICA_MRX_RULES_0__BAUD_RATE_SEL__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__BAUD_RATE_SEL__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x380)
#  define SPICA_MRX_RULES_0__BAUD_RATE_SEL__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x380)
#  define SPICA_MRX_RULES_0__BAUD_RATE_SEL__MASK                       0x7
#  define SPICA_MRX_RULES_0__BAUD_RATE_SEL__OFFSET                     7
#  define SPICA_MRX_RULES_0__FORCE_MISSION_MODE__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MRX_RULES_0__FORCE_MISSION_MODE__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MRX_RULES_0__FORCE_MISSION_MODE__READ(die, channel)         SPICA_MRX_RULES_0__FORCE_MISSION_MODE__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__FORCE_MISSION_MODE__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_RULES_0__FORCE_MISSION_MODE__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MRX_RULES_0__FORCE_MISSION_MODE__MASK                       0x1
#  define SPICA_MRX_RULES_0__FORCE_MISSION_MODE__OFFSET                     6
#  define SPICA_MRX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_RULES_0__SIGNALLING__READ(die, channel)         SPICA_MRX_RULES_0__SIGNALLING__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_RULES_0__SIGNALLING__MASK                       0x1
#  define SPICA_MRX_RULES_0__SIGNALLING__OFFSET                     5
#  define SPICA_MRX_RULES_0__CHANNEL_ENABLE__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_RULES_0__CHANNEL_ENABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_RULES_0__CHANNEL_ENABLE__READ(die, channel)         SPICA_MRX_RULES_0__CHANNEL_ENABLE__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__CHANNEL_ENABLE__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_RULES_0__CHANNEL_ENABLE__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_RULES_0__CHANNEL_ENABLE__MASK                       0x1
#  define SPICA_MRX_RULES_0__CHANNEL_ENABLE__OFFSET                     4
#  define SPICA_MRX_RULES_0__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_RULES_0__IEEE_DEMAP__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_RULES_0__IEEE_DEMAP__READ(die, channel)         SPICA_MRX_RULES_0__IEEE_DEMAP__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__IEEE_DEMAP__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_RULES_0__IEEE_DEMAP__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_RULES_0__IEEE_DEMAP__MASK                       0x1
#  define SPICA_MRX_RULES_0__IEEE_DEMAP__OFFSET                     3
#  define SPICA_MRX_RULES_0__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MRX_RULES_0__INVERT_CHAN__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MRX_RULES_0__INVERT_CHAN__READ(die, channel)         SPICA_MRX_RULES_0__INVERT_CHAN__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__INVERT_CHAN__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_RULES_0__INVERT_CHAN__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MRX_RULES_0__INVERT_CHAN__MASK                       0x1
#  define SPICA_MRX_RULES_0__INVERT_CHAN__OFFSET                     2
#  define SPICA_MRX_RULES_0__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MRX_RULES_0__GRAY_MAPPING__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MRX_RULES_0__GRAY_MAPPING__READ(die, channel)         SPICA_MRX_RULES_0__GRAY_MAPPING__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__GRAY_MAPPING__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_RULES_0__GRAY_MAPPING__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MRX_RULES_0__GRAY_MAPPING__MASK                       0x1
#  define SPICA_MRX_RULES_0__GRAY_MAPPING__OFFSET                     1
#  define SPICA_MRX_RULES_0__UPDATE_MRX_RULES__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MRX_RULES_0__UPDATE_MRX_RULES__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MRX_RULES_0__UPDATE_MRX_RULES__READ(die, channel)         SPICA_MRX_RULES_0__UPDATE_MRX_RULES__GET(SPICA_MRX_RULES_0__READ(die, channel))
#  define SPICA_MRX_RULES_0__UPDATE_MRX_RULES__WRITE(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_RULES_0__UPDATE_MRX_RULES__RMW(die, channel, fdata) SPICA_MRX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MRX_RULES_0__UPDATE_MRX_RULES__MASK                       0x1
#  define SPICA_MRX_RULES_0__UPDATE_MRX_RULES__OFFSET                     0

#define SPICA_MRX_RULES_1__ADDRESS                      0x1e3835
#define SPICA_MRX_RULES_1__DEFAULT                      0xe32
#define SPICA_MRX_RULES_1__ICOUNT                        5
#define SPICA_MRX_RULES_1__ISPAN                         0x800
#define SPICA_MRX_RULES_1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_RULES_1__ADDRESS)
#define SPICA_MRX_RULES_1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_RULES_1__ADDRESS)
#define SPICA_MRX_RULES_1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_RULES_1__ADDRESS, (data))
#define SPICA_MRX_RULES_1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_RULES_1__ADDRESS, (data), (mask))
#  define SPICA_MRX_RULES_1__ALG4_DIS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MRX_RULES_1__ALG4_DIS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MRX_RULES_1__ALG4_DIS__READ(die, channel)         SPICA_MRX_RULES_1__ALG4_DIS__GET(SPICA_MRX_RULES_1__READ(die, channel))
#  define SPICA_MRX_RULES_1__ALG4_DIS__WRITE(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_RULES_1__ALG4_DIS__RMW(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MRX_RULES_1__ALG4_DIS__MASK                       0x1
#  define SPICA_MRX_RULES_1__ALG4_DIS__OFFSET                     15
#  define SPICA_MRX_RULES_1__ALG3_DIS__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MRX_RULES_1__ALG3_DIS__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MRX_RULES_1__ALG3_DIS__READ(die, channel)         SPICA_MRX_RULES_1__ALG3_DIS__GET(SPICA_MRX_RULES_1__READ(die, channel))
#  define SPICA_MRX_RULES_1__ALG3_DIS__WRITE(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_RULES_1__ALG3_DIS__RMW(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_MRX_RULES_1__ALG3_DIS__MASK                       0x1
#  define SPICA_MRX_RULES_1__ALG3_DIS__OFFSET                     14
#  define SPICA_MRX_RULES_1__ALG2_DIS__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MRX_RULES_1__ALG2_DIS__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MRX_RULES_1__ALG2_DIS__READ(die, channel)         SPICA_MRX_RULES_1__ALG2_DIS__GET(SPICA_MRX_RULES_1__READ(die, channel))
#  define SPICA_MRX_RULES_1__ALG2_DIS__WRITE(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_RULES_1__ALG2_DIS__RMW(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_MRX_RULES_1__ALG2_DIS__MASK                       0x1
#  define SPICA_MRX_RULES_1__ALG2_DIS__OFFSET                     13
#  define SPICA_MRX_RULES_1__ALG1_DIS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MRX_RULES_1__ALG1_DIS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MRX_RULES_1__ALG1_DIS__READ(die, channel)         SPICA_MRX_RULES_1__ALG1_DIS__GET(SPICA_MRX_RULES_1__READ(die, channel))
#  define SPICA_MRX_RULES_1__ALG1_DIS__WRITE(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_RULES_1__ALG1_DIS__RMW(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MRX_RULES_1__ALG1_DIS__MASK                       0x1
#  define SPICA_MRX_RULES_1__ALG1_DIS__OFFSET                     12
#  define SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__READ(die, channel)         SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__GET(SPICA_MRX_RULES_1__READ(die, channel))
#  define SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__WRITE(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__RMW(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__MASK                       0x1
#  define SPICA_MRX_RULES_1__FFE_CONST_DIFF_EN__OFFSET                     11
#  define SPICA_MRX_RULES_1__BW_IDX_MAX__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_MRX_RULES_1__BW_IDX_MAX__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_MRX_RULES_1__BW_IDX_MAX__READ(die, channel)         SPICA_MRX_RULES_1__BW_IDX_MAX__GET(SPICA_MRX_RULES_1__READ(die, channel))
#  define SPICA_MRX_RULES_1__BW_IDX_MAX__WRITE(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_RULES_1__BW_IDX_MAX__RMW(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MRX_RULES_1__BW_IDX_MAX__MASK                       0x7
#  define SPICA_MRX_RULES_1__BW_IDX_MAX__OFFSET                     8
#  define SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__READ(die, channel)         SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__GET(SPICA_MRX_RULES_1__READ(die, channel))
#  define SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__WRITE(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__RMW(die, channel, fdata) SPICA_MRX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__MASK                       0xff
#  define SPICA_MRX_RULES_1__VGA1_TRACKING_PERIOD__OFFSET                     0

#define SPICA_MRX_LTP__ADDRESS                      0x1e3836
#define SPICA_MRX_LTP__DEFAULT                      0x0
#define SPICA_MRX_LTP__ICOUNT                        5
#define SPICA_MRX_LTP__ISPAN                         0x800
#define SPICA_MRX_LTP__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_LTP__ADDRESS)
#define SPICA_MRX_LTP__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_LTP__ADDRESS)
#define SPICA_MRX_LTP__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_LTP__ADDRESS, (data))
#define SPICA_MRX_LTP__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_LTP__ADDRESS, (data), (mask))
#  define SPICA_MRX_LTP__LTP__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MRX_LTP__LTP__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MRX_LTP__LTP__READ(die, channel)         SPICA_MRX_LTP__LTP__GET(SPICA_MRX_LTP__READ(die, channel))
#  define SPICA_MRX_LTP__LTP__WRITE(die, channel, fdata) SPICA_MRX_LTP__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_LTP__LTP__RMW(die, channel, fdata) SPICA_MRX_LTP__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MRX_LTP__LTP__MASK                       0xffff
#  define SPICA_MRX_LTP__LTP__OFFSET                     0

#define SPICA_MRX_PLL_FW_STATUS__ADDRESS                      0x1e3e75
#define SPICA_MRX_PLL_FW_STATUS__DEFAULT                      0x0
#define SPICA_MRX_PLL_FW_STATUS__ICOUNT                        5
#define SPICA_MRX_PLL_FW_STATUS__ISPAN                         0x800
#define SPICA_MRX_PLL_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_PLL_FW_STATUS__ADDRESS)
#define SPICA_MRX_PLL_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_PLL_FW_STATUS__ADDRESS)
#define SPICA_MRX_PLL_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_PLL_FW_STATUS__ADDRESS, (data))
#define SPICA_MRX_PLL_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_PLL_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MRX_PLL_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_PLL_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_PLL_FW_STATUS__LOCKED__READ(die, channel)         SPICA_MRX_PLL_FW_STATUS__LOCKED__GET(SPICA_MRX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_MRX_PLL_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_MRX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_MRX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_PLL_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_MRX_PLL_FW_STATUS__LOCKED__OFFSET                     5
#  define SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__SET(rdata, fdata)         (((rdata) & 0xe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__READ(die, channel)         SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__GET(SPICA_MRX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__WRITE(die, channel, fdata) SPICA_MRX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__RMW(die, channel, fdata) SPICA_MRX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__MASK                       0x1f
#  define SPICA_MRX_PLL_FW_STATUS__PLL_FSM_STATE__OFFSET                     0

#define SPICA_MRX_TMON_CTRL0__ADDRESS                      0x1e3f54
#define SPICA_MRX_TMON_CTRL0__DEFAULT                      0x0
#define SPICA_MRX_TMON_CTRL0__ICOUNT                        5
#define SPICA_MRX_TMON_CTRL0__ISPAN                         0x800
#define SPICA_MRX_TMON_CTRL0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MRX_TMON_CTRL0__ADDRESS)
#define SPICA_MRX_TMON_CTRL0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MRX_TMON_CTRL0__ADDRESS)
#define SPICA_MRX_TMON_CTRL0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MRX_TMON_CTRL0__ADDRESS, (data))
#define SPICA_MRX_TMON_CTRL0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MRX_TMON_CTRL0__ADDRESS, (data), (mask))
#  define SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__READ(die, channel)         SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(SPICA_MRX_TMON_CTRL0__READ(die, channel))
#  define SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__WRITE(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__RMW(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__MASK                       0x1
#  define SPICA_MRX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__OFFSET                     5
#  define SPICA_MRX_TMON_CTRL0__DISABLE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MRX_TMON_CTRL0__DISABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MRX_TMON_CTRL0__DISABLE__READ(die, channel)         SPICA_MRX_TMON_CTRL0__DISABLE__GET(SPICA_MRX_TMON_CTRL0__READ(die, channel))
#  define SPICA_MRX_TMON_CTRL0__DISABLE__WRITE(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_TMON_CTRL0__DISABLE__RMW(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MRX_TMON_CTRL0__DISABLE__MASK                       0x1
#  define SPICA_MRX_TMON_CTRL0__DISABLE__OFFSET                     4
#  define SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__READ(die, channel)         SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(SPICA_MRX_TMON_CTRL0__READ(die, channel))
#  define SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__WRITE(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__RMW(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__MASK                       0x1
#  define SPICA_MRX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__OFFSET                     3
#  define SPICA_MRX_TMON_CTRL0__IADC_VAL__SET(rdata, fdata)         (((rdata) & 0xf8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_MRX_TMON_CTRL0__IADC_VAL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_MRX_TMON_CTRL0__IADC_VAL__READ(die, channel)         SPICA_MRX_TMON_CTRL0__IADC_VAL__GET(SPICA_MRX_TMON_CTRL0__READ(die, channel))
#  define SPICA_MRX_TMON_CTRL0__IADC_VAL__WRITE(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_MRX_TMON_CTRL0__IADC_VAL__RMW(die, channel, fdata) SPICA_MRX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_MRX_TMON_CTRL0__IADC_VAL__MASK                       0x7
#  define SPICA_MRX_TMON_CTRL0__IADC_VAL__OFFSET                     0

#define SPICA_SRX_FW_STATUS__ADDRESS                      0x1e1156
#define SPICA_SRX_FW_STATUS__DEFAULT                      0x0
#define SPICA_SRX_FW_STATUS__ICOUNT                        15
#define SPICA_SRX_FW_STATUS__ISPAN                         0x200
#define SPICA_SRX_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_FW_STATUS__ADDRESS)
#define SPICA_SRX_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_FW_STATUS__ADDRESS)
#define SPICA_SRX_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_FW_STATUS__ADDRESS, (data))
#define SPICA_SRX_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_SRX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_FW_STATUS__LOCKED__READ(die, channel)         SPICA_SRX_FW_STATUS__LOCKED__GET(SPICA_SRX_FW_STATUS__READ(die, channel))
#  define SPICA_SRX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_SRX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_SRX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_SRX_FW_STATUS__LOCKED__OFFSET                     15
#  define SPICA_SRX_FW_STATUS__STATE__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_SRX_FW_STATUS__STATE__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_SRX_FW_STATUS__STATE__READ(die, channel)         SPICA_SRX_FW_STATUS__STATE__GET(SPICA_SRX_FW_STATUS__READ(die, channel))
#  define SPICA_SRX_FW_STATUS__STATE__WRITE(die, channel, fdata) SPICA_SRX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SRX_FW_STATUS__STATE__RMW(die, channel, fdata) SPICA_SRX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_SRX_FW_STATUS__STATE__MASK                       0x7f
#  define SPICA_SRX_FW_STATUS__STATE__OFFSET                     8
#  define SPICA_SRX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SRX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SRX_FW_STATUS__RESET_COUNT__READ(die, channel)         SPICA_SRX_FW_STATUS__RESET_COUNT__GET(SPICA_SRX_FW_STATUS__READ(die, channel))
#  define SPICA_SRX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SPICA_SRX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SPICA_SRX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_FW_STATUS__RESET_COUNT__MASK                       0xff
#  define SPICA_SRX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SPICA_SRX_CH_STATUS__ADDRESS                      0x1e1157
#define SPICA_SRX_CH_STATUS__DEFAULT                      0x0
#define SPICA_SRX_CH_STATUS__ICOUNT                        15
#define SPICA_SRX_CH_STATUS__ISPAN                         0x200
#define SPICA_SRX_CH_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_CH_STATUS__ADDRESS)
#define SPICA_SRX_CH_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_CH_STATUS__ADDRESS)
#define SPICA_SRX_CH_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_CH_STATUS__ADDRESS, (data))
#define SPICA_SRX_CH_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_CH_STATUS__ADDRESS, (data), (mask))
#  define SPICA_SRX_CH_STATUS__WARN_AGC_SAT__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_CH_STATUS__WARN_AGC_SAT__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_CH_STATUS__WARN_AGC_SAT__READ(die, channel)         SPICA_SRX_CH_STATUS__WARN_AGC_SAT__GET(SPICA_SRX_CH_STATUS__READ(die, channel))
#  define SPICA_SRX_CH_STATUS__WARN_AGC_SAT__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_CH_STATUS__WARN_AGC_SAT__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_CH_STATUS__WARN_AGC_SAT__MASK                       0x1
#  define SPICA_SRX_CH_STATUS__WARN_AGC_SAT__OFFSET                     15
#  define SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__READ(die, channel)         SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__GET(SPICA_SRX_CH_STATUS__READ(die, channel))
#  define SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__MASK                       0x1
#  define SPICA_SRX_CH_STATUS__WARN_ESKEW_SAT__OFFSET                     14
#  define SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__READ(die, channel)         SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__GET(SPICA_SRX_CH_STATUS__READ(die, channel))
#  define SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__MASK                       0x1
#  define SPICA_SRX_CH_STATUS__WARN_DSKEW_SAT__OFFSET                     13
#  define SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__READ(die, channel)         SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__GET(SPICA_SRX_CH_STATUS__READ(die, channel))
#  define SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__MASK                       0x1
#  define SPICA_SRX_CH_STATUS__WARN_CTLE_R_SAT__OFFSET                     11
#  define SPICA_SRX_CH_STATUS__WARN_EREF_FB__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_CH_STATUS__WARN_EREF_FB__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_CH_STATUS__WARN_EREF_FB__READ(die, channel)         SPICA_SRX_CH_STATUS__WARN_EREF_FB__GET(SPICA_SRX_CH_STATUS__READ(die, channel))
#  define SPICA_SRX_CH_STATUS__WARN_EREF_FB__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_CH_STATUS__WARN_EREF_FB__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_CH_STATUS__WARN_EREF_FB__MASK                       0x1
#  define SPICA_SRX_CH_STATUS__WARN_EREF_FB__OFFSET                     10
#  define SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__READ(die, channel)         SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__GET(SPICA_SRX_CH_STATUS__READ(die, channel))
#  define SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__MASK                       0x1
#  define SPICA_SRX_CH_STATUS__WARN_DFE_HROOM__OFFSET                     8

#define SPICA_SRX_DFE_COEF__ADDRESS                      0x1e1159
#define SPICA_SRX_DFE_COEF__DEFAULT                      0x0
#define SPICA_SRX_DFE_COEF__ICOUNT                        15
#define SPICA_SRX_DFE_COEF__ISPAN                         0x200
#define SPICA_SRX_DFE_COEF__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_DFE_COEF__ADDRESS)
#define SPICA_SRX_DFE_COEF__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_DFE_COEF__ADDRESS)
#define SPICA_SRX_DFE_COEF__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_DFE_COEF__ADDRESS, (data))
#define SPICA_SRX_DFE_COEF__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_DFE_COEF__ADDRESS, (data), (mask))
#  define SPICA_SRX_DFE_COEF__ODD__SET(rdata, fdata)         (((rdata) & 0xff) | (((uint32_t)(fdata) << 8) & 0xff00))
#  define SPICA_SRX_DFE_COEF__ODD__GET(rdata)                (((rdata) >> 8) & 0xff)
#  define SPICA_SRX_DFE_COEF__ODD__READ(die, channel)         SPICA_SRX_DFE_COEF__ODD__GET(SPICA_SRX_DFE_COEF__READ(die, channel))
#  define SPICA_SRX_DFE_COEF__ODD__WRITE(die, channel, fdata) SPICA_SRX_DFE_COEF__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SRX_DFE_COEF__ODD__RMW(die, channel, fdata) SPICA_SRX_DFE_COEF__RMW(die, (channel), (fdata)<<8, 0xff00)
#  define SPICA_SRX_DFE_COEF__ODD__MASK                       0xff
#  define SPICA_SRX_DFE_COEF__ODD__OFFSET                     8
#  define SPICA_SRX_DFE_COEF__EVEN__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_SRX_DFE_COEF__EVEN__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_SRX_DFE_COEF__EVEN__READ(die, channel)         SPICA_SRX_DFE_COEF__EVEN__GET(SPICA_SRX_DFE_COEF__READ(die, channel))
#  define SPICA_SRX_DFE_COEF__EVEN__WRITE(die, channel, fdata) SPICA_SRX_DFE_COEF__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_DFE_COEF__EVEN__RMW(die, channel, fdata) SPICA_SRX_DFE_COEF__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_SRX_DFE_COEF__EVEN__MASK                       0xff
#  define SPICA_SRX_DFE_COEF__EVEN__OFFSET                     0

#define SPICA_SRX_CH_STATUS2__ADDRESS                      0x1e115a
#define SPICA_SRX_CH_STATUS2__DEFAULT                      0x0
#define SPICA_SRX_CH_STATUS2__ICOUNT                        15
#define SPICA_SRX_CH_STATUS2__ISPAN                         0x200
#define SPICA_SRX_CH_STATUS2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_CH_STATUS2__ADDRESS)
#define SPICA_SRX_CH_STATUS2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_CH_STATUS2__ADDRESS)
#define SPICA_SRX_CH_STATUS2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_CH_STATUS2__ADDRESS, (data))
#define SPICA_SRX_CH_STATUS2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_CH_STATUS2__ADDRESS, (data), (mask))
#  define SPICA_SRX_CH_STATUS2__SDT__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_CH_STATUS2__SDT__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_CH_STATUS2__SDT__READ(die, channel)         SPICA_SRX_CH_STATUS2__SDT__GET(SPICA_SRX_CH_STATUS2__READ(die, channel))
#  define SPICA_SRX_CH_STATUS2__SDT__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_CH_STATUS2__SDT__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_CH_STATUS2__SDT__MASK                       0x1
#  define SPICA_SRX_CH_STATUS2__SDT__OFFSET                     14
#  define SPICA_SRX_CH_STATUS2__LOL__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_CH_STATUS2__LOL__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_CH_STATUS2__LOL__READ(die, channel)         SPICA_SRX_CH_STATUS2__LOL__GET(SPICA_SRX_CH_STATUS2__READ(die, channel))
#  define SPICA_SRX_CH_STATUS2__LOL__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_CH_STATUS2__LOL__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_CH_STATUS2__LOL__MASK                       0x1
#  define SPICA_SRX_CH_STATUS2__LOL__OFFSET                     13
#  define SPICA_SRX_CH_STATUS2__LOS__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_CH_STATUS2__LOS__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_CH_STATUS2__LOS__READ(die, channel)         SPICA_SRX_CH_STATUS2__LOS__GET(SPICA_SRX_CH_STATUS2__READ(die, channel))
#  define SPICA_SRX_CH_STATUS2__LOS__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_CH_STATUS2__LOS__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_CH_STATUS2__LOS__MASK                       0x1
#  define SPICA_SRX_CH_STATUS2__LOS__OFFSET                     12
#  define SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__READ(die, channel)         SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__GET(SPICA_SRX_CH_STATUS2__READ(die, channel))
#  define SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__MASK                       0x1
#  define SPICA_SRX_CH_STATUS2__WARN_NRZ_DET__OFFSET                     11
#  define SPICA_SRX_CH_STATUS2__WARN_CID_DET__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_CH_STATUS2__WARN_CID_DET__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_CH_STATUS2__WARN_CID_DET__READ(die, channel)         SPICA_SRX_CH_STATUS2__WARN_CID_DET__GET(SPICA_SRX_CH_STATUS2__READ(die, channel))
#  define SPICA_SRX_CH_STATUS2__WARN_CID_DET__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_CH_STATUS2__WARN_CID_DET__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_CH_STATUS2__WARN_CID_DET__MASK                       0x1
#  define SPICA_SRX_CH_STATUS2__WARN_CID_DET__OFFSET                     10
#  define SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__READ(die, channel)         SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__GET(SPICA_SRX_CH_STATUS2__READ(die, channel))
#  define SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__MASK                       0x1
#  define SPICA_SRX_CH_STATUS2__WARN_VCO_TUNE__OFFSET                     9
#  define SPICA_SRX_CH_STATUS2__AGC_GAIN__SET(rdata, fdata)         (((rdata) & 0xfe00) | (((uint32_t)(fdata) << 0) & 0x1ff))
#  define SPICA_SRX_CH_STATUS2__AGC_GAIN__GET(rdata)                (((rdata) >> 0) & 0x1ff)
#  define SPICA_SRX_CH_STATUS2__AGC_GAIN__READ(die, channel)         SPICA_SRX_CH_STATUS2__AGC_GAIN__GET(SPICA_SRX_CH_STATUS2__READ(die, channel))
#  define SPICA_SRX_CH_STATUS2__AGC_GAIN__WRITE(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_CH_STATUS2__AGC_GAIN__RMW(die, channel, fdata) SPICA_SRX_CH_STATUS2__RMW(die, (channel), (fdata)<<0, 0x1ff)
#  define SPICA_SRX_CH_STATUS2__AGC_GAIN__MASK                       0x1ff
#  define SPICA_SRX_CH_STATUS2__AGC_GAIN__OFFSET                     0

#define SPICA_SRX_FW_CONTROL__ADDRESS                      0x1e115b
#define SPICA_SRX_FW_CONTROL__DEFAULT                      0x0
#define SPICA_SRX_FW_CONTROL__ICOUNT                        15
#define SPICA_SRX_FW_CONTROL__ISPAN                         0x200
#define SPICA_SRX_FW_CONTROL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_FW_CONTROL__ADDRESS)
#define SPICA_SRX_FW_CONTROL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_FW_CONTROL__ADDRESS)
#define SPICA_SRX_FW_CONTROL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_FW_CONTROL__ADDRESS, (data))
#define SPICA_SRX_FW_CONTROL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_FW_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__READ(die, channel)         SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__GET(SPICA_SRX_FW_CONTROL__READ(die, channel))
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__WRITE(die, channel, fdata) SPICA_SRX_FW_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__RMW(die, channel, fdata) SPICA_SRX_FW_CONTROL__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__MASK                       0x1
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_ACK__OFFSET                     1
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__READ(die, channel)         SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__GET(SPICA_SRX_FW_CONTROL__READ(die, channel))
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__WRITE(die, channel, fdata) SPICA_SRX_FW_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__RMW(die, channel, fdata) SPICA_SRX_FW_CONTROL__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__MASK                       0x1
#  define SPICA_SRX_FW_CONTROL__UPDATE_RX_INVERT_CHAN_REQ__OFFSET                     0

#define SPICA_SRX_RULES_1__ADDRESS                      0x1e115c
#define SPICA_SRX_RULES_1__DEFAULT                      0x0
#define SPICA_SRX_RULES_1__ICOUNT                        15
#define SPICA_SRX_RULES_1__ISPAN                         0x200
#define SPICA_SRX_RULES_1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RULES_1__ADDRESS)
#define SPICA_SRX_RULES_1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RULES_1__ADDRESS)
#define SPICA_SRX_RULES_1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RULES_1__ADDRESS, (data))
#define SPICA_SRX_RULES_1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RULES_1__ADDRESS, (data), (mask))
#  define SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__READ(die, channel)         SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__MASK                       0x1
#  define SPICA_SRX_RULES_1__LFEQ_ADAPT_DIS_AFTER_INIT_ADAPT__OFFSET                     12
#  define SPICA_SRX_RULES_1__VCO_MODE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_SRX_RULES_1__VCO_MODE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_SRX_RULES_1__VCO_MODE__READ(die, channel)         SPICA_SRX_RULES_1__VCO_MODE__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__VCO_MODE__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RULES_1__VCO_MODE__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_SRX_RULES_1__VCO_MODE__MASK                       0x1
#  define SPICA_SRX_RULES_1__VCO_MODE__OFFSET                     11
#  define SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<10, 0x400)
#  define SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_1__DC_OFF_ADAPT_DIS__OFFSET                     10
#  define SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<9, 0x200)
#  define SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_1__CTLE_R_ADAPT_DIS__OFFSET                     9
#  define SPICA_SRX_RULES_1__CTLE_C_ADAPT__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_SRX_RULES_1__CTLE_C_ADAPT__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_SRX_RULES_1__CTLE_C_ADAPT__READ(die, channel)         SPICA_SRX_RULES_1__CTLE_C_ADAPT__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__CTLE_C_ADAPT__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RULES_1__CTLE_C_ADAPT__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<8, 0x100)
#  define SPICA_SRX_RULES_1__CTLE_C_ADAPT__MASK                       0x1
#  define SPICA_SRX_RULES_1__CTLE_C_ADAPT__OFFSET                     8
#  define SPICA_SRX_RULES_1__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_RULES_1__IEEE_DEMAP__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_RULES_1__IEEE_DEMAP__READ(die, channel)         SPICA_SRX_RULES_1__IEEE_DEMAP__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__IEEE_DEMAP__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RULES_1__IEEE_DEMAP__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RULES_1__IEEE_DEMAP__MASK                       0x1
#  define SPICA_SRX_RULES_1__IEEE_DEMAP__OFFSET                     7
#  define SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_1__AFE_BW_ADAPT_DIS__OFFSET                     6
#  define SPICA_SRX_RULES_1__STOP_ON_ERR__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SRX_RULES_1__STOP_ON_ERR__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SRX_RULES_1__STOP_ON_ERR__READ(die, channel)         SPICA_SRX_RULES_1__STOP_ON_ERR__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__STOP_ON_ERR__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RULES_1__STOP_ON_ERR__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RULES_1__STOP_ON_ERR__MASK                       0x1
#  define SPICA_SRX_RULES_1__STOP_ON_ERR__OFFSET                     5
#  define SPICA_SRX_RULES_1__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RULES_1__INVERT_CHAN__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RULES_1__INVERT_CHAN__READ(die, channel)         SPICA_SRX_RULES_1__INVERT_CHAN__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__INVERT_CHAN__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RULES_1__INVERT_CHAN__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RULES_1__INVERT_CHAN__MASK                       0x1
#  define SPICA_SRX_RULES_1__INVERT_CHAN__OFFSET                     4
#  define SPICA_SRX_RULES_1__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_RULES_1__GRAY_MAPPING__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_RULES_1__GRAY_MAPPING__READ(die, channel)         SPICA_SRX_RULES_1__GRAY_MAPPING__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__GRAY_MAPPING__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RULES_1__GRAY_MAPPING__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RULES_1__GRAY_MAPPING__MASK                       0x1
#  define SPICA_SRX_RULES_1__GRAY_MAPPING__OFFSET                     3
#  define SPICA_SRX_RULES_1__SLC_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SRX_RULES_1__SLC_ADAPT_DIS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SRX_RULES_1__SLC_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_1__SLC_ADAPT_DIS__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__SLC_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RULES_1__SLC_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RULES_1__SLC_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_1__SLC_ADAPT_DIS__OFFSET                     2
#  define SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_1__EDGE_OFF_ADAPT_DIS__OFFSET                     1
#  define SPICA_SRX_RULES_1__AGC_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_RULES_1__AGC_ADAPT_DIS__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_RULES_1__AGC_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_1__AGC_ADAPT_DIS__GET(SPICA_SRX_RULES_1__READ(die, channel))
#  define SPICA_SRX_RULES_1__AGC_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RULES_1__AGC_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_1__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RULES_1__AGC_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_1__AGC_ADAPT_DIS__OFFSET                     0

#define SPICA_SRX_RULES_0__ADDRESS                      0x1e115d
#define SPICA_SRX_RULES_0__DEFAULT                      0x0
#define SPICA_SRX_RULES_0__ICOUNT                        15
#define SPICA_SRX_RULES_0__ISPAN                         0x200
#define SPICA_SRX_RULES_0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RULES_0__ADDRESS)
#define SPICA_SRX_RULES_0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RULES_0__ADDRESS)
#define SPICA_SRX_RULES_0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RULES_0__ADDRESS, (data))
#define SPICA_SRX_RULES_0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RULES_0__ADDRESS, (data), (mask))
#  define SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__READ(die, channel)         SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_0__VCO_TEMP_CAL_DIS__OFFSET                     15
#  define SPICA_SRX_RULES_0__CHANNEL_ENABLE__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_SRX_RULES_0__CHANNEL_ENABLE__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_SRX_RULES_0__CHANNEL_ENABLE__READ(die, channel)         SPICA_SRX_RULES_0__CHANNEL_ENABLE__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__CHANNEL_ENABLE__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RULES_0__CHANNEL_ENABLE__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<14, 0x4000)
#  define SPICA_SRX_RULES_0__CHANNEL_ENABLE__MASK                       0x1
#  define SPICA_SRX_RULES_0__CHANNEL_ENABLE__OFFSET                     14
#  define SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__READ(die, channel)         SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<13, 0x2000)
#  define SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__MASK                       0x1
#  define SPICA_SRX_RULES_0__BIAS_TMON_PARAMS_OVERRIDE__OFFSET                     13
#  define SPICA_SRX_RULES_0__BAUD_RATE_SEL__SET(rdata, fdata)         (((rdata) & 0xf1ff) | (((uint32_t)(fdata) << 9) & 0xe00))
#  define SPICA_SRX_RULES_0__BAUD_RATE_SEL__GET(rdata)                (((rdata) >> 9) & 0x7)
#  define SPICA_SRX_RULES_0__BAUD_RATE_SEL__READ(die, channel)         SPICA_SRX_RULES_0__BAUD_RATE_SEL__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__BAUD_RATE_SEL__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SRX_RULES_0__BAUD_RATE_SEL__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<9, 0xe00)
#  define SPICA_SRX_RULES_0__BAUD_RATE_SEL__MASK                       0x7
#  define SPICA_SRX_RULES_0__BAUD_RATE_SEL__OFFSET                     9
#  define SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_0__ESKEW_ADAPT_DIS__OFFSET                     7
#  define SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_0__DSKEW_ADAPT_DIS__OFFSET                     6
#  define SPICA_SRX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SRX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SRX_RULES_0__SIGNALLING__READ(die, channel)         SPICA_SRX_RULES_0__SIGNALLING__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SRX_RULES_0__SIGNALLING__MASK                       0x1
#  define SPICA_SRX_RULES_0__SIGNALLING__OFFSET                     5
#  define SPICA_SRX_RULES_0__DFE_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SRX_RULES_0__DFE_ADAPT_DIS__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SRX_RULES_0__DFE_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_0__DFE_ADAPT_DIS__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__DFE_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RULES_0__DFE_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SRX_RULES_0__DFE_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_0__DFE_ADAPT_DIS__OFFSET                     4
#  define SPICA_SRX_RULES_0__SKIP_ADAPT__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SRX_RULES_0__SKIP_ADAPT__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SRX_RULES_0__SKIP_ADAPT__READ(die, channel)         SPICA_SRX_RULES_0__SKIP_ADAPT__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__SKIP_ADAPT__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RULES_0__SKIP_ADAPT__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SRX_RULES_0__SKIP_ADAPT__MASK                       0x1
#  define SPICA_SRX_RULES_0__SKIP_ADAPT__OFFSET                     3
#  define SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_0__LFEQ_ADAPT_DIS__OFFSET                     2
#  define SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__READ(die, channel)         SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__MASK                       0x1
#  define SPICA_SRX_RULES_0__CTLE_ADAPT_DIS__OFFSET                     1
#  define SPICA_SRX_RULES_0__UPDATE_SRX_RULES__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_SRX_RULES_0__UPDATE_SRX_RULES__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_SRX_RULES_0__UPDATE_SRX_RULES__READ(die, channel)         SPICA_SRX_RULES_0__UPDATE_SRX_RULES__GET(SPICA_SRX_RULES_0__READ(die, channel))
#  define SPICA_SRX_RULES_0__UPDATE_SRX_RULES__WRITE(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RULES_0__UPDATE_SRX_RULES__RMW(die, channel, fdata) SPICA_SRX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_SRX_RULES_0__UPDATE_SRX_RULES__MASK                       0x1
#  define SPICA_SRX_RULES_0__UPDATE_SRX_RULES__OFFSET                     0

#define SPICA_SRX_RXA_LOSD_CFG_OVL__ADDRESS                      0x1e119d
#define SPICA_SRX_RXA_LOSD_CFG_OVL__DEFAULT                      0x0
#define SPICA_SRX_RXA_LOSD_CFG_OVL__ICOUNT                        15
#define SPICA_SRX_RXA_LOSD_CFG_OVL__ISPAN                         0x200
#define SPICA_SRX_RXA_LOSD_CFG_OVL__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SRX_RXA_LOSD_CFG_OVL__ADDRESS)
#define SPICA_SRX_RXA_LOSD_CFG_OVL__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SRX_RXA_LOSD_CFG_OVL__ADDRESS)
#define SPICA_SRX_RXA_LOSD_CFG_OVL__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SRX_RXA_LOSD_CFG_OVL__ADDRESS, (data))
#define SPICA_SRX_RXA_LOSD_CFG_OVL__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SRX_RXA_LOSD_CFG_OVL__ADDRESS, (data), (mask))
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__READ(die, channel)         SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__GET(SPICA_SRX_RXA_LOSD_CFG_OVL__READ(die, channel))
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__WRITE(die, channel, fdata) SPICA_SRX_RXA_LOSD_CFG_OVL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__RMW(die, channel, fdata) SPICA_SRX_RXA_LOSD_CFG_OVL__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__MASK                       0x1
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_EN__OFFSET                     7
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__SET(rdata, fdata)         (((rdata) & 0xff9f) | (((uint32_t)(fdata) << 5) & 0x60))
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__GET(rdata)                (((rdata) >> 5) & 0x3)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__READ(die, channel)         SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__GET(SPICA_SRX_RXA_LOSD_CFG_OVL__READ(die, channel))
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__WRITE(die, channel, fdata) SPICA_SRX_RXA_LOSD_CFG_OVL__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__RMW(die, channel, fdata) SPICA_SRX_RXA_LOSD_CFG_OVL__RMW(die, (channel), (fdata)<<5, 0x60)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__MASK                       0x3
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_HYST__OFFSET                     5
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__SET(rdata, fdata)         (((rdata) & 0xffe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__READ(die, channel)         SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__GET(SPICA_SRX_RXA_LOSD_CFG_OVL__READ(die, channel))
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__WRITE(die, channel, fdata) SPICA_SRX_RXA_LOSD_CFG_OVL__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__RMW(die, channel, fdata) SPICA_SRX_RXA_LOSD_CFG_OVL__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__MASK                       0x1f
#  define SPICA_SRX_RXA_LOSD_CFG_OVL__LOSD_THRESHOLD__OFFSET                     0

#define SPICA_OTX_RULES_0__ADDRESS                      0x1eb03a
#define SPICA_OTX_RULES_0__DEFAULT                      0x0
#define SPICA_OTX_RULES_0__ICOUNT                        5
#define SPICA_OTX_RULES_0__ISPAN                         0x800
#define SPICA_OTX_RULES_0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_0__ADDRESS)
#define SPICA_OTX_RULES_0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_0__ADDRESS)
#define SPICA_OTX_RULES_0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_0__ADDRESS, (data))
#define SPICA_OTX_RULES_0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_0__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_0__BAUD_RATE_SEL__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_OTX_RULES_0__BAUD_RATE_SEL__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_OTX_RULES_0__BAUD_RATE_SEL__READ(die, channel)         SPICA_OTX_RULES_0__BAUD_RATE_SEL__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__BAUD_RATE_SEL__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_OTX_RULES_0__BAUD_RATE_SEL__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_OTX_RULES_0__BAUD_RATE_SEL__MASK                       0x7
#  define SPICA_OTX_RULES_0__BAUD_RATE_SEL__OFFSET                     13
#  define SPICA_OTX_RULES_0__SQUELCH_LOCK__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_OTX_RULES_0__SQUELCH_LOCK__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_OTX_RULES_0__SQUELCH_LOCK__READ(die, channel)         SPICA_OTX_RULES_0__SQUELCH_LOCK__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__SQUELCH_LOCK__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_RULES_0__SQUELCH_LOCK__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_OTX_RULES_0__SQUELCH_LOCK__MASK                       0x1
#  define SPICA_OTX_RULES_0__SQUELCH_LOCK__OFFSET                     12
#  define SPICA_OTX_RULES_0__CHANNEL_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_OTX_RULES_0__CHANNEL_ENABLE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_OTX_RULES_0__CHANNEL_ENABLE__READ(die, channel)         SPICA_OTX_RULES_0__CHANNEL_ENABLE__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__CHANNEL_ENABLE__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_RULES_0__CHANNEL_ENABLE__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_OTX_RULES_0__CHANNEL_ENABLE__MASK                       0x1
#  define SPICA_OTX_RULES_0__CHANNEL_ENABLE__OFFSET                     11
#  define SPICA_OTX_RULES_0__SWING__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_OTX_RULES_0__SWING__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_OTX_RULES_0__SWING__READ(die, channel)         SPICA_OTX_RULES_0__SWING__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__SWING__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_OTX_RULES_0__SWING__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_OTX_RULES_0__SWING__MASK                       0x7
#  define SPICA_OTX_RULES_0__SWING__OFFSET                     8
#  define SPICA_OTX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_OTX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_OTX_RULES_0__SIGNALLING__READ(die, channel)         SPICA_OTX_RULES_0__SIGNALLING__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_OTX_RULES_0__SIGNALLING__MASK                       0x1
#  define SPICA_OTX_RULES_0__SIGNALLING__OFFSET                     7
#  define SPICA_OTX_RULES_0__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_OTX_RULES_0__IEEE_DEMAP__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_OTX_RULES_0__IEEE_DEMAP__READ(die, channel)         SPICA_OTX_RULES_0__IEEE_DEMAP__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__IEEE_DEMAP__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_RULES_0__IEEE_DEMAP__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_OTX_RULES_0__IEEE_DEMAP__MASK                       0x1
#  define SPICA_OTX_RULES_0__IEEE_DEMAP__OFFSET                     6
#  define SPICA_OTX_RULES_0__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_RULES_0__INVERT_CHAN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_RULES_0__INVERT_CHAN__READ(die, channel)         SPICA_OTX_RULES_0__INVERT_CHAN__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__INVERT_CHAN__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_RULES_0__INVERT_CHAN__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_RULES_0__INVERT_CHAN__MASK                       0x1
#  define SPICA_OTX_RULES_0__INVERT_CHAN__OFFSET                     5
#  define SPICA_OTX_RULES_0__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_RULES_0__GRAY_MAPPING__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_RULES_0__GRAY_MAPPING__READ(die, channel)         SPICA_OTX_RULES_0__GRAY_MAPPING__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__GRAY_MAPPING__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_RULES_0__GRAY_MAPPING__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_RULES_0__GRAY_MAPPING__MASK                       0x1
#  define SPICA_OTX_RULES_0__GRAY_MAPPING__OFFSET                     4
#  define SPICA_OTX_RULES_0__LUT_MODE__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_OTX_RULES_0__LUT_MODE__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_OTX_RULES_0__LUT_MODE__READ(die, channel)         SPICA_OTX_RULES_0__LUT_MODE__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__LUT_MODE__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_OTX_RULES_0__LUT_MODE__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_OTX_RULES_0__LUT_MODE__MASK                       0x7
#  define SPICA_OTX_RULES_0__LUT_MODE__OFFSET                     1
#  define SPICA_OTX_RULES_0__FLL_MODE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_RULES_0__FLL_MODE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_RULES_0__FLL_MODE__READ(die, channel)         SPICA_OTX_RULES_0__FLL_MODE__GET(SPICA_OTX_RULES_0__READ(die, channel))
#  define SPICA_OTX_RULES_0__FLL_MODE__WRITE(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_RULES_0__FLL_MODE__RMW(die, channel, fdata) SPICA_OTX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_RULES_0__FLL_MODE__MASK                       0x1
#  define SPICA_OTX_RULES_0__FLL_MODE__OFFSET                     0

#define SPICA_OTX_FW_STATUS__ADDRESS                      0x1eb03b
#define SPICA_OTX_FW_STATUS__DEFAULT                      0x0
#define SPICA_OTX_FW_STATUS__ICOUNT                        5
#define SPICA_OTX_FW_STATUS__ISPAN                         0x800
#define SPICA_OTX_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_FW_STATUS__ADDRESS)
#define SPICA_OTX_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_FW_STATUS__ADDRESS)
#define SPICA_OTX_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_FW_STATUS__ADDRESS, (data))
#define SPICA_OTX_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_OTX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_OTX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_OTX_FW_STATUS__LOCKED__READ(die, channel)         SPICA_OTX_FW_STATUS__LOCKED__GET(SPICA_OTX_FW_STATUS__READ(die, channel))
#  define SPICA_OTX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_OTX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_OTX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_OTX_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_OTX_FW_STATUS__LOCKED__OFFSET                     15
#  define SPICA_OTX_FW_STATUS__STATE__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_OTX_FW_STATUS__STATE__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_OTX_FW_STATUS__STATE__READ(die, channel)         SPICA_OTX_FW_STATUS__STATE__GET(SPICA_OTX_FW_STATUS__READ(die, channel))
#  define SPICA_OTX_FW_STATUS__STATE__WRITE(die, channel, fdata) SPICA_OTX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_OTX_FW_STATUS__STATE__RMW(die, channel, fdata) SPICA_OTX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_OTX_FW_STATUS__STATE__MASK                       0x7f
#  define SPICA_OTX_FW_STATUS__STATE__OFFSET                     8
#  define SPICA_OTX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_OTX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_OTX_FW_STATUS__RESET_COUNT__READ(die, channel)         SPICA_OTX_FW_STATUS__RESET_COUNT__GET(SPICA_OTX_FW_STATUS__READ(die, channel))
#  define SPICA_OTX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SPICA_OTX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SPICA_OTX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_OTX_FW_STATUS__RESET_COUNT__MASK                       0xff
#  define SPICA_OTX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SPICA_OTX_CH_STATUS0__ADDRESS                      0x1eb03c
#define SPICA_OTX_CH_STATUS0__DEFAULT                      0x0
#define SPICA_OTX_CH_STATUS0__ICOUNT                        5
#define SPICA_OTX_CH_STATUS0__ISPAN                         0x800
#define SPICA_OTX_CH_STATUS0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_CH_STATUS0__ADDRESS)
#define SPICA_OTX_CH_STATUS0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_CH_STATUS0__ADDRESS)
#define SPICA_OTX_CH_STATUS0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_CH_STATUS0__ADDRESS, (data))
#define SPICA_OTX_CH_STATUS0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_CH_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_OTX_CH_STATUS0__LOL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_CH_STATUS0__LOL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_CH_STATUS0__LOL__READ(die, channel)         SPICA_OTX_CH_STATUS0__LOL__GET(SPICA_OTX_CH_STATUS0__READ(die, channel))
#  define SPICA_OTX_CH_STATUS0__LOL__WRITE(die, channel, fdata) SPICA_OTX_CH_STATUS0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_CH_STATUS0__LOL__RMW(die, channel, fdata) SPICA_OTX_CH_STATUS0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_CH_STATUS0__LOL__MASK                       0x1
#  define SPICA_OTX_CH_STATUS0__LOL__OFFSET                     0

#define SPICA_OTX_XBAR__ADDRESS                      0x1eb03d
#define SPICA_OTX_XBAR__DEFAULT                      0x0
#define SPICA_OTX_XBAR__ICOUNT                        5
#define SPICA_OTX_XBAR__ISPAN                         0x800
#define SPICA_OTX_XBAR__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_XBAR__ADDRESS)
#define SPICA_OTX_XBAR__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_XBAR__ADDRESS)
#define SPICA_OTX_XBAR__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_XBAR__ADDRESS, (data))
#define SPICA_OTX_XBAR__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_XBAR__ADDRESS, (data), (mask))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_3__SET(rdata, fdata)         (((rdata) & 0xfff) | (((uint32_t)(fdata) << 12) & 0xf000))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_3__GET(rdata)                (((rdata) >> 12) & 0xf)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_3__READ(die, channel)         SPICA_OTX_XBAR__SRC_CHANNEL_3__GET(SPICA_OTX_XBAR__READ(die, channel))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_3__WRITE(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_3__RMW(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<12, 0xf000)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_3__MASK                       0xf
#  define SPICA_OTX_XBAR__SRC_CHANNEL_3__OFFSET                     12
#  define SPICA_OTX_XBAR__SRC_CHANNEL_2__SET(rdata, fdata)         (((rdata) & 0xf0ff) | (((uint32_t)(fdata) << 8) & 0xf00))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_2__GET(rdata)                (((rdata) >> 8) & 0xf)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_2__READ(die, channel)         SPICA_OTX_XBAR__SRC_CHANNEL_2__GET(SPICA_OTX_XBAR__READ(die, channel))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_2__WRITE(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_2__RMW(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<8, 0xf00)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_2__MASK                       0xf
#  define SPICA_OTX_XBAR__SRC_CHANNEL_2__OFFSET                     8
#  define SPICA_OTX_XBAR__SRC_CHANNEL_1__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_1__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_1__READ(die, channel)         SPICA_OTX_XBAR__SRC_CHANNEL_1__GET(SPICA_OTX_XBAR__READ(die, channel))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_1__WRITE(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_1__RMW(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<4, 0xf0)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_1__MASK                       0xf
#  define SPICA_OTX_XBAR__SRC_CHANNEL_1__OFFSET                     4
#  define SPICA_OTX_XBAR__SRC_CHANNEL_0__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_0__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_0__READ(die, channel)         SPICA_OTX_XBAR__SRC_CHANNEL_0__GET(SPICA_OTX_XBAR__READ(die, channel))
#  define SPICA_OTX_XBAR__SRC_CHANNEL_0__WRITE(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_0__RMW(die, channel, fdata) SPICA_OTX_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_XBAR__SRC_CHANNEL_0__MASK                       0xf
#  define SPICA_OTX_XBAR__SRC_CHANNEL_0__OFFSET                     0

#define SPICA_OTX_CLK_XBAR__ADDRESS                      0x1eb03e
#define SPICA_OTX_CLK_XBAR__DEFAULT                      0x0
#define SPICA_OTX_CLK_XBAR__ICOUNT                        5
#define SPICA_OTX_CLK_XBAR__ISPAN                         0x800
#define SPICA_OTX_CLK_XBAR__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_CLK_XBAR__ADDRESS)
#define SPICA_OTX_CLK_XBAR__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_CLK_XBAR__ADDRESS)
#define SPICA_OTX_CLK_XBAR__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_CLK_XBAR__ADDRESS, (data))
#define SPICA_OTX_CLK_XBAR__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_CLK_XBAR__ADDRESS, (data), (mask))
#  define SPICA_OTX_CLK_XBAR__SRC_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_OTX_CLK_XBAR__SRC_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_OTX_CLK_XBAR__SRC_CHANNEL__READ(die, channel)         SPICA_OTX_CLK_XBAR__SRC_CHANNEL__GET(SPICA_OTX_CLK_XBAR__READ(die, channel))
#  define SPICA_OTX_CLK_XBAR__SRC_CHANNEL__WRITE(die, channel, fdata) SPICA_OTX_CLK_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_CLK_XBAR__SRC_CHANNEL__RMW(die, channel, fdata) SPICA_OTX_CLK_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_OTX_CLK_XBAR__SRC_CHANNEL__MASK                       0xf
#  define SPICA_OTX_CLK_XBAR__SRC_CHANNEL__OFFSET                     0

#define SPICA_OTX_RULES_UPDATE__ADDRESS                      0x1eb17b
#define SPICA_OTX_RULES_UPDATE__DEFAULT                      0x0
#define SPICA_OTX_RULES_UPDATE__ICOUNT                        5
#define SPICA_OTX_RULES_UPDATE__ISPAN                         0x800
#define SPICA_OTX_RULES_UPDATE__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_UPDATE__ADDRESS)
#define SPICA_OTX_RULES_UPDATE__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_UPDATE__ADDRESS)
#define SPICA_OTX_RULES_UPDATE__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_UPDATE__ADDRESS, (data))
#define SPICA_OTX_RULES_UPDATE__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_UPDATE__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__READ(die, channel)         SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__GET(SPICA_OTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__WRITE(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__RMW(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__MASK                       0x1
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__OFFSET                     5
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__READ(die, channel)         SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__GET(SPICA_OTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__WRITE(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__RMW(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__MASK                       0x1
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__OFFSET                     4
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__READ(die, channel)         SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__GET(SPICA_OTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__WRITE(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__RMW(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__MASK                       0x1
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__OFFSET                     3
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__READ(die, channel)         SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__GET(SPICA_OTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__WRITE(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__RMW(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__MASK                       0x1
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__OFFSET                     2
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__READ(die, channel)         SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__GET(SPICA_OTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__WRITE(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__RMW(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__MASK                       0x1
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__OFFSET                     1
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__READ(die, channel)         SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__GET(SPICA_OTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__WRITE(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__RMW(die, channel, fdata) SPICA_OTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__MASK                       0x1
#  define SPICA_OTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__OFFSET                     0

#define SPICA_OTX_RULES_1__ADDRESS                      0x1eb17c
#define SPICA_OTX_RULES_1__DEFAULT                      0x0
#define SPICA_OTX_RULES_1__ICOUNT                        5
#define SPICA_OTX_RULES_1__ISPAN                         0x800
#define SPICA_OTX_RULES_1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_1__ADDRESS)
#define SPICA_OTX_RULES_1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_1__ADDRESS)
#define SPICA_OTX_RULES_1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_1__ADDRESS, (data))
#define SPICA_OTX_RULES_1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_1__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_1__TAP_1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_1__TAP_1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_1__TAP_1__READ(die, channel)         SPICA_OTX_RULES_1__TAP_1__GET(SPICA_OTX_RULES_1__READ(die, channel))
#  define SPICA_OTX_RULES_1__TAP_1__WRITE(die, channel, fdata) SPICA_OTX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_1__TAP_1__RMW(die, channel, fdata) SPICA_OTX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_1__TAP_1__MASK                       0xffff
#  define SPICA_OTX_RULES_1__TAP_1__OFFSET                     0

#define SPICA_OTX_RULES_2__ADDRESS                      0x1eb17d
#define SPICA_OTX_RULES_2__DEFAULT                      0x0
#define SPICA_OTX_RULES_2__ICOUNT                        5
#define SPICA_OTX_RULES_2__ISPAN                         0x800
#define SPICA_OTX_RULES_2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_2__ADDRESS)
#define SPICA_OTX_RULES_2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_2__ADDRESS)
#define SPICA_OTX_RULES_2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_2__ADDRESS, (data))
#define SPICA_OTX_RULES_2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_2__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_2__TAP_2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_2__TAP_2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_2__TAP_2__READ(die, channel)         SPICA_OTX_RULES_2__TAP_2__GET(SPICA_OTX_RULES_2__READ(die, channel))
#  define SPICA_OTX_RULES_2__TAP_2__WRITE(die, channel, fdata) SPICA_OTX_RULES_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_2__TAP_2__RMW(die, channel, fdata) SPICA_OTX_RULES_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_2__TAP_2__MASK                       0xffff
#  define SPICA_OTX_RULES_2__TAP_2__OFFSET                     0

#define SPICA_OTX_RULES_3__ADDRESS                      0x1eb17e
#define SPICA_OTX_RULES_3__DEFAULT                      0x0
#define SPICA_OTX_RULES_3__ICOUNT                        5
#define SPICA_OTX_RULES_3__ISPAN                         0x800
#define SPICA_OTX_RULES_3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_3__ADDRESS)
#define SPICA_OTX_RULES_3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_3__ADDRESS)
#define SPICA_OTX_RULES_3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_3__ADDRESS, (data))
#define SPICA_OTX_RULES_3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_3__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_3__TAP_3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_3__TAP_3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_3__TAP_3__READ(die, channel)         SPICA_OTX_RULES_3__TAP_3__GET(SPICA_OTX_RULES_3__READ(die, channel))
#  define SPICA_OTX_RULES_3__TAP_3__WRITE(die, channel, fdata) SPICA_OTX_RULES_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_3__TAP_3__RMW(die, channel, fdata) SPICA_OTX_RULES_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_3__TAP_3__MASK                       0xffff
#  define SPICA_OTX_RULES_3__TAP_3__OFFSET                     0

#define SPICA_OTX_RULES_4__ADDRESS                      0x1eb17f
#define SPICA_OTX_RULES_4__DEFAULT                      0x0
#define SPICA_OTX_RULES_4__ICOUNT                        5
#define SPICA_OTX_RULES_4__ISPAN                         0x800
#define SPICA_OTX_RULES_4__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_4__ADDRESS)
#define SPICA_OTX_RULES_4__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_4__ADDRESS)
#define SPICA_OTX_RULES_4__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_4__ADDRESS, (data))
#define SPICA_OTX_RULES_4__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_4__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_4__TAP_4__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_4__TAP_4__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_4__TAP_4__READ(die, channel)         SPICA_OTX_RULES_4__TAP_4__GET(SPICA_OTX_RULES_4__READ(die, channel))
#  define SPICA_OTX_RULES_4__TAP_4__WRITE(die, channel, fdata) SPICA_OTX_RULES_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_4__TAP_4__RMW(die, channel, fdata) SPICA_OTX_RULES_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_4__TAP_4__MASK                       0xffff
#  define SPICA_OTX_RULES_4__TAP_4__OFFSET                     0

#define SPICA_OTX_RULES_5__ADDRESS                      0x1eb180
#define SPICA_OTX_RULES_5__DEFAULT                      0x0
#define SPICA_OTX_RULES_5__ICOUNT                        5
#define SPICA_OTX_RULES_5__ISPAN                         0x800
#define SPICA_OTX_RULES_5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_5__ADDRESS)
#define SPICA_OTX_RULES_5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_5__ADDRESS)
#define SPICA_OTX_RULES_5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_5__ADDRESS, (data))
#define SPICA_OTX_RULES_5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_5__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_5__TAP_5__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_5__TAP_5__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_5__TAP_5__READ(die, channel)         SPICA_OTX_RULES_5__TAP_5__GET(SPICA_OTX_RULES_5__READ(die, channel))
#  define SPICA_OTX_RULES_5__TAP_5__WRITE(die, channel, fdata) SPICA_OTX_RULES_5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_5__TAP_5__RMW(die, channel, fdata) SPICA_OTX_RULES_5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_5__TAP_5__MASK                       0xffff
#  define SPICA_OTX_RULES_5__TAP_5__OFFSET                     0

#define SPICA_OTX_RULES_6__ADDRESS                      0x1eb181
#define SPICA_OTX_RULES_6__DEFAULT                      0x0
#define SPICA_OTX_RULES_6__ICOUNT                        5
#define SPICA_OTX_RULES_6__ISPAN                         0x800
#define SPICA_OTX_RULES_6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_6__ADDRESS)
#define SPICA_OTX_RULES_6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_6__ADDRESS)
#define SPICA_OTX_RULES_6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_6__ADDRESS, (data))
#define SPICA_OTX_RULES_6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_6__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_6__TAP_6__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_6__TAP_6__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_6__TAP_6__READ(die, channel)         SPICA_OTX_RULES_6__TAP_6__GET(SPICA_OTX_RULES_6__READ(die, channel))
#  define SPICA_OTX_RULES_6__TAP_6__WRITE(die, channel, fdata) SPICA_OTX_RULES_6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_6__TAP_6__RMW(die, channel, fdata) SPICA_OTX_RULES_6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_6__TAP_6__MASK                       0xffff
#  define SPICA_OTX_RULES_6__TAP_6__OFFSET                     0

#define SPICA_OTX_RULES_7__ADDRESS                      0x1eb182
#define SPICA_OTX_RULES_7__DEFAULT                      0x0
#define SPICA_OTX_RULES_7__ICOUNT                        5
#define SPICA_OTX_RULES_7__ISPAN                         0x800
#define SPICA_OTX_RULES_7__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_7__ADDRESS)
#define SPICA_OTX_RULES_7__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_7__ADDRESS)
#define SPICA_OTX_RULES_7__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_7__ADDRESS, (data))
#define SPICA_OTX_RULES_7__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_7__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_7__TAP_7__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_7__TAP_7__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_7__TAP_7__READ(die, channel)         SPICA_OTX_RULES_7__TAP_7__GET(SPICA_OTX_RULES_7__READ(die, channel))
#  define SPICA_OTX_RULES_7__TAP_7__WRITE(die, channel, fdata) SPICA_OTX_RULES_7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_7__TAP_7__RMW(die, channel, fdata) SPICA_OTX_RULES_7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_7__TAP_7__MASK                       0xffff
#  define SPICA_OTX_RULES_7__TAP_7__OFFSET                     0

#define SPICA_OTX_RULES_8__ADDRESS                      0x1eb183
#define SPICA_OTX_RULES_8__DEFAULT                      0x0
#define SPICA_OTX_RULES_8__ICOUNT                        5
#define SPICA_OTX_RULES_8__ISPAN                         0x800
#define SPICA_OTX_RULES_8__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_8__ADDRESS)
#define SPICA_OTX_RULES_8__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_8__ADDRESS)
#define SPICA_OTX_RULES_8__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_8__ADDRESS, (data))
#define SPICA_OTX_RULES_8__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_8__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_8__INNER_EYE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_8__INNER_EYE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_8__INNER_EYE1__READ(die, channel)         SPICA_OTX_RULES_8__INNER_EYE1__GET(SPICA_OTX_RULES_8__READ(die, channel))
#  define SPICA_OTX_RULES_8__INNER_EYE1__WRITE(die, channel, fdata) SPICA_OTX_RULES_8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_8__INNER_EYE1__RMW(die, channel, fdata) SPICA_OTX_RULES_8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_8__INNER_EYE1__MASK                       0xffff
#  define SPICA_OTX_RULES_8__INNER_EYE1__OFFSET                     0

#define SPICA_OTX_RULES_9__ADDRESS                      0x1eb184
#define SPICA_OTX_RULES_9__DEFAULT                      0x0
#define SPICA_OTX_RULES_9__ICOUNT                        5
#define SPICA_OTX_RULES_9__ISPAN                         0x800
#define SPICA_OTX_RULES_9__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_RULES_9__ADDRESS)
#define SPICA_OTX_RULES_9__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_RULES_9__ADDRESS)
#define SPICA_OTX_RULES_9__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_RULES_9__ADDRESS, (data))
#define SPICA_OTX_RULES_9__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_RULES_9__ADDRESS, (data), (mask))
#  define SPICA_OTX_RULES_9__INNER_EYE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_OTX_RULES_9__INNER_EYE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_OTX_RULES_9__INNER_EYE2__READ(die, channel)         SPICA_OTX_RULES_9__INNER_EYE2__GET(SPICA_OTX_RULES_9__READ(die, channel))
#  define SPICA_OTX_RULES_9__INNER_EYE2__WRITE(die, channel, fdata) SPICA_OTX_RULES_9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_9__INNER_EYE2__RMW(die, channel, fdata) SPICA_OTX_RULES_9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_OTX_RULES_9__INNER_EYE2__MASK                       0xffff
#  define SPICA_OTX_RULES_9__INNER_EYE2__OFFSET                     0

#define SPICA_OTX_PLL_FW_STATUS__ADDRESS                      0x1eb3f5
#define SPICA_OTX_PLL_FW_STATUS__DEFAULT                      0x0
#define SPICA_OTX_PLL_FW_STATUS__ICOUNT                        5
#define SPICA_OTX_PLL_FW_STATUS__ISPAN                         0x800
#define SPICA_OTX_PLL_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_PLL_FW_STATUS__ADDRESS)
#define SPICA_OTX_PLL_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_PLL_FW_STATUS__ADDRESS)
#define SPICA_OTX_PLL_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_PLL_FW_STATUS__ADDRESS, (data))
#define SPICA_OTX_PLL_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_PLL_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_OTX_PLL_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_PLL_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_PLL_FW_STATUS__LOCKED__READ(die, channel)         SPICA_OTX_PLL_FW_STATUS__LOCKED__GET(SPICA_OTX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_OTX_PLL_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_OTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_OTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_PLL_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_OTX_PLL_FW_STATUS__LOCKED__OFFSET                     5
#  define SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__SET(rdata, fdata)         (((rdata) & 0xe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__READ(die, channel)         SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__GET(SPICA_OTX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__WRITE(die, channel, fdata) SPICA_OTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__RMW(die, channel, fdata) SPICA_OTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__MASK                       0x1f
#  define SPICA_OTX_PLL_FW_STATUS__PLL_FSM_STATE__OFFSET                     0

#define SPICA_OTX_TMON_CTRL0__ADDRESS                      0x1eb2d4
#define SPICA_OTX_TMON_CTRL0__DEFAULT                      0x0
#define SPICA_OTX_TMON_CTRL0__ICOUNT                        5
#define SPICA_OTX_TMON_CTRL0__ISPAN                         0x800
#define SPICA_OTX_TMON_CTRL0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_OTX_TMON_CTRL0__ADDRESS)
#define SPICA_OTX_TMON_CTRL0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_OTX_TMON_CTRL0__ADDRESS)
#define SPICA_OTX_TMON_CTRL0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_OTX_TMON_CTRL0__ADDRESS, (data))
#define SPICA_OTX_TMON_CTRL0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_OTX_TMON_CTRL0__ADDRESS, (data), (mask))
#  define SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__READ(die, channel)         SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(SPICA_OTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__WRITE(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__RMW(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__MASK                       0x1
#  define SPICA_OTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__OFFSET                     5
#  define SPICA_OTX_TMON_CTRL0__DISABLE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_OTX_TMON_CTRL0__DISABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_OTX_TMON_CTRL0__DISABLE__READ(die, channel)         SPICA_OTX_TMON_CTRL0__DISABLE__GET(SPICA_OTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_OTX_TMON_CTRL0__DISABLE__WRITE(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TMON_CTRL0__DISABLE__RMW(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_OTX_TMON_CTRL0__DISABLE__MASK                       0x1
#  define SPICA_OTX_TMON_CTRL0__DISABLE__OFFSET                     4
#  define SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__READ(die, channel)         SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(SPICA_OTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__WRITE(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__RMW(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__MASK                       0x1
#  define SPICA_OTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__OFFSET                     3
#  define SPICA_OTX_TMON_CTRL0__IADC_VAL__SET(rdata, fdata)         (((rdata) & 0xf8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_OTX_TMON_CTRL0__IADC_VAL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_OTX_TMON_CTRL0__IADC_VAL__READ(die, channel)         SPICA_OTX_TMON_CTRL0__IADC_VAL__GET(SPICA_OTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_OTX_TMON_CTRL0__IADC_VAL__WRITE(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_OTX_TMON_CTRL0__IADC_VAL__RMW(die, channel, fdata) SPICA_OTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_OTX_TMON_CTRL0__IADC_VAL__MASK                       0x7
#  define SPICA_OTX_TMON_CTRL0__IADC_VAL__OFFSET                     0

#define SPICA_MTX_RULES_0__ADDRESS                      0x1e8882
#define SPICA_MTX_RULES_0__DEFAULT                      0x0
#define SPICA_MTX_RULES_0__ICOUNT                        5
#define SPICA_MTX_RULES_0__ISPAN                         0x800
#define SPICA_MTX_RULES_0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_0__ADDRESS)
#define SPICA_MTX_RULES_0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_0__ADDRESS)
#define SPICA_MTX_RULES_0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_0__ADDRESS, (data))
#define SPICA_MTX_RULES_0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_0__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_0__BAUD_RATE_SEL__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_MTX_RULES_0__BAUD_RATE_SEL__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_MTX_RULES_0__BAUD_RATE_SEL__READ(die, channel)         SPICA_MTX_RULES_0__BAUD_RATE_SEL__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__BAUD_RATE_SEL__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_MTX_RULES_0__BAUD_RATE_SEL__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_MTX_RULES_0__BAUD_RATE_SEL__MASK                       0x7
#  define SPICA_MTX_RULES_0__BAUD_RATE_SEL__OFFSET                     13
#  define SPICA_MTX_RULES_0__SQUELCH_LOCK__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MTX_RULES_0__SQUELCH_LOCK__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MTX_RULES_0__SQUELCH_LOCK__READ(die, channel)         SPICA_MTX_RULES_0__SQUELCH_LOCK__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__SQUELCH_LOCK__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MTX_RULES_0__SQUELCH_LOCK__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_MTX_RULES_0__SQUELCH_LOCK__MASK                       0x1
#  define SPICA_MTX_RULES_0__SQUELCH_LOCK__OFFSET                     12
#  define SPICA_MTX_RULES_0__CHANNEL_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MTX_RULES_0__CHANNEL_ENABLE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MTX_RULES_0__CHANNEL_ENABLE__READ(die, channel)         SPICA_MTX_RULES_0__CHANNEL_ENABLE__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__CHANNEL_ENABLE__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MTX_RULES_0__CHANNEL_ENABLE__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_MTX_RULES_0__CHANNEL_ENABLE__MASK                       0x1
#  define SPICA_MTX_RULES_0__CHANNEL_ENABLE__OFFSET                     11
#  define SPICA_MTX_RULES_0__SWING__SET(rdata, fdata)         (((rdata) & 0xf8ff) | (((uint32_t)(fdata) << 8) & 0x700))
#  define SPICA_MTX_RULES_0__SWING__GET(rdata)                (((rdata) >> 8) & 0x7)
#  define SPICA_MTX_RULES_0__SWING__READ(die, channel)         SPICA_MTX_RULES_0__SWING__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__SWING__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MTX_RULES_0__SWING__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<8, 0x700)
#  define SPICA_MTX_RULES_0__SWING__MASK                       0x7
#  define SPICA_MTX_RULES_0__SWING__OFFSET                     8
#  define SPICA_MTX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_MTX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_MTX_RULES_0__SIGNALLING__READ(die, channel)         SPICA_MTX_RULES_0__SIGNALLING__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MTX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_MTX_RULES_0__SIGNALLING__MASK                       0x1
#  define SPICA_MTX_RULES_0__SIGNALLING__OFFSET                     7
#  define SPICA_MTX_RULES_0__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_MTX_RULES_0__IEEE_DEMAP__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_MTX_RULES_0__IEEE_DEMAP__READ(die, channel)         SPICA_MTX_RULES_0__IEEE_DEMAP__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__IEEE_DEMAP__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MTX_RULES_0__IEEE_DEMAP__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_MTX_RULES_0__IEEE_DEMAP__MASK                       0x1
#  define SPICA_MTX_RULES_0__IEEE_DEMAP__OFFSET                     6
#  define SPICA_MTX_RULES_0__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MTX_RULES_0__INVERT_CHAN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MTX_RULES_0__INVERT_CHAN__READ(die, channel)         SPICA_MTX_RULES_0__INVERT_CHAN__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__INVERT_CHAN__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MTX_RULES_0__INVERT_CHAN__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MTX_RULES_0__INVERT_CHAN__MASK                       0x1
#  define SPICA_MTX_RULES_0__INVERT_CHAN__OFFSET                     5
#  define SPICA_MTX_RULES_0__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MTX_RULES_0__GRAY_MAPPING__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MTX_RULES_0__GRAY_MAPPING__READ(die, channel)         SPICA_MTX_RULES_0__GRAY_MAPPING__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__GRAY_MAPPING__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MTX_RULES_0__GRAY_MAPPING__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MTX_RULES_0__GRAY_MAPPING__MASK                       0x1
#  define SPICA_MTX_RULES_0__GRAY_MAPPING__OFFSET                     4
#  define SPICA_MTX_RULES_0__LUT_MODE__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_MTX_RULES_0__LUT_MODE__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_MTX_RULES_0__LUT_MODE__READ(die, channel)         SPICA_MTX_RULES_0__LUT_MODE__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__LUT_MODE__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MTX_RULES_0__LUT_MODE__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_MTX_RULES_0__LUT_MODE__MASK                       0x7
#  define SPICA_MTX_RULES_0__LUT_MODE__OFFSET                     1
#  define SPICA_MTX_RULES_0__FLL_MODE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MTX_RULES_0__FLL_MODE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MTX_RULES_0__FLL_MODE__READ(die, channel)         SPICA_MTX_RULES_0__FLL_MODE__GET(SPICA_MTX_RULES_0__READ(die, channel))
#  define SPICA_MTX_RULES_0__FLL_MODE__WRITE(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MTX_RULES_0__FLL_MODE__RMW(die, channel, fdata) SPICA_MTX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MTX_RULES_0__FLL_MODE__MASK                       0x1
#  define SPICA_MTX_RULES_0__FLL_MODE__OFFSET                     0

#define SPICA_MTX_FW_STATUS__ADDRESS                      0x1e8883
#define SPICA_MTX_FW_STATUS__DEFAULT                      0x0
#define SPICA_MTX_FW_STATUS__ICOUNT                        5
#define SPICA_MTX_FW_STATUS__ISPAN                         0x800
#define SPICA_MTX_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_FW_STATUS__ADDRESS)
#define SPICA_MTX_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_FW_STATUS__ADDRESS)
#define SPICA_MTX_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_FW_STATUS__ADDRESS, (data))
#define SPICA_MTX_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MTX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MTX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MTX_FW_STATUS__LOCKED__READ(die, channel)         SPICA_MTX_FW_STATUS__LOCKED__GET(SPICA_MTX_FW_STATUS__READ(die, channel))
#  define SPICA_MTX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_MTX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MTX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_MTX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_MTX_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_MTX_FW_STATUS__LOCKED__OFFSET                     15
#  define SPICA_MTX_FW_STATUS__STATE__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_MTX_FW_STATUS__STATE__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_MTX_FW_STATUS__STATE__READ(die, channel)         SPICA_MTX_FW_STATUS__STATE__GET(SPICA_MTX_FW_STATUS__READ(die, channel))
#  define SPICA_MTX_FW_STATUS__STATE__WRITE(die, channel, fdata) SPICA_MTX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_MTX_FW_STATUS__STATE__RMW(die, channel, fdata) SPICA_MTX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_MTX_FW_STATUS__STATE__MASK                       0x7f
#  define SPICA_MTX_FW_STATUS__STATE__OFFSET                     8
#  define SPICA_MTX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_MTX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_MTX_FW_STATUS__RESET_COUNT__READ(die, channel)         SPICA_MTX_FW_STATUS__RESET_COUNT__GET(SPICA_MTX_FW_STATUS__READ(die, channel))
#  define SPICA_MTX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SPICA_MTX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MTX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SPICA_MTX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_MTX_FW_STATUS__RESET_COUNT__MASK                       0xff
#  define SPICA_MTX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SPICA_MTX_CH_STATUS0__ADDRESS                      0x1e8884
#define SPICA_MTX_CH_STATUS0__DEFAULT                      0x0
#define SPICA_MTX_CH_STATUS0__ICOUNT                        5
#define SPICA_MTX_CH_STATUS0__ISPAN                         0x800
#define SPICA_MTX_CH_STATUS0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_CH_STATUS0__ADDRESS)
#define SPICA_MTX_CH_STATUS0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_CH_STATUS0__ADDRESS)
#define SPICA_MTX_CH_STATUS0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_CH_STATUS0__ADDRESS, (data))
#define SPICA_MTX_CH_STATUS0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_CH_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_MTX_CH_STATUS0__LOL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MTX_CH_STATUS0__LOL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MTX_CH_STATUS0__LOL__READ(die, channel)         SPICA_MTX_CH_STATUS0__LOL__GET(SPICA_MTX_CH_STATUS0__READ(die, channel))
#  define SPICA_MTX_CH_STATUS0__LOL__WRITE(die, channel, fdata) SPICA_MTX_CH_STATUS0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MTX_CH_STATUS0__LOL__RMW(die, channel, fdata) SPICA_MTX_CH_STATUS0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MTX_CH_STATUS0__LOL__MASK                       0x1
#  define SPICA_MTX_CH_STATUS0__LOL__OFFSET                     0

#define SPICA_MTX_XBAR__ADDRESS                      0x1e8885
#define SPICA_MTX_XBAR__DEFAULT                      0x0
#define SPICA_MTX_XBAR__ICOUNT                        5
#define SPICA_MTX_XBAR__ISPAN                         0x800
#define SPICA_MTX_XBAR__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_XBAR__ADDRESS)
#define SPICA_MTX_XBAR__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_XBAR__ADDRESS)
#define SPICA_MTX_XBAR__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_XBAR__ADDRESS, (data))
#define SPICA_MTX_XBAR__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_XBAR__ADDRESS, (data), (mask))
#  define SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__READ(die, channel)         SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__GET(SPICA_MTX_XBAR__READ(die, channel))
#  define SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__WRITE(die, channel, fdata) SPICA_MTX_XBAR__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__RMW(die, channel, fdata) SPICA_MTX_XBAR__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__MASK                       0x3
#  define SPICA_MTX_XBAR__SRC_CHANNEL_INTERLEAVE__OFFSET                     4
#  define SPICA_MTX_XBAR__SRC_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MTX_XBAR__SRC_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MTX_XBAR__SRC_CHANNEL__READ(die, channel)         SPICA_MTX_XBAR__SRC_CHANNEL__GET(SPICA_MTX_XBAR__READ(die, channel))
#  define SPICA_MTX_XBAR__SRC_CHANNEL__WRITE(die, channel, fdata) SPICA_MTX_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MTX_XBAR__SRC_CHANNEL__RMW(die, channel, fdata) SPICA_MTX_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MTX_XBAR__SRC_CHANNEL__MASK                       0xf
#  define SPICA_MTX_XBAR__SRC_CHANNEL__OFFSET                     0

#define SPICA_MTX_CLK_XBAR__ADDRESS                      0x1e8886
#define SPICA_MTX_CLK_XBAR__DEFAULT                      0x0
#define SPICA_MTX_CLK_XBAR__ICOUNT                        5
#define SPICA_MTX_CLK_XBAR__ISPAN                         0x800
#define SPICA_MTX_CLK_XBAR__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_CLK_XBAR__ADDRESS)
#define SPICA_MTX_CLK_XBAR__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_CLK_XBAR__ADDRESS)
#define SPICA_MTX_CLK_XBAR__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_CLK_XBAR__ADDRESS, (data))
#define SPICA_MTX_CLK_XBAR__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_CLK_XBAR__ADDRESS, (data), (mask))
#  define SPICA_MTX_CLK_XBAR__SRC_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MTX_CLK_XBAR__SRC_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MTX_CLK_XBAR__SRC_CHANNEL__READ(die, channel)         SPICA_MTX_CLK_XBAR__SRC_CHANNEL__GET(SPICA_MTX_CLK_XBAR__READ(die, channel))
#  define SPICA_MTX_CLK_XBAR__SRC_CHANNEL__WRITE(die, channel, fdata) SPICA_MTX_CLK_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MTX_CLK_XBAR__SRC_CHANNEL__RMW(die, channel, fdata) SPICA_MTX_CLK_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_MTX_CLK_XBAR__SRC_CHANNEL__MASK                       0xf
#  define SPICA_MTX_CLK_XBAR__SRC_CHANNEL__OFFSET                     0

#define SPICA_MTX_RULES_UPDATE__ADDRESS                      0x1e8c3b
#define SPICA_MTX_RULES_UPDATE__DEFAULT                      0x0
#define SPICA_MTX_RULES_UPDATE__ICOUNT                        5
#define SPICA_MTX_RULES_UPDATE__ISPAN                         0x800
#define SPICA_MTX_RULES_UPDATE__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_UPDATE__ADDRESS)
#define SPICA_MTX_RULES_UPDATE__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_UPDATE__ADDRESS)
#define SPICA_MTX_RULES_UPDATE__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_UPDATE__ADDRESS, (data))
#define SPICA_MTX_RULES_UPDATE__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_UPDATE__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__READ(die, channel)         SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__GET(SPICA_MTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__WRITE(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__RMW(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__MASK                       0x1
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__OFFSET                     5
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__READ(die, channel)         SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__GET(SPICA_MTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__WRITE(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__RMW(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__MASK                       0x1
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__OFFSET                     4
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__READ(die, channel)         SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__GET(SPICA_MTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__WRITE(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__RMW(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__MASK                       0x1
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__OFFSET                     3
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__READ(die, channel)         SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__GET(SPICA_MTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__WRITE(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__RMW(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__MASK                       0x1
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__OFFSET                     2
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__READ(die, channel)         SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__GET(SPICA_MTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__WRITE(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__RMW(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__MASK                       0x1
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_ACK__OFFSET                     1
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__READ(die, channel)         SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__GET(SPICA_MTX_RULES_UPDATE__READ(die, channel))
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__WRITE(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__RMW(die, channel, fdata) SPICA_MTX_RULES_UPDATE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__MASK                       0x1
#  define SPICA_MTX_RULES_UPDATE__UPDATE_TX_FIR_REQ__OFFSET                     0

#define SPICA_MTX_RULES_1__ADDRESS                      0x1e8c3c
#define SPICA_MTX_RULES_1__DEFAULT                      0x0
#define SPICA_MTX_RULES_1__ICOUNT                        5
#define SPICA_MTX_RULES_1__ISPAN                         0x800
#define SPICA_MTX_RULES_1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_1__ADDRESS)
#define SPICA_MTX_RULES_1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_1__ADDRESS)
#define SPICA_MTX_RULES_1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_1__ADDRESS, (data))
#define SPICA_MTX_RULES_1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_1__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_1__TAP_1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_1__TAP_1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_1__TAP_1__READ(die, channel)         SPICA_MTX_RULES_1__TAP_1__GET(SPICA_MTX_RULES_1__READ(die, channel))
#  define SPICA_MTX_RULES_1__TAP_1__WRITE(die, channel, fdata) SPICA_MTX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_1__TAP_1__RMW(die, channel, fdata) SPICA_MTX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_1__TAP_1__MASK                       0xffff
#  define SPICA_MTX_RULES_1__TAP_1__OFFSET                     0

#define SPICA_MTX_RULES_2__ADDRESS                      0x1e8c3d
#define SPICA_MTX_RULES_2__DEFAULT                      0x0
#define SPICA_MTX_RULES_2__ICOUNT                        5
#define SPICA_MTX_RULES_2__ISPAN                         0x800
#define SPICA_MTX_RULES_2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_2__ADDRESS)
#define SPICA_MTX_RULES_2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_2__ADDRESS)
#define SPICA_MTX_RULES_2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_2__ADDRESS, (data))
#define SPICA_MTX_RULES_2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_2__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_2__TAP_2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_2__TAP_2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_2__TAP_2__READ(die, channel)         SPICA_MTX_RULES_2__TAP_2__GET(SPICA_MTX_RULES_2__READ(die, channel))
#  define SPICA_MTX_RULES_2__TAP_2__WRITE(die, channel, fdata) SPICA_MTX_RULES_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_2__TAP_2__RMW(die, channel, fdata) SPICA_MTX_RULES_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_2__TAP_2__MASK                       0xffff
#  define SPICA_MTX_RULES_2__TAP_2__OFFSET                     0

#define SPICA_MTX_RULES_3__ADDRESS                      0x1e8c3e
#define SPICA_MTX_RULES_3__DEFAULT                      0x0
#define SPICA_MTX_RULES_3__ICOUNT                        5
#define SPICA_MTX_RULES_3__ISPAN                         0x800
#define SPICA_MTX_RULES_3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_3__ADDRESS)
#define SPICA_MTX_RULES_3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_3__ADDRESS)
#define SPICA_MTX_RULES_3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_3__ADDRESS, (data))
#define SPICA_MTX_RULES_3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_3__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_3__TAP_3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_3__TAP_3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_3__TAP_3__READ(die, channel)         SPICA_MTX_RULES_3__TAP_3__GET(SPICA_MTX_RULES_3__READ(die, channel))
#  define SPICA_MTX_RULES_3__TAP_3__WRITE(die, channel, fdata) SPICA_MTX_RULES_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_3__TAP_3__RMW(die, channel, fdata) SPICA_MTX_RULES_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_3__TAP_3__MASK                       0xffff
#  define SPICA_MTX_RULES_3__TAP_3__OFFSET                     0

#define SPICA_MTX_RULES_4__ADDRESS                      0x1e8c3f
#define SPICA_MTX_RULES_4__DEFAULT                      0x0
#define SPICA_MTX_RULES_4__ICOUNT                        5
#define SPICA_MTX_RULES_4__ISPAN                         0x800
#define SPICA_MTX_RULES_4__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_4__ADDRESS)
#define SPICA_MTX_RULES_4__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_4__ADDRESS)
#define SPICA_MTX_RULES_4__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_4__ADDRESS, (data))
#define SPICA_MTX_RULES_4__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_4__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_4__TAP_4__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_4__TAP_4__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_4__TAP_4__READ(die, channel)         SPICA_MTX_RULES_4__TAP_4__GET(SPICA_MTX_RULES_4__READ(die, channel))
#  define SPICA_MTX_RULES_4__TAP_4__WRITE(die, channel, fdata) SPICA_MTX_RULES_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_4__TAP_4__RMW(die, channel, fdata) SPICA_MTX_RULES_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_4__TAP_4__MASK                       0xffff
#  define SPICA_MTX_RULES_4__TAP_4__OFFSET                     0

#define SPICA_MTX_RULES_5__ADDRESS                      0x1e8c40
#define SPICA_MTX_RULES_5__DEFAULT                      0x0
#define SPICA_MTX_RULES_5__ICOUNT                        5
#define SPICA_MTX_RULES_5__ISPAN                         0x800
#define SPICA_MTX_RULES_5__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_5__ADDRESS)
#define SPICA_MTX_RULES_5__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_5__ADDRESS)
#define SPICA_MTX_RULES_5__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_5__ADDRESS, (data))
#define SPICA_MTX_RULES_5__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_5__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_5__TAP_5__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_5__TAP_5__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_5__TAP_5__READ(die, channel)         SPICA_MTX_RULES_5__TAP_5__GET(SPICA_MTX_RULES_5__READ(die, channel))
#  define SPICA_MTX_RULES_5__TAP_5__WRITE(die, channel, fdata) SPICA_MTX_RULES_5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_5__TAP_5__RMW(die, channel, fdata) SPICA_MTX_RULES_5__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_5__TAP_5__MASK                       0xffff
#  define SPICA_MTX_RULES_5__TAP_5__OFFSET                     0

#define SPICA_MTX_RULES_6__ADDRESS                      0x1e8c41
#define SPICA_MTX_RULES_6__DEFAULT                      0x0
#define SPICA_MTX_RULES_6__ICOUNT                        5
#define SPICA_MTX_RULES_6__ISPAN                         0x800
#define SPICA_MTX_RULES_6__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_6__ADDRESS)
#define SPICA_MTX_RULES_6__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_6__ADDRESS)
#define SPICA_MTX_RULES_6__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_6__ADDRESS, (data))
#define SPICA_MTX_RULES_6__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_6__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_6__TAP_6__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_6__TAP_6__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_6__TAP_6__READ(die, channel)         SPICA_MTX_RULES_6__TAP_6__GET(SPICA_MTX_RULES_6__READ(die, channel))
#  define SPICA_MTX_RULES_6__TAP_6__WRITE(die, channel, fdata) SPICA_MTX_RULES_6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_6__TAP_6__RMW(die, channel, fdata) SPICA_MTX_RULES_6__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_6__TAP_6__MASK                       0xffff
#  define SPICA_MTX_RULES_6__TAP_6__OFFSET                     0

#define SPICA_MTX_RULES_7__ADDRESS                      0x1e8c42
#define SPICA_MTX_RULES_7__DEFAULT                      0x0
#define SPICA_MTX_RULES_7__ICOUNT                        5
#define SPICA_MTX_RULES_7__ISPAN                         0x800
#define SPICA_MTX_RULES_7__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_7__ADDRESS)
#define SPICA_MTX_RULES_7__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_7__ADDRESS)
#define SPICA_MTX_RULES_7__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_7__ADDRESS, (data))
#define SPICA_MTX_RULES_7__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_7__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_7__TAP_7__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_7__TAP_7__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_7__TAP_7__READ(die, channel)         SPICA_MTX_RULES_7__TAP_7__GET(SPICA_MTX_RULES_7__READ(die, channel))
#  define SPICA_MTX_RULES_7__TAP_7__WRITE(die, channel, fdata) SPICA_MTX_RULES_7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_7__TAP_7__RMW(die, channel, fdata) SPICA_MTX_RULES_7__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_7__TAP_7__MASK                       0xffff
#  define SPICA_MTX_RULES_7__TAP_7__OFFSET                     0

#define SPICA_MTX_RULES_8__ADDRESS                      0x1e8c43
#define SPICA_MTX_RULES_8__DEFAULT                      0x0
#define SPICA_MTX_RULES_8__ICOUNT                        5
#define SPICA_MTX_RULES_8__ISPAN                         0x800
#define SPICA_MTX_RULES_8__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_8__ADDRESS)
#define SPICA_MTX_RULES_8__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_8__ADDRESS)
#define SPICA_MTX_RULES_8__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_8__ADDRESS, (data))
#define SPICA_MTX_RULES_8__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_8__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_8__INNER_EYE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_8__INNER_EYE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_8__INNER_EYE1__READ(die, channel)         SPICA_MTX_RULES_8__INNER_EYE1__GET(SPICA_MTX_RULES_8__READ(die, channel))
#  define SPICA_MTX_RULES_8__INNER_EYE1__WRITE(die, channel, fdata) SPICA_MTX_RULES_8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_8__INNER_EYE1__RMW(die, channel, fdata) SPICA_MTX_RULES_8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_8__INNER_EYE1__MASK                       0xffff
#  define SPICA_MTX_RULES_8__INNER_EYE1__OFFSET                     0

#define SPICA_MTX_RULES_9__ADDRESS                      0x1e8c44
#define SPICA_MTX_RULES_9__DEFAULT                      0x0
#define SPICA_MTX_RULES_9__ICOUNT                        5
#define SPICA_MTX_RULES_9__ISPAN                         0x800
#define SPICA_MTX_RULES_9__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_MTX_RULES_9__ADDRESS)
#define SPICA_MTX_RULES_9__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_MTX_RULES_9__ADDRESS)
#define SPICA_MTX_RULES_9__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_MTX_RULES_9__ADDRESS, (data))
#define SPICA_MTX_RULES_9__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_MTX_RULES_9__ADDRESS, (data), (mask))
#  define SPICA_MTX_RULES_9__INNER_EYE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MTX_RULES_9__INNER_EYE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MTX_RULES_9__INNER_EYE2__READ(die, channel)         SPICA_MTX_RULES_9__INNER_EYE2__GET(SPICA_MTX_RULES_9__READ(die, channel))
#  define SPICA_MTX_RULES_9__INNER_EYE2__WRITE(die, channel, fdata) SPICA_MTX_RULES_9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_9__INNER_EYE2__RMW(die, channel, fdata) SPICA_MTX_RULES_9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_MTX_RULES_9__INNER_EYE2__MASK                       0xffff
#  define SPICA_MTX_RULES_9__INNER_EYE2__OFFSET                     0

#define SPICA_STX_RULES_0__ADDRESS                      0x1e892d
#define SPICA_STX_RULES_0__DEFAULT                      0x0
#define SPICA_STX_RULES_0__ICOUNT                        15
#define SPICA_STX_RULES_0__ISPAN                         0x100
#define SPICA_STX_RULES_0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_0__ADDRESS)
#define SPICA_STX_RULES_0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_0__ADDRESS)
#define SPICA_STX_RULES_0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_0__ADDRESS, (data))
#define SPICA_STX_RULES_0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_0__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_0__BAUD_RATE_SEL__SET(rdata, fdata)         (((rdata) & 0x1fff) | (((uint32_t)(fdata) << 13) & 0xe000))
#  define SPICA_STX_RULES_0__BAUD_RATE_SEL__GET(rdata)                (((rdata) >> 13) & 0x7)
#  define SPICA_STX_RULES_0__BAUD_RATE_SEL__READ(die, channel)         SPICA_STX_RULES_0__BAUD_RATE_SEL__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__BAUD_RATE_SEL__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_STX_RULES_0__BAUD_RATE_SEL__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<13, 0xe000)
#  define SPICA_STX_RULES_0__BAUD_RATE_SEL__MASK                       0x7
#  define SPICA_STX_RULES_0__BAUD_RATE_SEL__OFFSET                     13
#  define SPICA_STX_RULES_0__SQUELCH_LOCK__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_STX_RULES_0__SQUELCH_LOCK__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_STX_RULES_0__SQUELCH_LOCK__READ(die, channel)         SPICA_STX_RULES_0__SQUELCH_LOCK__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__SQUELCH_LOCK__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_STX_RULES_0__SQUELCH_LOCK__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<12, 0x1000)
#  define SPICA_STX_RULES_0__SQUELCH_LOCK__MASK                       0x1
#  define SPICA_STX_RULES_0__SQUELCH_LOCK__OFFSET                     12
#  define SPICA_STX_RULES_0__CHANNEL_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_STX_RULES_0__CHANNEL_ENABLE__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_STX_RULES_0__CHANNEL_ENABLE__READ(die, channel)         SPICA_STX_RULES_0__CHANNEL_ENABLE__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__CHANNEL_ENABLE__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_STX_RULES_0__CHANNEL_ENABLE__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<11, 0x800)
#  define SPICA_STX_RULES_0__CHANNEL_ENABLE__MASK                       0x1
#  define SPICA_STX_RULES_0__CHANNEL_ENABLE__OFFSET                     11
#  define SPICA_STX_RULES_0__SIGNALLING__SET(rdata, fdata)         (((rdata) & 0xff7f) | (((uint32_t)(fdata) << 7) & 0x80))
#  define SPICA_STX_RULES_0__SIGNALLING__GET(rdata)                (((rdata) >> 7) & 0x1)
#  define SPICA_STX_RULES_0__SIGNALLING__READ(die, channel)         SPICA_STX_RULES_0__SIGNALLING__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__SIGNALLING__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_STX_RULES_0__SIGNALLING__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<7, 0x80)
#  define SPICA_STX_RULES_0__SIGNALLING__MASK                       0x1
#  define SPICA_STX_RULES_0__SIGNALLING__OFFSET                     7
#  define SPICA_STX_RULES_0__IEEE_DEMAP__SET(rdata, fdata)         (((rdata) & 0xffbf) | (((uint32_t)(fdata) << 6) & 0x40))
#  define SPICA_STX_RULES_0__IEEE_DEMAP__GET(rdata)                (((rdata) >> 6) & 0x1)
#  define SPICA_STX_RULES_0__IEEE_DEMAP__READ(die, channel)         SPICA_STX_RULES_0__IEEE_DEMAP__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__IEEE_DEMAP__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_STX_RULES_0__IEEE_DEMAP__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<6, 0x40)
#  define SPICA_STX_RULES_0__IEEE_DEMAP__MASK                       0x1
#  define SPICA_STX_RULES_0__IEEE_DEMAP__OFFSET                     6
#  define SPICA_STX_RULES_0__INVERT_CHAN__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_STX_RULES_0__INVERT_CHAN__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_STX_RULES_0__INVERT_CHAN__READ(die, channel)         SPICA_STX_RULES_0__INVERT_CHAN__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__INVERT_CHAN__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_STX_RULES_0__INVERT_CHAN__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_STX_RULES_0__INVERT_CHAN__MASK                       0x1
#  define SPICA_STX_RULES_0__INVERT_CHAN__OFFSET                     5
#  define SPICA_STX_RULES_0__GRAY_MAPPING__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_STX_RULES_0__GRAY_MAPPING__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_STX_RULES_0__GRAY_MAPPING__READ(die, channel)         SPICA_STX_RULES_0__GRAY_MAPPING__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__GRAY_MAPPING__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_STX_RULES_0__GRAY_MAPPING__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_STX_RULES_0__GRAY_MAPPING__MASK                       0x1
#  define SPICA_STX_RULES_0__GRAY_MAPPING__OFFSET                     4
#  define SPICA_STX_RULES_0__LUT_MODE__SET(rdata, fdata)         (((rdata) & 0xfff1) | (((uint32_t)(fdata) << 1) & 0xe))
#  define SPICA_STX_RULES_0__LUT_MODE__GET(rdata)                (((rdata) >> 1) & 0x7)
#  define SPICA_STX_RULES_0__LUT_MODE__READ(die, channel)         SPICA_STX_RULES_0__LUT_MODE__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__LUT_MODE__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_STX_RULES_0__LUT_MODE__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<1, 0xe)
#  define SPICA_STX_RULES_0__LUT_MODE__MASK                       0x7
#  define SPICA_STX_RULES_0__LUT_MODE__OFFSET                     1
#  define SPICA_STX_RULES_0__FLL_MODE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_STX_RULES_0__FLL_MODE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_STX_RULES_0__FLL_MODE__READ(die, channel)         SPICA_STX_RULES_0__FLL_MODE__GET(SPICA_STX_RULES_0__READ(die, channel))
#  define SPICA_STX_RULES_0__FLL_MODE__WRITE(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_STX_RULES_0__FLL_MODE__RMW(die, channel, fdata) SPICA_STX_RULES_0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_STX_RULES_0__FLL_MODE__MASK                       0x1
#  define SPICA_STX_RULES_0__FLL_MODE__OFFSET                     0

#define SPICA_STX_RULES_1__ADDRESS                      0x1e892e
#define SPICA_STX_RULES_1__DEFAULT                      0x0
#define SPICA_STX_RULES_1__ICOUNT                        15
#define SPICA_STX_RULES_1__ISPAN                         0x100
#define SPICA_STX_RULES_1__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_1__ADDRESS)
#define SPICA_STX_RULES_1__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_1__ADDRESS)
#define SPICA_STX_RULES_1__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_1__ADDRESS, (data))
#define SPICA_STX_RULES_1__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_1__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_1__TAP_1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_STX_RULES_1__TAP_1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_STX_RULES_1__TAP_1__READ(die, channel)         SPICA_STX_RULES_1__TAP_1__GET(SPICA_STX_RULES_1__READ(die, channel))
#  define SPICA_STX_RULES_1__TAP_1__WRITE(die, channel, fdata) SPICA_STX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_1__TAP_1__RMW(die, channel, fdata) SPICA_STX_RULES_1__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_1__TAP_1__MASK                       0xffff
#  define SPICA_STX_RULES_1__TAP_1__OFFSET                     0

#define SPICA_STX_RULES_2__ADDRESS                      0x1e892f
#define SPICA_STX_RULES_2__DEFAULT                      0x0
#define SPICA_STX_RULES_2__ICOUNT                        15
#define SPICA_STX_RULES_2__ISPAN                         0x100
#define SPICA_STX_RULES_2__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_2__ADDRESS)
#define SPICA_STX_RULES_2__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_2__ADDRESS)
#define SPICA_STX_RULES_2__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_2__ADDRESS, (data))
#define SPICA_STX_RULES_2__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_2__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_2__TAP_2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_STX_RULES_2__TAP_2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_STX_RULES_2__TAP_2__READ(die, channel)         SPICA_STX_RULES_2__TAP_2__GET(SPICA_STX_RULES_2__READ(die, channel))
#  define SPICA_STX_RULES_2__TAP_2__WRITE(die, channel, fdata) SPICA_STX_RULES_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_2__TAP_2__RMW(die, channel, fdata) SPICA_STX_RULES_2__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_2__TAP_2__MASK                       0xffff
#  define SPICA_STX_RULES_2__TAP_2__OFFSET                     0

#define SPICA_STX_RULES_3__ADDRESS                      0x1e8930
#define SPICA_STX_RULES_3__DEFAULT                      0x0
#define SPICA_STX_RULES_3__ICOUNT                        15
#define SPICA_STX_RULES_3__ISPAN                         0x100
#define SPICA_STX_RULES_3__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_3__ADDRESS)
#define SPICA_STX_RULES_3__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_3__ADDRESS)
#define SPICA_STX_RULES_3__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_3__ADDRESS, (data))
#define SPICA_STX_RULES_3__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_3__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_3__TAP_3__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_STX_RULES_3__TAP_3__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_STX_RULES_3__TAP_3__READ(die, channel)         SPICA_STX_RULES_3__TAP_3__GET(SPICA_STX_RULES_3__READ(die, channel))
#  define SPICA_STX_RULES_3__TAP_3__WRITE(die, channel, fdata) SPICA_STX_RULES_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_3__TAP_3__RMW(die, channel, fdata) SPICA_STX_RULES_3__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_3__TAP_3__MASK                       0xffff
#  define SPICA_STX_RULES_3__TAP_3__OFFSET                     0

#define SPICA_STX_RULES_4__ADDRESS                      0x1e8931
#define SPICA_STX_RULES_4__DEFAULT                      0x0
#define SPICA_STX_RULES_4__ICOUNT                        15
#define SPICA_STX_RULES_4__ISPAN                         0x100
#define SPICA_STX_RULES_4__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_4__ADDRESS)
#define SPICA_STX_RULES_4__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_4__ADDRESS)
#define SPICA_STX_RULES_4__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_4__ADDRESS, (data))
#define SPICA_STX_RULES_4__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_4__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_4__TAP_4__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_STX_RULES_4__TAP_4__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_STX_RULES_4__TAP_4__READ(die, channel)         SPICA_STX_RULES_4__TAP_4__GET(SPICA_STX_RULES_4__READ(die, channel))
#  define SPICA_STX_RULES_4__TAP_4__WRITE(die, channel, fdata) SPICA_STX_RULES_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_4__TAP_4__RMW(die, channel, fdata) SPICA_STX_RULES_4__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_4__TAP_4__MASK                       0xffff
#  define SPICA_STX_RULES_4__TAP_4__OFFSET                     0

#define SPICA_STX_RULES_UPDATE__ADDRESS                      0x1e8932
#define SPICA_STX_RULES_UPDATE__DEFAULT                      0x0
#define SPICA_STX_RULES_UPDATE__ICOUNT                        15
#define SPICA_STX_RULES_UPDATE__ISPAN                         0x100
#define SPICA_STX_RULES_UPDATE__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_UPDATE__ADDRESS)
#define SPICA_STX_RULES_UPDATE__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_UPDATE__ADDRESS)
#define SPICA_STX_RULES_UPDATE__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_UPDATE__ADDRESS, (data))
#define SPICA_STX_RULES_UPDATE__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_UPDATE__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__SET(rdata, fdata)         (((rdata) & 0xffdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__READ(die, channel)         SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__GET(SPICA_STX_RULES_UPDATE__READ(die, channel))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__WRITE(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__RMW(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__MASK                       0x1
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_ACK__OFFSET                     5
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__SET(rdata, fdata)         (((rdata) & 0xffef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__READ(die, channel)         SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__GET(SPICA_STX_RULES_UPDATE__READ(die, channel))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__WRITE(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__RMW(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__MASK                       0x1
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_INVERT_CHAN_REQ__OFFSET                     4
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__READ(die, channel)         SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__GET(SPICA_STX_RULES_UPDATE__READ(die, channel))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__WRITE(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__RMW(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__MASK                       0x1
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_ACK__OFFSET                     3
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__READ(die, channel)         SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__GET(SPICA_STX_RULES_UPDATE__READ(die, channel))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__WRITE(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__RMW(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<2, 0x4)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__MASK                       0x1
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_SQUELCH_LOCK_REQ__OFFSET                     2
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__READ(die, channel)         SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__GET(SPICA_STX_RULES_UPDATE__READ(die, channel))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__WRITE(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__RMW(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<1, 0x2)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__MASK                       0x1
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_ACK__OFFSET                     1
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__READ(die, channel)         SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__GET(SPICA_STX_RULES_UPDATE__READ(die, channel))
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__WRITE(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__RMW(die, channel, fdata) SPICA_STX_RULES_UPDATE__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__MASK                       0x1
#  define SPICA_STX_RULES_UPDATE__UPDATE_TX_FIR_REQ__OFFSET                     0

#define SPICA_STX_CLK_XBAR__ADDRESS                      0x1e8933
#define SPICA_STX_CLK_XBAR__DEFAULT                      0x0
#define SPICA_STX_CLK_XBAR__ICOUNT                        15
#define SPICA_STX_CLK_XBAR__ISPAN                         0x100
#define SPICA_STX_CLK_XBAR__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_CLK_XBAR__ADDRESS)
#define SPICA_STX_CLK_XBAR__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_CLK_XBAR__ADDRESS)
#define SPICA_STX_CLK_XBAR__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_CLK_XBAR__ADDRESS, (data))
#define SPICA_STX_CLK_XBAR__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_CLK_XBAR__ADDRESS, (data), (mask))
#  define SPICA_STX_CLK_XBAR__SRC_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_STX_CLK_XBAR__SRC_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_STX_CLK_XBAR__SRC_CHANNEL__READ(die, channel)         SPICA_STX_CLK_XBAR__SRC_CHANNEL__GET(SPICA_STX_CLK_XBAR__READ(die, channel))
#  define SPICA_STX_CLK_XBAR__SRC_CHANNEL__WRITE(die, channel, fdata) SPICA_STX_CLK_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_STX_CLK_XBAR__SRC_CHANNEL__RMW(die, channel, fdata) SPICA_STX_CLK_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_STX_CLK_XBAR__SRC_CHANNEL__MASK                       0xf
#  define SPICA_STX_CLK_XBAR__SRC_CHANNEL__OFFSET                     0

#define SPICA_STX_XBAR__ADDRESS                      0x1e8934
#define SPICA_STX_XBAR__DEFAULT                      0x0
#define SPICA_STX_XBAR__ICOUNT                        15
#define SPICA_STX_XBAR__ISPAN                         0x100
#define SPICA_STX_XBAR__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_XBAR__ADDRESS)
#define SPICA_STX_XBAR__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_XBAR__ADDRESS)
#define SPICA_STX_XBAR__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_XBAR__ADDRESS, (data))
#define SPICA_STX_XBAR__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_XBAR__ADDRESS, (data), (mask))
#  define SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__SET(rdata, fdata)         (((rdata) & 0xffcf) | (((uint32_t)(fdata) << 4) & 0x30))
#  define SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__GET(rdata)                (((rdata) >> 4) & 0x3)
#  define SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__READ(die, channel)         SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__GET(SPICA_STX_XBAR__READ(die, channel))
#  define SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__WRITE(die, channel, fdata) SPICA_STX_XBAR__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__RMW(die, channel, fdata) SPICA_STX_XBAR__RMW(die, (channel), (fdata)<<4, 0x30)
#  define SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__MASK                       0x3
#  define SPICA_STX_XBAR__SRC_CHANNEL_INTERLEAVE__OFFSET                     4
#  define SPICA_STX_XBAR__SRC_CHANNEL__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_STX_XBAR__SRC_CHANNEL__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_STX_XBAR__SRC_CHANNEL__READ(die, channel)         SPICA_STX_XBAR__SRC_CHANNEL__GET(SPICA_STX_XBAR__READ(die, channel))
#  define SPICA_STX_XBAR__SRC_CHANNEL__WRITE(die, channel, fdata) SPICA_STX_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_STX_XBAR__SRC_CHANNEL__RMW(die, channel, fdata) SPICA_STX_XBAR__RMW(die, (channel), (fdata)<<0, 0xf)
#  define SPICA_STX_XBAR__SRC_CHANNEL__MASK                       0xf
#  define SPICA_STX_XBAR__SRC_CHANNEL__OFFSET                     0

#define SPICA_STX_RULES_8__ADDRESS                      0x1e8935
#define SPICA_STX_RULES_8__DEFAULT                      0x0
#define SPICA_STX_RULES_8__ICOUNT                        15
#define SPICA_STX_RULES_8__ISPAN                         0x100
#define SPICA_STX_RULES_8__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_8__ADDRESS)
#define SPICA_STX_RULES_8__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_8__ADDRESS)
#define SPICA_STX_RULES_8__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_8__ADDRESS, (data))
#define SPICA_STX_RULES_8__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_8__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_8__INNER_EYE1__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_STX_RULES_8__INNER_EYE1__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_STX_RULES_8__INNER_EYE1__READ(die, channel)         SPICA_STX_RULES_8__INNER_EYE1__GET(SPICA_STX_RULES_8__READ(die, channel))
#  define SPICA_STX_RULES_8__INNER_EYE1__WRITE(die, channel, fdata) SPICA_STX_RULES_8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_8__INNER_EYE1__RMW(die, channel, fdata) SPICA_STX_RULES_8__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_8__INNER_EYE1__MASK                       0xffff
#  define SPICA_STX_RULES_8__INNER_EYE1__OFFSET                     0

#define SPICA_STX_RULES_9__ADDRESS                      0x1e8936
#define SPICA_STX_RULES_9__DEFAULT                      0x0
#define SPICA_STX_RULES_9__ICOUNT                        15
#define SPICA_STX_RULES_9__ISPAN                         0x100
#define SPICA_STX_RULES_9__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_RULES_9__ADDRESS)
#define SPICA_STX_RULES_9__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_RULES_9__ADDRESS)
#define SPICA_STX_RULES_9__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_RULES_9__ADDRESS, (data))
#define SPICA_STX_RULES_9__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_RULES_9__ADDRESS, (data), (mask))
#  define SPICA_STX_RULES_9__INNER_EYE2__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_STX_RULES_9__INNER_EYE2__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_STX_RULES_9__INNER_EYE2__READ(die, channel)         SPICA_STX_RULES_9__INNER_EYE2__GET(SPICA_STX_RULES_9__READ(die, channel))
#  define SPICA_STX_RULES_9__INNER_EYE2__WRITE(die, channel, fdata) SPICA_STX_RULES_9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_9__INNER_EYE2__RMW(die, channel, fdata) SPICA_STX_RULES_9__RMW(die, (channel), (fdata)<<0, 0xffff)
#  define SPICA_STX_RULES_9__INNER_EYE2__MASK                       0xffff
#  define SPICA_STX_RULES_9__INNER_EYE2__OFFSET                     0

#define SPICA_STX_FW_STATUS__ADDRESS                      0x1e8937
#define SPICA_STX_FW_STATUS__DEFAULT                      0x0
#define SPICA_STX_FW_STATUS__ICOUNT                        15
#define SPICA_STX_FW_STATUS__ISPAN                         0x100
#define SPICA_STX_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_FW_STATUS__ADDRESS)
#define SPICA_STX_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_FW_STATUS__ADDRESS)
#define SPICA_STX_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_FW_STATUS__ADDRESS, (data))
#define SPICA_STX_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_STX_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_STX_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_STX_FW_STATUS__LOCKED__READ(die, channel)         SPICA_STX_FW_STATUS__LOCKED__GET(SPICA_STX_FW_STATUS__READ(die, channel))
#  define SPICA_STX_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_STX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_STX_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_STX_FW_STATUS__RMW(die, (channel), (fdata)<<15, 0x8000)
#  define SPICA_STX_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_STX_FW_STATUS__LOCKED__OFFSET                     15
#  define SPICA_STX_FW_STATUS__STATE__SET(rdata, fdata)         (((rdata) & 0x80ff) | (((uint32_t)(fdata) << 8) & 0x7f00))
#  define SPICA_STX_FW_STATUS__STATE__GET(rdata)                (((rdata) >> 8) & 0x7f)
#  define SPICA_STX_FW_STATUS__STATE__READ(die, channel)         SPICA_STX_FW_STATUS__STATE__GET(SPICA_STX_FW_STATUS__READ(die, channel))
#  define SPICA_STX_FW_STATUS__STATE__WRITE(die, channel, fdata) SPICA_STX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_STX_FW_STATUS__STATE__RMW(die, channel, fdata) SPICA_STX_FW_STATUS__RMW(die, (channel), (fdata)<<8, 0x7f00)
#  define SPICA_STX_FW_STATUS__STATE__MASK                       0x7f
#  define SPICA_STX_FW_STATUS__STATE__OFFSET                     8
#  define SPICA_STX_FW_STATUS__RESET_COUNT__SET(rdata, fdata)         (((rdata) & 0xff00) | (((uint32_t)(fdata) << 0) & 0xff))
#  define SPICA_STX_FW_STATUS__RESET_COUNT__GET(rdata)                (((rdata) >> 0) & 0xff)
#  define SPICA_STX_FW_STATUS__RESET_COUNT__READ(die, channel)         SPICA_STX_FW_STATUS__RESET_COUNT__GET(SPICA_STX_FW_STATUS__READ(die, channel))
#  define SPICA_STX_FW_STATUS__RESET_COUNT__WRITE(die, channel, fdata) SPICA_STX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_STX_FW_STATUS__RESET_COUNT__RMW(die, channel, fdata) SPICA_STX_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0xff)
#  define SPICA_STX_FW_STATUS__RESET_COUNT__MASK                       0xff
#  define SPICA_STX_FW_STATUS__RESET_COUNT__OFFSET                     0

#define SPICA_STX_CH_STATUS0__ADDRESS                      0x1e8938
#define SPICA_STX_CH_STATUS0__DEFAULT                      0x0
#define SPICA_STX_CH_STATUS0__ICOUNT                        15
#define SPICA_STX_CH_STATUS0__ISPAN                         0x100
#define SPICA_STX_CH_STATUS0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_STX_CH_STATUS0__ADDRESS)
#define SPICA_STX_CH_STATUS0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_STX_CH_STATUS0__ADDRESS)
#define SPICA_STX_CH_STATUS0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_STX_CH_STATUS0__ADDRESS, (data))
#define SPICA_STX_CH_STATUS0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_STX_CH_STATUS0__ADDRESS, (data), (mask))
#  define SPICA_STX_CH_STATUS0__LOL__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_STX_CH_STATUS0__LOL__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_STX_CH_STATUS0__LOL__READ(die, channel)         SPICA_STX_CH_STATUS0__LOL__GET(SPICA_STX_CH_STATUS0__READ(die, channel))
#  define SPICA_STX_CH_STATUS0__LOL__WRITE(die, channel, fdata) SPICA_STX_CH_STATUS0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_STX_CH_STATUS0__LOL__RMW(die, channel, fdata) SPICA_STX_CH_STATUS0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_STX_CH_STATUS0__LOL__MASK                       0x1
#  define SPICA_STX_CH_STATUS0__LOL__OFFSET                     0

#define SPICA_SMTX_PLL_FW_STATUS__ADDRESS                      0x1e8ef5
#define SPICA_SMTX_PLL_FW_STATUS__DEFAULT                      0x0
#define SPICA_SMTX_PLL_FW_STATUS__ICOUNT                        5
#define SPICA_SMTX_PLL_FW_STATUS__ISPAN                         0x800
#define SPICA_SMTX_PLL_FW_STATUS__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_PLL_FW_STATUS__ADDRESS)
#define SPICA_SMTX_PLL_FW_STATUS__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_PLL_FW_STATUS__ADDRESS)
#define SPICA_SMTX_PLL_FW_STATUS__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_PLL_FW_STATUS__ADDRESS, (data))
#define SPICA_SMTX_PLL_FW_STATUS__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_PLL_FW_STATUS__ADDRESS, (data), (mask))
#  define SPICA_SMTX_PLL_FW_STATUS__LOCKED__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SMTX_PLL_FW_STATUS__LOCKED__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SMTX_PLL_FW_STATUS__LOCKED__READ(die, channel)         SPICA_SMTX_PLL_FW_STATUS__LOCKED__GET(SPICA_SMTX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_SMTX_PLL_FW_STATUS__LOCKED__WRITE(die, channel, fdata) SPICA_SMTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PLL_FW_STATUS__LOCKED__RMW(die, channel, fdata) SPICA_SMTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_PLL_FW_STATUS__LOCKED__MASK                       0x1
#  define SPICA_SMTX_PLL_FW_STATUS__LOCKED__OFFSET                     5
#  define SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__SET(rdata, fdata)         (((rdata) & 0xe0) | (((uint32_t)(fdata) << 0) & 0x1f))
#  define SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__GET(rdata)                (((rdata) >> 0) & 0x1f)
#  define SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__READ(die, channel)         SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__GET(SPICA_SMTX_PLL_FW_STATUS__READ(die, channel))
#  define SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__WRITE(die, channel, fdata) SPICA_SMTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__RMW(die, channel, fdata) SPICA_SMTX_PLL_FW_STATUS__RMW(die, (channel), (fdata)<<0, 0x1f)
#  define SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__MASK                       0x1f
#  define SPICA_SMTX_PLL_FW_STATUS__PLL_FSM_STATE__OFFSET                     0

#define SPICA_SMTX_TMON_CTRL0__ADDRESS                      0x1e8dd4
#define SPICA_SMTX_TMON_CTRL0__DEFAULT                      0x0
#define SPICA_SMTX_TMON_CTRL0__ICOUNT                        5
#define SPICA_SMTX_TMON_CTRL0__ISPAN                         0x800
#define SPICA_SMTX_TMON_CTRL0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_SMTX_TMON_CTRL0__ADDRESS)
#define SPICA_SMTX_TMON_CTRL0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_SMTX_TMON_CTRL0__ADDRESS)
#define SPICA_SMTX_TMON_CTRL0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_SMTX_TMON_CTRL0__ADDRESS, (data))
#define SPICA_SMTX_TMON_CTRL0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_SMTX_TMON_CTRL0__ADDRESS, (data), (mask))
#  define SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xdf) | (((uint32_t)(fdata) << 5) & 0x20))
#  define SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(rdata)                (((rdata) >> 5) & 0x1)
#  define SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__READ(die, channel)         SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__GET(SPICA_SMTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__WRITE(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__RMW(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<5, 0x20)
#  define SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__MASK                       0x1
#  define SPICA_SMTX_TMON_CTRL0__BIAS_TMON_PARAMS_OVERRIDE__OFFSET                     5
#  define SPICA_SMTX_TMON_CTRL0__DISABLE__SET(rdata, fdata)         (((rdata) & 0xef) | (((uint32_t)(fdata) << 4) & 0x10))
#  define SPICA_SMTX_TMON_CTRL0__DISABLE__GET(rdata)                (((rdata) >> 4) & 0x1)
#  define SPICA_SMTX_TMON_CTRL0__DISABLE__READ(die, channel)         SPICA_SMTX_TMON_CTRL0__DISABLE__GET(SPICA_SMTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_SMTX_TMON_CTRL0__DISABLE__WRITE(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_TMON_CTRL0__DISABLE__RMW(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<4, 0x10)
#  define SPICA_SMTX_TMON_CTRL0__DISABLE__MASK                       0x1
#  define SPICA_SMTX_TMON_CTRL0__DISABLE__OFFSET                     4
#  define SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__SET(rdata, fdata)         (((rdata) & 0xf7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__READ(die, channel)         SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__GET(SPICA_SMTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__WRITE(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__RMW(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<3, 0x8)
#  define SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__MASK                       0x1
#  define SPICA_SMTX_TMON_CTRL0__IADC_OVERRIDE_ENABLE__OFFSET                     3
#  define SPICA_SMTX_TMON_CTRL0__IADC_VAL__SET(rdata, fdata)         (((rdata) & 0xf8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_SMTX_TMON_CTRL0__IADC_VAL__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_SMTX_TMON_CTRL0__IADC_VAL__READ(die, channel)         SPICA_SMTX_TMON_CTRL0__IADC_VAL__GET(SPICA_SMTX_TMON_CTRL0__READ(die, channel))
#  define SPICA_SMTX_TMON_CTRL0__IADC_VAL__WRITE(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SMTX_TMON_CTRL0__IADC_VAL__RMW(die, channel, fdata) SPICA_SMTX_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x7)
#  define SPICA_SMTX_TMON_CTRL0__IADC_VAL__MASK                       0x7
#  define SPICA_SMTX_TMON_CTRL0__IADC_VAL__OFFSET                     0

#define SPICA_ERU_TMON_CTRL0__ADDRESS                      0x1ed9f0
#define SPICA_ERU_TMON_CTRL0__DEFAULT                      0x0
#define SPICA_ERU_TMON_CTRL0__ICOUNT                        2
#define SPICA_ERU_TMON_CTRL0__ISPAN                         0x300
#define SPICA_ERU_TMON_CTRL0__IADDR(die, channel)           spica_reg_channel_addr(die, channel, SPICA_ERU_TMON_CTRL0__ADDRESS)
#define SPICA_ERU_TMON_CTRL0__READ(die, channel)            spica_reg_channel_read(die,   (channel), SPICA_ERU_TMON_CTRL0__ADDRESS)
#define SPICA_ERU_TMON_CTRL0__WRITE(die, channel, data)     spica_reg_channel_write(die,  (channel), SPICA_ERU_TMON_CTRL0__ADDRESS, (data))
#define SPICA_ERU_TMON_CTRL0__RMW(die, channel, data, mask) spica_reg_channel_rmw(die,    (channel), SPICA_ERU_TMON_CTRL0__ADDRESS, (data), (mask))
#  define SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xfe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__READ(die, channel)         SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__GET(SPICA_ERU_TMON_CTRL0__READ(die, channel))
#  define SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__WRITE(die, channel, fdata) SPICA_ERU_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__RMW(die, channel, fdata) SPICA_ERU_TMON_CTRL0__RMW(die, (channel), (fdata)<<0, 0x1)
#  define SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__MASK                       0x1
#  define SPICA_ERU_TMON_CTRL0__ERU_TMON_PARAMS_OVERRIDE__OFFSET                     0

#define SPICA_TOP_RULES_0__ADDRESS                      0x1e003e
#define SPICA_TOP_RULES_0__DEFAULT                      0x0
#define SPICA_TOP_RULES_0__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_0__ADDRESS)
#define SPICA_TOP_RULES_0__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_0__ADDRESS, (data))
#define SPICA_TOP_RULES_0__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_0__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_0__PROTOCOL_MODE__SET(rdata, fdata)         (((rdata) & 0x81ff) | (((uint32_t)(fdata) << 9) & 0x7e00))
#  define SPICA_TOP_RULES_0__PROTOCOL_MODE__GET(rdata)                (((rdata) >> 9) & 0x3f)
#  define SPICA_TOP_RULES_0__PROTOCOL_MODE__READ(die)                SPICA_TOP_RULES_0__PROTOCOL_MODE__GET(SPICA_TOP_RULES_0__READ(die))
#  define SPICA_TOP_RULES_0__PROTOCOL_MODE__WRITE(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<9, 0x7e00)
#  define SPICA_TOP_RULES_0__PROTOCOL_MODE__RMW(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<9, 0x7e00)
#  define SPICA_TOP_RULES_0__PROTOCOL_MODE__MASK                       0x3f
#  define SPICA_TOP_RULES_0__PROTOCOL_MODE__OFFSET                     9
#  define SPICA_TOP_RULES_0__OP_MODE__SET(rdata, fdata)         (((rdata) & 0xfe0f) | (((uint32_t)(fdata) << 4) & 0x1f0))
#  define SPICA_TOP_RULES_0__OP_MODE__GET(rdata)                (((rdata) >> 4) & 0x1f)
#  define SPICA_TOP_RULES_0__OP_MODE__READ(die)                SPICA_TOP_RULES_0__OP_MODE__GET(SPICA_TOP_RULES_0__READ(die))
#  define SPICA_TOP_RULES_0__OP_MODE__WRITE(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<4, 0x1f0)
#  define SPICA_TOP_RULES_0__OP_MODE__RMW(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<4, 0x1f0)
#  define SPICA_TOP_RULES_0__OP_MODE__MASK                       0x1f
#  define SPICA_TOP_RULES_0__OP_MODE__OFFSET                     4
#  define SPICA_TOP_RULES_0__CHIP_INIT_REQ__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_TOP_RULES_0__CHIP_INIT_REQ__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_TOP_RULES_0__CHIP_INIT_REQ__READ(die)                SPICA_TOP_RULES_0__CHIP_INIT_REQ__GET(SPICA_TOP_RULES_0__READ(die))
#  define SPICA_TOP_RULES_0__CHIP_INIT_REQ__WRITE(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_TOP_RULES_0__CHIP_INIT_REQ__RMW(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_TOP_RULES_0__CHIP_INIT_REQ__MASK                       0x1
#  define SPICA_TOP_RULES_0__CHIP_INIT_REQ__OFFSET                     3
#  define SPICA_TOP_RULES_0__CHIP_INIT_ACK__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_TOP_RULES_0__CHIP_INIT_ACK__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_TOP_RULES_0__CHIP_INIT_ACK__READ(die)                SPICA_TOP_RULES_0__CHIP_INIT_ACK__GET(SPICA_TOP_RULES_0__READ(die))
#  define SPICA_TOP_RULES_0__CHIP_INIT_ACK__WRITE(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_TOP_RULES_0__CHIP_INIT_ACK__RMW(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_TOP_RULES_0__CHIP_INIT_ACK__MASK                       0x1
#  define SPICA_TOP_RULES_0__CHIP_INIT_ACK__OFFSET                     2
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__READ(die)                SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__GET(SPICA_TOP_RULES_0__READ(die))
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__WRITE(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__RMW(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__MASK                       0x1
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_REQ__OFFSET                     1
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__READ(die)                SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__GET(SPICA_TOP_RULES_0__READ(die))
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__WRITE(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__RMW(die, fdata)           SPICA_TOP_RULES_0__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__MASK                       0x1
#  define SPICA_TOP_RULES_0__UPDATE_ALL_RULES_ACK__OFFSET                     0

#define SPICA_TOP_RULES_7__ADDRESS                      0x1e0045
#define SPICA_TOP_RULES_7__DEFAULT                      0x0
#define SPICA_TOP_RULES_7__READ(die)                  spica_reg_read(die, SPICA_TOP_RULES_7__ADDRESS)
#define SPICA_TOP_RULES_7__WRITE(die, data)             spica_reg_write(die, SPICA_TOP_RULES_7__ADDRESS, (data))
#define SPICA_TOP_RULES_7__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_TOP_RULES_7__ADDRESS, (data), (mask))
#  define SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__READ(die)                SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__GET(SPICA_TOP_RULES_7__READ(die))
#  define SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__WRITE(die, fdata)           SPICA_TOP_RULES_7__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__RMW(die, fdata)           SPICA_TOP_RULES_7__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__MASK                       0x1
#  define SPICA_TOP_RULES_7__DISABLE_ALL_BUNDLES__OFFSET                     12
#  define SPICA_TOP_RULES_7__DRIVER_TYPE__SET(rdata, fdata)         (((rdata) & 0xfff8) | (((uint32_t)(fdata) << 0) & 0x7))
#  define SPICA_TOP_RULES_7__DRIVER_TYPE__GET(rdata)                (((rdata) >> 0) & 0x7)
#  define SPICA_TOP_RULES_7__DRIVER_TYPE__READ(die)                SPICA_TOP_RULES_7__DRIVER_TYPE__GET(SPICA_TOP_RULES_7__READ(die))
#  define SPICA_TOP_RULES_7__DRIVER_TYPE__WRITE(die, fdata)           SPICA_TOP_RULES_7__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_TOP_RULES_7__DRIVER_TYPE__RMW(die, fdata)           SPICA_TOP_RULES_7__RMW(die, (fdata)<<0, 0x7)
#  define SPICA_TOP_RULES_7__DRIVER_TYPE__MASK                       0x7
#  define SPICA_TOP_RULES_7__DRIVER_TYPE__OFFSET                     0

#define SPICA_MCU_BOOT_CTRL__ADDRESS                      0x1ee062
#define SPICA_MCU_BOOT_CTRL__DEFAULT                      0x0
#define SPICA_MCU_BOOT_CTRL__READ(die)                  spica_reg_read(die, SPICA_MCU_BOOT_CTRL__ADDRESS)
#define SPICA_MCU_BOOT_CTRL__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_BOOT_CTRL__ADDRESS, (data))
#define SPICA_MCU_BOOT_CTRL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_BOOT_CTRL__ADDRESS, (data), (mask))
#  define SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__READ(die)                SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__FORCE_SELF_INIT__OFFSET                     15
#  define SPICA_MCU_BOOT_CTRL__SELF_INIT__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MCU_BOOT_CTRL__SELF_INIT__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__SELF_INIT__READ(die)                SPICA_MCU_BOOT_CTRL__SELF_INIT__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__SELF_INIT__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_BOOT_CTRL__SELF_INIT__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_BOOT_CTRL__SELF_INIT__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__SELF_INIT__OFFSET                     14
#  define SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__READ(die)                SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__DONT_JUMP_TO_UPGRADE_MODE_ON_EMPTY_EEPROM__OFFSET                     12
#  define SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__READ(die)                SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__EFUSE_FETCH__OFFSET                     11
#  define SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__READ(die)                SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__EFUSE_POWERUP__OFFSET                     10
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__SET(rdata, fdata)         (((rdata) & 0xfdff) | (((uint32_t)(fdata) << 9) & 0x200))
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__GET(rdata)                (((rdata) >> 9) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__READ(die)                SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<9, 0x200)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_FAILURE__OFFSET                     9
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__READ(die)                SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_WRITE__OFFSET                     8
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__READ(die)                SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__MASK                       0xf
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER__OFFSET                     4
#  define SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__SET(rdata, fdata)         (((rdata) & 0xfff7) | (((uint32_t)(fdata) << 3) & 0x8))
#  define SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__GET(rdata)                (((rdata) >> 3) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__READ(die)                SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<3, 0x8)
#  define SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__ALLOW_SPARE_DEBUG__OFFSET                     3
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__SET(rdata, fdata)         (((rdata) & 0xfffb) | (((uint32_t)(fdata) << 2) & 0x4))
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__GET(rdata)                (((rdata) >> 2) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__READ(die)                SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<2, 0x4)
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__SPI_BYPASS_DELAY_AFTER_RESET__OFFSET                     2
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__READ(die)                SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__SPI_CLK_DIVIDER_OVERRIDE__OFFSET                     1
#  define SPICA_MCU_BOOT_CTRL__UNSTICK__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_MCU_BOOT_CTRL__UNSTICK__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_MCU_BOOT_CTRL__UNSTICK__READ(die)                SPICA_MCU_BOOT_CTRL__UNSTICK__GET(SPICA_MCU_BOOT_CTRL__READ(die))
#  define SPICA_MCU_BOOT_CTRL__UNSTICK__WRITE(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_BOOT_CTRL__UNSTICK__RMW(die, fdata)           SPICA_MCU_BOOT_CTRL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_MCU_BOOT_CTRL__UNSTICK__MASK                       0x1
#  define SPICA_MCU_BOOT_CTRL__UNSTICK__OFFSET                     0

#define SPICA_MCU_BOOT_DELAYS__ADDRESS                      0x1ee063
#define SPICA_MCU_BOOT_DELAYS__DEFAULT                      0x0
#define SPICA_MCU_BOOT_DELAYS__READ(die)                  spica_reg_read(die, SPICA_MCU_BOOT_DELAYS__ADDRESS)
#define SPICA_MCU_BOOT_DELAYS__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_BOOT_DELAYS__ADDRESS, (data))
#define SPICA_MCU_BOOT_DELAYS__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_BOOT_DELAYS__ADDRESS, (data), (mask))
#  define SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__READ(die)                SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__GET(SPICA_MCU_BOOT_DELAYS__READ(die))
#  define SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__WRITE(die, fdata)           SPICA_MCU_BOOT_DELAYS__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__RMW(die, fdata)           SPICA_MCU_BOOT_DELAYS__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__MASK                       0xf
#  define SPICA_MCU_BOOT_DELAYS__POST_RESET_WAIT_MULTIPLIER__OFFSET                     4
#  define SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__READ(die)                SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__GET(SPICA_MCU_BOOT_DELAYS__READ(die))
#  define SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__WRITE(die, fdata)           SPICA_MCU_BOOT_DELAYS__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__RMW(die, fdata)           SPICA_MCU_BOOT_DELAYS__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__MASK                       0xf
#  define SPICA_MCU_BOOT_DELAYS__SPI_RESET_TIMEOUT_MULTIPLIER__OFFSET                     0

#define SPICA_MCU_LOOP_COUNT__ADDRESS                      0x1ee064
#define SPICA_MCU_LOOP_COUNT__DEFAULT                      0x0
#define SPICA_MCU_LOOP_COUNT__READ(die)                  spica_reg_read(die, SPICA_MCU_LOOP_COUNT__ADDRESS)
#define SPICA_MCU_LOOP_COUNT__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_LOOP_COUNT__ADDRESS, (data))
#define SPICA_MCU_LOOP_COUNT__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_LOOP_COUNT__ADDRESS, (data), (mask))
#  define SPICA_MCU_LOOP_COUNT__COUNT__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_MCU_LOOP_COUNT__COUNT__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_MCU_LOOP_COUNT__COUNT__READ(die)                SPICA_MCU_LOOP_COUNT__COUNT__GET(SPICA_MCU_LOOP_COUNT__READ(die))
#  define SPICA_MCU_LOOP_COUNT__COUNT__WRITE(die, fdata)           SPICA_MCU_LOOP_COUNT__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_LOOP_COUNT__COUNT__RMW(die, fdata)           SPICA_MCU_LOOP_COUNT__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_MCU_LOOP_COUNT__COUNT__MASK                       0xffff
#  define SPICA_MCU_LOOP_COUNT__COUNT__OFFSET                     0

#define SPICA_MCU_BOOT_STATUS__ADDRESS                      0x1ee054
#define SPICA_MCU_BOOT_STATUS__DEFAULT                      0x0
#define SPICA_MCU_BOOT_STATUS__READ(die)                  spica_reg_read(die, SPICA_MCU_BOOT_STATUS__ADDRESS)
#define SPICA_MCU_BOOT_STATUS__WRITE(die, data)             spica_reg_write(die, SPICA_MCU_BOOT_STATUS__ADDRESS, (data))
#define SPICA_MCU_BOOT_STATUS__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_MCU_BOOT_STATUS__ADDRESS, (data), (mask))
#  define SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__SET(rdata, fdata)         (((rdata) & 0x7fff) | (((uint32_t)(fdata) << 15) & 0x8000))
#  define SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__GET(rdata)                (((rdata) >> 15) & 0x1)
#  define SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__READ(die)                SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<15, 0x8000)
#  define SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__MASK                       0x1
#  define SPICA_MCU_BOOT_STATUS__BOOT_COMPLETE__OFFSET                     15
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__SET(rdata, fdata)         (((rdata) & 0xbfff) | (((uint32_t)(fdata) << 14) & 0x4000))
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__GET(rdata)                (((rdata) >> 14) & 0x1)
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__READ(die)                SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<14, 0x4000)
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__MASK                       0x1
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_FAILED__OFFSET                     14
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__SET(rdata, fdata)         (((rdata) & 0xdfff) | (((uint32_t)(fdata) << 13) & 0x2000))
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__GET(rdata)                (((rdata) >> 13) & 0x1)
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__READ(die)                SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<13, 0x2000)
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__MASK                       0x1
#  define SPICA_MCU_BOOT_STATUS__BOOT_FROM_EEPROM_ABORTED__OFFSET                     13
#  define SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__SET(rdata, fdata)         (((rdata) & 0xefff) | (((uint32_t)(fdata) << 12) & 0x1000))
#  define SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__GET(rdata)                (((rdata) >> 12) & 0x1)
#  define SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__READ(die)                SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<12, 0x1000)
#  define SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__MASK                       0x1
#  define SPICA_MCU_BOOT_STATUS__EEPROM_EMPTY__OFFSET                     12
#  define SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__SET(rdata, fdata)         (((rdata) & 0xf7ff) | (((uint32_t)(fdata) << 11) & 0x800))
#  define SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__GET(rdata)                (((rdata) >> 11) & 0x1)
#  define SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__READ(die)                SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<11, 0x800)
#  define SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__MASK                       0x1
#  define SPICA_MCU_BOOT_STATUS__BOOT_CORRUPT_IMAGE_DETECTED__OFFSET                     11
#  define SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__SET(rdata, fdata)         (((rdata) & 0xfeff) | (((uint32_t)(fdata) << 8) & 0x100))
#  define SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__GET(rdata)                (((rdata) >> 8) & 0x1)
#  define SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__READ(die)                SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<8, 0x100)
#  define SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__MASK                       0x1
#  define SPICA_MCU_BOOT_STATUS__BOOT_IN_PROGRESS__OFFSET                     8
#  define SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__SET(rdata, fdata)         (((rdata) & 0xff0f) | (((uint32_t)(fdata) << 4) & 0xf0))
#  define SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__GET(rdata)                (((rdata) >> 4) & 0xf)
#  define SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__READ(die)                SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<4, 0xf0)
#  define SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__MASK                       0xf
#  define SPICA_MCU_BOOT_STATUS__BOOT_RETRIES__OFFSET                     4
#  define SPICA_MCU_BOOT_STATUS__STATUS_CODE__SET(rdata, fdata)         (((rdata) & 0xfff0) | (((uint32_t)(fdata) << 0) & 0xf))
#  define SPICA_MCU_BOOT_STATUS__STATUS_CODE__GET(rdata)                (((rdata) >> 0) & 0xf)
#  define SPICA_MCU_BOOT_STATUS__STATUS_CODE__READ(die)                SPICA_MCU_BOOT_STATUS__STATUS_CODE__GET(SPICA_MCU_BOOT_STATUS__READ(die))
#  define SPICA_MCU_BOOT_STATUS__STATUS_CODE__WRITE(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_BOOT_STATUS__STATUS_CODE__RMW(die, fdata)           SPICA_MCU_BOOT_STATUS__RMW(die, (fdata)<<0, 0xf)
#  define SPICA_MCU_BOOT_STATUS__STATUS_CODE__MASK                       0xf
#  define SPICA_MCU_BOOT_STATUS__STATUS_CODE__OFFSET                     0

#define SPICA_EFUSE_EF_DEVICE_CONTROL__ADDRESS                      0x1e0508
#define SPICA_EFUSE_EF_DEVICE_CONTROL__DEFAULT                      0x3
#define SPICA_EFUSE_EF_DEVICE_CONTROL__READ(die)                  spica_reg_read(die, SPICA_EFUSE_EF_DEVICE_CONTROL__ADDRESS)
#define SPICA_EFUSE_EF_DEVICE_CONTROL__WRITE(die, data)             spica_reg_write(die, SPICA_EFUSE_EF_DEVICE_CONTROL__ADDRESS, (data))
#define SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_EFUSE_EF_DEVICE_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__READ(die)                SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__GET(SPICA_EFUSE_EF_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__WRITE(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<11, 0xf800)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__RMW(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<11, 0xf800)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__MASK                       0x1f
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED1__OFFSET                     11
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__READ(die)                SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__GET(SPICA_EFUSE_EF_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__WRITE(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__RMW(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__MASK                       0x1
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__HOST_INTFACE__OFFSET                     10
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__READ(die)                SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__GET(SPICA_EFUSE_EF_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__WRITE(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<8, 0x300)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__RMW(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<8, 0x300)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__MASK                       0x3
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__DRV_TYPE__OFFSET                     8
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__READ(die)                SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__GET(SPICA_EFUSE_EF_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__WRITE(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<2, 0xfc)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__RMW(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<2, 0xfc)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__MASK                       0x3f
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__UNUSED__OFFSET                     2
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__READ(die)                SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__GET(SPICA_EFUSE_EF_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__WRITE(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__RMW(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__MASK                       0x1
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__OIM_DISABLE__OFFSET                     1
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__READ(die)                SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__GET(SPICA_EFUSE_EF_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__WRITE(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__RMW(die, fdata)           SPICA_EFUSE_EF_DEVICE_CONTROL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__MASK                       0x1
#  define SPICA_EFUSE_EF_DEVICE_CONTROL__SFEC_DISABLE__OFFSET                     0

#define SPICA_EFUSE_DEVICE_CONTROL__ADDRESS                      0x1e0508
#define SPICA_EFUSE_DEVICE_CONTROL__DEFAULT                      0x3
#define SPICA_EFUSE_DEVICE_CONTROL__READ(die)                  spica_reg_read(die, SPICA_EFUSE_DEVICE_CONTROL__ADDRESS)
#define SPICA_EFUSE_DEVICE_CONTROL__WRITE(die, data)             spica_reg_write(die, SPICA_EFUSE_DEVICE_CONTROL__ADDRESS, (data))
#define SPICA_EFUSE_DEVICE_CONTROL__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_EFUSE_DEVICE_CONTROL__ADDRESS, (data), (mask))
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__SET(rdata, fdata)         (((rdata) & 0x7ff) | (((uint32_t)(fdata) << 11) & 0xf800))
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__GET(rdata)                (((rdata) >> 11) & 0x1f)
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__READ(die)                SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__GET(SPICA_EFUSE_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__WRITE(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<11, 0xf800)
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__RMW(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<11, 0xf800)
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__MASK                       0x1f
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED1__OFFSET                     11
#  define SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__SET(rdata, fdata)         (((rdata) & 0xfbff) | (((uint32_t)(fdata) << 10) & 0x400))
#  define SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__GET(rdata)                (((rdata) >> 10) & 0x1)
#  define SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__READ(die)                SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__GET(SPICA_EFUSE_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__WRITE(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__RMW(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<10, 0x400)
#  define SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__MASK                       0x1
#  define SPICA_EFUSE_DEVICE_CONTROL__HOST_INTFACE__OFFSET                     10
#  define SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__SET(rdata, fdata)         (((rdata) & 0xfcff) | (((uint32_t)(fdata) << 8) & 0x300))
#  define SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__GET(rdata)                (((rdata) >> 8) & 0x3)
#  define SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__READ(die)                SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__GET(SPICA_EFUSE_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__WRITE(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<8, 0x300)
#  define SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__RMW(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<8, 0x300)
#  define SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__MASK                       0x3
#  define SPICA_EFUSE_DEVICE_CONTROL__DRV_TYPE__OFFSET                     8
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED__SET(rdata, fdata)         (((rdata) & 0xff03) | (((uint32_t)(fdata) << 2) & 0xfc))
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED__GET(rdata)                (((rdata) >> 2) & 0x3f)
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED__READ(die)                SPICA_EFUSE_DEVICE_CONTROL__UNUSED__GET(SPICA_EFUSE_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED__WRITE(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<2, 0xfc)
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED__RMW(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<2, 0xfc)
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED__MASK                       0x3f
#  define SPICA_EFUSE_DEVICE_CONTROL__UNUSED__OFFSET                     2
#  define SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__SET(rdata, fdata)         (((rdata) & 0xfffd) | (((uint32_t)(fdata) << 1) & 0x2))
#  define SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__GET(rdata)                (((rdata) >> 1) & 0x1)
#  define SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__READ(die)                SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__GET(SPICA_EFUSE_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__WRITE(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__RMW(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<1, 0x2)
#  define SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__MASK                       0x1
#  define SPICA_EFUSE_DEVICE_CONTROL__OIM_DISABLE__OFFSET                     1
#  define SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__SET(rdata, fdata)         (((rdata) & 0xfffe) | (((uint32_t)(fdata) << 0) & 0x1))
#  define SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__GET(rdata)                (((rdata) >> 0) & 0x1)
#  define SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__READ(die)                SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__GET(SPICA_EFUSE_DEVICE_CONTROL__READ(die))
#  define SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__WRITE(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__RMW(die, fdata)           SPICA_EFUSE_DEVICE_CONTROL__RMW(die, (fdata)<<0, 0x1)
#  define SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__MASK                       0x1
#  define SPICA_EFUSE_DEVICE_CONTROL__SFEC_DISABLE__OFFSET                     0

#define SPICA_EFUSE_PKG_REVISION__ADDRESS                      0x1e0565
#define SPICA_EFUSE_PKG_REVISION__DEFAULT                      0x0
#define SPICA_EFUSE_PKG_REVISION__READ(die)                  spica_reg_read(die, SPICA_EFUSE_PKG_REVISION__ADDRESS)
#define SPICA_EFUSE_PKG_REVISION__WRITE(die, data)             spica_reg_write(die, SPICA_EFUSE_PKG_REVISION__ADDRESS, (data))
#define SPICA_EFUSE_PKG_REVISION__RMW(die, data, mask)         spica_reg_rmw(die, SPICA_EFUSE_PKG_REVISION__ADDRESS, (data), (mask))
#  define SPICA_EFUSE_PKG_REVISION__REVISION__SET(rdata, fdata)         (((rdata) & 0x0) | (((uint32_t)(fdata) << 0) & 0xffff))
#  define SPICA_EFUSE_PKG_REVISION__REVISION__GET(rdata)                (((rdata) >> 0) & 0xffff)
#  define SPICA_EFUSE_PKG_REVISION__REVISION__READ(die)                SPICA_EFUSE_PKG_REVISION__REVISION__GET(SPICA_EFUSE_PKG_REVISION__READ(die))
#  define SPICA_EFUSE_PKG_REVISION__REVISION__WRITE(die, fdata)           SPICA_EFUSE_PKG_REVISION__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_EFUSE_PKG_REVISION__REVISION__RMW(die, fdata)           SPICA_EFUSE_PKG_REVISION__RMW(die, (fdata)<<0, 0xffff)
#  define SPICA_EFUSE_PKG_REVISION__REVISION__MASK                       0xffff
#  define SPICA_EFUSE_PKG_REVISION__REVISION__OFFSET                     0


#ifdef __cplusplus
} // closing brace for extern "C"
#endif

#endif // __SPICA_REGISTERS_H__
